{"ast":null,"code":"import { usePress } from \"@react-aria/interactions\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nexport function useToggle(props, state, ref) {\n  var _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    isRequired = props.isRequired,\n    isReadOnly = props.isReadOnly,\n    value = props.value,\n    name = props.name,\n    children = props.children,\n    ariaLabel = props['aria-label'],\n    ariaLabelledby = props['aria-labelledby'],\n    _props$validationStat = props.validationState,\n    validationState = _props$validationStat === void 0 ? 'valid' : _props$validationStat;\n  var onChange = function onChange(e) {\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n  var hasChildren = children != null;\n  var hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n  var _usePress = usePress({\n      isDisabled: isDisabled\n    }),\n    pressProps = _usePress.pressProps;\n  var _useFocusable = useFocusable(props, ref),\n    focusableProps = _useFocusable.focusableProps;\n  var interactions = mergeProps(pressProps, focusableProps);\n  var domProps = filterDOMProps(props, {\n    labelable: true\n  });\n  return {\n    inputProps: mergeProps(domProps, _babelRuntimeHelpersEsmExtends({\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      onChange: onChange,\n      disabled: isDisabled,\n      required: isRequired,\n      value: value,\n      name: name,\n      type: 'checkbox'\n    }, interactions))\n  };\n}","map":{"version":3,"names":["useToggle","props","state","ref","_props$isDisabled","isDisabled","isRequired","isReadOnly","value","name","children","ariaLabel","ariaLabelledby","_props$validationStat","validationState","onChange","e","stopPropagation","setSelected","target","checked","hasChildren","hasAriaLabel","console","warn","_usePress","usePress","pressProps","_useFocusable","useFocusable","focusableProps","interactions","mergeProps","domProps","filterDOMProps","labelable","inputProps","_babelRuntimeHelpersEsmExtends","undefined","disabled","required","type"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\toggle\\dist\\packages\\@react-aria\\toggle\\src\\useToggle.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaToggleProps} from '@react-types/checkbox';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface ToggleAria {\n  /**\n   * Props to be spread on the input element.\n   */\n  inputProps: InputHTMLAttributes<HTMLInputElement>\n}\n\n/**\n * Handles interactions for toggle elements, e.g. Checkboxes and Switches.\n */\nexport function useToggle(props: AriaToggleProps, state: ToggleState, ref: RefObject<HTMLElement>): ToggleAria {\n  let {\n    isDisabled = false,\n    isRequired,\n    isReadOnly,\n    value,\n    name,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    validationState = 'valid'\n  } = props;\n\n  let onChange = (e) => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {pressProps} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(props, ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  return {\n    inputProps: mergeProps(domProps, {\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      onChange,\n      disabled: isDisabled,\n      required: isRequired,\n      value,\n      name,\n      type: 'checkbox',\n      ...interactions\n    })\n  };\n}\n"],"mappings":";;;;OA6BO,SAASA,SAATA,CAAmBC,KAAnB,EAA2CC,KAA3C,EAA+DC,GAA/D,EAAwG;EAC7G,IAAAC,iBAAA,GAUIH,KAVJ,CACEI,UAAU;IAAVA,UAAU,GAAAD,iBAAA,cAAG,KADX,GAAAA,iBAAA;IAEFE,UAFE,GAUAL,KAVJ,CAEEK,UAFE;IAGFC,UAHE,GAUAN,KAVJ,CAGEM,UAHE;IAIFC,KAJE,GAUAP,KAVJ,CAIEO,KAJE;IAKFC,IALE,GAUAR,KAVJ,CAKEQ,IALE;IAMFC,QANE,GAUAT,KAVJ,CAMES,QANE;IAOYC,SAPZ,GAUAV,KAVJ,CAOE;IACmBW,cARjB,GAUAX,KAVJ,CAQE;IAAAY,qBAAA,GAEEZ,KAVJ,CASEa,eAAe;IAAfA,eAAe,GAAAD,qBAAA,cAAG,UAAAA,qBAAA;EAGpB,IAAIE,QAAQ,GAAI,SAAZA,QAAQA,CAAIC,CAAD,EAAO;IAGpBA,CAAC,CAACC,eAAF;IACAf,KAAK,CAACgB,WAAN,CAAkBF,CAAC,CAACG,MAAF,CAASC,OAA3B;EACD,CALD;EAOA,IAAIC,WAAW,GAAGX,QAAQ,IAAI,IAA9B;EACA,IAAIY,YAAY,GAAGX,SAAS,IAAI,IAAb,IAAqBC,cAAc,IAAI,IAA1D;EACA,IAAI,CAACS,WAAD,IAAgB,CAACC,YAArB,EAAmC;IACjCC,OAAO,CAACC,IAAR,CAAa,kFAAb;EACD;EAGD,IAAAC,SAAA,GAAmBC,QAAQ,CAAC;MAC1BrB,UAAA,EAAAA;IAD0B,CAAD,CAA3B;IAAKsB,UAAA,GAAAF,SAAA,CAAAE,UAAA;EAIL,IAAAC,aAAA,GAAuBC,YAAY,CAAC5B,KAAD,EAAQE,GAAR,CAAnC;IAAK2B,cAAA,GAAAF,aAAA,CAAAE,cAAA;EACL,IAAIC,YAAY,GAAGC,UAAU,CAACL,UAAD,EAAaG,cAAb,CAA7B;EACA,IAAIG,QAAQ,GAAGC,cAAc,CAACjC,KAAD,EAAQ;IAACkC,SAAS,EAAE;EAAZ,CAAR,CAA7B;EAEA,OAAO;IACLC,UAAU,EAAEJ,UAAU,CAACC,QAAD,EAAAI,8BAAA;MACpB,gBAAgBvB,eAAe,KAAK,SAApB,IAAiCwB,SAD7B;MAEpB,qBAAqBrC,KAAK,CAAC,mBAAD,CAFN;MAGpB,iBAAiBA,KAAK,CAAC,eAAD,CAHF;MAIpB,iBAAiBM,UAAU,IAAI+B,SAJX;MAKpBvB,QALoB,EAKpBA,QALoB;MAMpBwB,QAAQ,EAAElC,UANU;MAOpBmC,QAAQ,EAAElC,UAPU;MAQpBE,KARoB,EAQpBA,KARoB;MASpBC,IAToB,EASpBA,IAToB;MAUpBgC,IAAI,EAAE;IAVc,GAWjBV,YAXiB;EADjB,CAAP;AAeD"},"metadata":{},"sourceType":"module","externalDependencies":[]}