{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createContext = createContext;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/utils/createContext.tsx\";\nfunction createContext(rootComponentName) {\n  var Context = _react.default.createContext(null);\n  function Provider(props) {\n    var children = props.children,\n      providerProps = (0, _objectWithoutProperties2.default)(props, [\"children\"]);\n    var value = _react.default.useMemo(function () {\n      return providerProps;\n    }, Object.values(providerProps));\n    return _react.default.createElement(Context.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, children);\n  }\n  function useContext(consumerName) {\n    var context = _react.default.useContext(Context);\n    if (context === null) {\n      throw new Error(\"`\" + consumerName + \"` must be used within `\" + rootComponentName + \"`\");\n    }\n    return context;\n  }\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","createContext","rootComponentName","Context","default","Provider","props","children","providerProps","_objectWithoutProperties2","value","useMemo","Object","values","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useContext","consumerName","context","Error","displayName"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\utils\\createContext.tsx"],"sourcesContent":["import React from 'react';\n\nfunction createContext<ContextValueType extends object>(\n  rootComponentName: string\n) {\n  const Context = React.createContext<ContextValueType>(null as any);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...providerProps } = props;\n    // Only re-memoize when prop values change\n    const value = React.useMemo(\n      () => providerProps,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Object.values(providerProps)\n    ) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context === null) {\n      throw new Error(\n        `\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``\n      );\n    }\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\nexport { createContext };\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;;AAEA,SAASC,aAATA,CACEC,iBADF,EAEE;EACA,IAAMC,OAAO,GAAGL,MAAA,CAAAM,OAAA,CAAMH,aAAN,CAAsC,IAAtC,CAAhB;EAEA,SAASI,QAATA,CAAkBC,KAAlB,EAA2E;IAAA,IACjEC,QADiE,GAClCD,KADkC,CACjEC,QADiE;MACpDC,aADoD,OAAAC,yBAAA,CAAAL,OAAA,EAClCE,KADkC;IAGzE,IAAMI,KAAK,GAAGZ,MAAA,CAAAM,OAAA,CAAMO,OAAN,CACZ;MAAA,OAAMH,aAAN;IAAA,CADY,EAGZI,MAAM,CAACC,MAAP,CAAcL,aAAd,CAHY,CAAd;IAKA,OAAOV,MAAA,CAAAM,OAAA,CAAAU,aAAA,CAACX,OAAD,CAASE,QAAT;MAAkBK,KAAK,EAAEA,KAAzB;MAAAK,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAiCb,QAAjC,CAAP;EACD;EAED,SAASc,UAATA,CAAoBC,YAApB,EAA0C;IACxC,IAAMC,OAAO,GAAGzB,MAAA,CAAAM,OAAA,CAAMiB,UAAN,CAAiBlB,OAAjB,CAAhB;IACA,IAAIoB,OAAO,KAAK,IAAhB,EAAsB;MACpB,MAAM,IAAIC,KAAJ,OACCF,YADD,+BACyCpB,iBADzC,OAAN;IAGD;IACD,OAAOqB,OAAP;EACD;EAEDlB,QAAQ,CAACoB,WAAT,GAAuBvB,iBAAiB,GAAG,UAA3C;EACA,OAAO,CAACG,QAAD,EAAWgB,UAAX,CAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}