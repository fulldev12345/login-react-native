{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from \"./SafeAreaContext\";\nvar TOP = 8,\n  RIGHT = 4,\n  BOTTOM = 2,\n  LEFT = 1,\n  ALL = 15;\nvar edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport function SafeAreaView(_ref) {\n  var _ref$style = _ref.style,\n    style = _ref$style === void 0 ? {} : _ref$style,\n    mode = _ref.mode,\n    edges = _ref.edges,\n    rest = _objectWithoutProperties(_ref, [\"style\", \"mode\", \"edges\"]);\n  var insets = useSafeAreaInsets();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    var flatStyle = StyleSheet.flatten(style);\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n        margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n        _flatStyle$marginVert = flatStyle.marginVertical,\n        marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n        _flatStyle$marginHori = flatStyle.marginHorizontal,\n        marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n        _flatStyle$marginTop = flatStyle.marginTop,\n        marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n        _flatStyle$marginRigh = flatStyle.marginRight,\n        marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n        _flatStyle$marginBott = flatStyle.marginBottom,\n        marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n        _flatStyle$marginLeft = flatStyle.marginLeft,\n        marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n        padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n        _flatStyle$paddingVer = flatStyle.paddingVertical,\n        paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n        _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n        paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n        _flatStyle$paddingTop = flatStyle.paddingTop,\n        paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n        _flatStyle$paddingRig = flatStyle.paddingRight,\n        paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n        _flatStyle$paddingBot = flatStyle.paddingBottom,\n        paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n        _flatStyle$paddingLef = flatStyle.paddingLeft,\n        paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest));\n}","map":{"version":3,"names":["React","View","StyleSheet","useSafeAreaInsets","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","_ref","_ref$style","style","mode","edges","rest","_objectWithoutProperties","insets","edgeBitmask","reduce","accum","edge","appliedStyle","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","flatten","_flatStyle$margin","margin","_flatStyle$marginVert","marginVertical","_flatStyle$marginHori","marginHorizontal","_flatStyle$marginTop","marginTop","_flatStyle$marginRigh","marginRight","_flatStyle$marginBott","marginBottom","_flatStyle$marginLeft","marginLeft","marginStyle","_flatStyle$padding","padding","_flatStyle$paddingVer","paddingVertical","_flatStyle$paddingHor","paddingHorizontal","_flatStyle$paddingTop","paddingTop","_flatStyle$paddingRig","paddingRight","_flatStyle$paddingBot","paddingBottom","_flatStyle$paddingLef","paddingLeft","paddingStyle","createElement","_extends"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\react-native-safe-area-context\\lib\\module\\SafeAreaView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\nimport { Edge, NativeSafeAreaViewProps } from './SafeArea.types';\n\n// prettier-ignore\nconst TOP    = 0b1000,\n      RIGHT  = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT   = 0b0001,\n      ALL    = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap: Record<Edge, number> = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT,\n};\n\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}: NativeSafeAreaViewProps) {\n  const insets = useSafeAreaInsets();\n\n  const edgeBitmask =\n    edges != null\n      ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0)\n      : ALL;\n\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft,\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft,\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n\n  return <View style={appliedStyle} {...rest} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}