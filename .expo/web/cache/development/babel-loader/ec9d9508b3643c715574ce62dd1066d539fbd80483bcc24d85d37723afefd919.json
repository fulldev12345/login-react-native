{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Input = require(\"../../primitives/Input\");\nvar _Context = require(\"./Context\");\nvar _this = this,\n  _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/components/composites/NumberInput/NumberInputField.tsx\";\nvar NumberInputFiled = function NumberInputFiled(_ref, ref) {\n  var isDisabled = _ref.isDisabled,\n    props = (0, _objectWithoutProperties2.default)(_ref, [\"isDisabled\"]);\n  var _React$useContext = _react.default.useContext(_Context.NumberInputContext),\n    handleChange = _React$useContext.handleChange,\n    handleChangeWithoutCheck = _React$useContext.handleChangeWithoutCheck,\n    numberInputStepper = _React$useContext.numberInputStepper,\n    numberInputValue = _React$useContext.numberInputValue,\n    isControlled = _React$useContext.isControlled,\n    context = (0, _objectWithoutProperties2.default)(_React$useContext, [\"handleChange\", \"handleChangeWithoutCheck\", \"numberInputStepper\", \"numberInputValue\", \"isControlled\"]);\n  var changeHandler = function changeHandler(inputValue) {\n    var minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    var value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  var blurHandler = function blurHandler() {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  return _react.default.createElement(_Input.Input, (0, _extends2.default)({\n    p: 0,\n    pl: 2\n  }, context, props, {\n    onBlur: function onBlur() {\n      return blurHandler();\n    },\n    isDisabled: isDisabled || context.isDisabled,\n    onChangeText: function onChangeText(inputValue) {\n      return changeHandler(inputValue);\n    },\n    keyboardType: \"numeric\",\n    value: \"\" + numberInputValue,\n    InputRightElement: numberInputStepper,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }));\n};\nvar _default = _react.default.memo(_react.default.forwardRef(NumberInputFiled));\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_Input","_Context","NumberInputFiled","_ref","ref","isDisabled","props","_objectWithoutProperties2","default","_React$useContext","useContext","NumberInputContext","handleChange","handleChangeWithoutCheck","numberInputStepper","numberInputValue","isControlled","context","changeHandler","inputValue","minusIndex","indexOf","replace","value","parseInt","blurHandler","createElement","Input","_extends2","p","pl","onBlur","onChangeText","keyboardType","InputRightElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","memo","forwardRef"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\composites\\NumberInput\\NumberInputField.tsx"],"sourcesContent":["import React from 'react';\nimport { Input } from '../../primitives/Input';\nimport type { INumberInputContext, INumberInputFieldProps } from './types';\nimport { NumberInputContext } from './Context';\n\nconst NumberInputFiled = (\n  { isDisabled, ...props }: INumberInputFieldProps,\n  ref: any\n) => {\n  const {\n    handleChange,\n    handleChangeWithoutCheck,\n    numberInputStepper,\n    numberInputValue,\n    isControlled,\n    ...context\n  }: INumberInputContext & {\n    handleChange?: (value: string | number) => void;\n    numberInputStepper?: any;\n  } = React.useContext(NumberInputContext);\n  const changeHandler = (inputValue: any) => {\n    let minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    const value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);\n    else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);\n    else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  const blurHandler = () => {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  return (\n    <Input\n      p={0}\n      pl={2}\n      {...context}\n      {...props}\n      onBlur={() => blurHandler()}\n      isDisabled={isDisabled || context.isDisabled}\n      onChangeText={(inputValue) => changeHandler(inputValue)}\n      keyboardType=\"numeric\"\n      value={`${numberInputValue}`}\n      InputRightElement={numberInputStepper}\n      ref={ref}\n    />\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInputFiled));\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,QAAA,GAAAF,OAAA;;;AAEA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmBA,CAAAC,IAAA,EAEvBC,GAFuB,EAGpB;EAAA,IAFDC,UAEC,GAAAF,IAAA,CAFDE,UAEC;IAFcC,KAEd,OAAAC,yBAAA,CAAAC,OAAA,EAAAL,IAAA;EAAA,IAAAM,iBAAA,GAWCZ,MAAA,CAAAW,OAAA,CAAME,UAAN,CAAiBT,QAAA,CAAAU,kBAAjB,CAXD;IAEDC,YAFC,GAAAH,iBAAA,CAEDG,YAFC;IAGDC,wBAHC,GAAAJ,iBAAA,CAGDI,wBAHC;IAIDC,kBAJC,GAAAL,iBAAA,CAIDK,kBAJC;IAKDC,gBALC,GAAAN,iBAAA,CAKDM,gBALC;IAMDC,YANC,GAAAP,iBAAA,CAMDO,YANC;IAOEC,OAPF,OAAAV,yBAAA,CAAAC,OAAA,EAAAC,iBAAA;EAYH,IAAMS,aAAa,GAAG,SAAhBA,aAAgBA,CAACC,UAAD,EAAqB;IACzC,IAAIC,UAAU,GAAGD,UAAU,CAACE,OAAX,CAAmB,GAAnB,CAAjB;IACA,IAAID,UAAU,KAAK,CAAC,CAAhB,IAAqBA,UAAU,KAAK,CAAxC,EAA2C;MACzCD,UAAU,GAAGA,UAAU,CAACG,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAb;MACAH,UAAU,GAAG,MAAMA,UAAnB;IACD;IACD,IAAMI,KAAK,GAAGC,QAAQ,CAACL,UAAD,EAAa,EAAb,CAAtB;IACA,IAAIH,YAAJ,EAAkBJ,YAAY,IAAIA,YAAY,CAACW,KAAD,CAA5B,CAAlB,KACK,IAAIA,KAAJ,EAAWV,wBAAwB,IAAIA,wBAAwB,CAACU,KAAD,CAApD,CAAX,KACAV,wBAAwB,IAAIA,wBAAwB,CAAC,CAAD,CAApD;EACN,CAVD;EAWA,IAAMY,WAAW,GAAG,SAAdA,WAAcA,CAAA,EAAM;IACxB,IAAIV,gBAAJ,EAAsBH,YAAY,IAAIA,YAAY,CAACG,gBAAD,CAA5B;EACvB,CAFD;EAGA,OACElB,MAAA,CAAAW,OAAA,CAAAkB,aAAA,CAAC1B,MAAA,CAAA2B,KAAD,MAAAC,SAAA,CAAApB,OAAA;IACEqB,CAAC,EAAE,CADL;IAEEC,EAAE,EAAE;EAFN,GAGMb,OAHN,EAIMX,KAJN;IAKEyB,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMN,WAAW,EAAjB;IAAA,CALV;IAMEpB,UAAU,EAAEA,UAAU,IAAIY,OAAO,CAACZ,UANpC;IAOE2B,YAAY,EAAE,SAAAA,aAACb,UAAD;MAAA,OAAgBD,aAAa,CAACC,UAAD,CAA7B;IAAA,CAPhB;IAQEc,YAAY,EAAC,SARf;IASEV,KAAK,OAAKR,gBATZ;IAUEmB,iBAAiB,EAAEpB,kBAVrB;IAWEV,GAAG,EAAEA,GAXP;IAAA+B,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GADF;AAeD,CA5CD;eA8Ce5C,MAAA,CAAAW,OAAA,CAAMkC,IAAN,CAAW7C,MAAA,CAAAW,OAAA,CAAMmC,UAAN,CAAiBzC,gBAAjB,CAAX,C"},"metadata":{},"sourceType":"script","externalDependencies":[]}