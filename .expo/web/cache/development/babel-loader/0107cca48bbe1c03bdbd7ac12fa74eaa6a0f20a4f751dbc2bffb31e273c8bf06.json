{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"active\", \"style\"],\n  _excluded2 = [\"enabled\"],\n  _excluded3 = [\"enabled\", \"active\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _Screens;\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nvar WebScreen = function (_React$Component) {\n  _inherits(WebScreen, _React$Component);\n  var _super = _createSuper(WebScreen);\n  function WebScreen() {\n    _classCallCheck(this, WebScreen);\n    return _super.apply(this, arguments);\n  }\n  _createClass(WebScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        active = _this$props.active,\n        style = _this$props.style,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      return React.createElement(View, _extends({\n        hidden: !active,\n        style: [style, {\n          display: active ? 'flex' : 'none'\n        }]\n      }, rest));\n    }\n  }]);\n  return WebScreen;\n}(React.Component);\nvar AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\nexport var shouldUseActivityState = (_Screens = Screens) === null || _Screens === void 0 ? void 0 : _Screens.shouldUseActivityState;\nexport var MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var enabled = _ref.enabled,\n    rest = _objectWithoutProperties(_ref, _excluded2);\n  var _Screens2;\n  if (enabled && Platform.OS !== 'web' && (_Screens2 = Screens) !== null && _Screens2 !== void 0 && _Screens2.screensEnabled()) {\n    return React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return React.createElement(View, rest);\n};\nexport var MaybeScreen = function MaybeScreen(_ref2) {\n  var enabled = _ref2.enabled,\n    active = _ref2.active,\n    rest = _objectWithoutProperties(_ref2, _excluded3);\n  var _Screens3;\n  if (enabled && Platform.OS === 'web') {\n    return React.createElement(AnimatedWebScreen, _extends({\n      active: active\n    }, rest));\n  }\n  if (enabled && (_Screens3 = Screens) !== null && _Screens3 !== void 0 && _Screens3.screensEnabled()) {\n    if (shouldUseActivityState) {\n      return React.createElement(Screens.Screen, _extends({\n        enabled: enabled,\n        activityState: active\n      }, rest));\n    } else {\n      return React.createElement(Screens.Screen, _extends({\n        enabled: enabled,\n        active: active\n      }, rest));\n    }\n  }\n  return React.createElement(View, rest);\n};","map":{"version":3,"names":["React","Animated","View","Platform","Screens","require","e","WebScreen","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_this$props","props","active","style","rest","_objectWithoutProperties","_excluded","createElement","_extends","hidden","display","Component","AnimatedWebScreen","createAnimatedComponent","shouldUseActivityState","_Screens","MaybeScreenContainer","_ref","enabled","_excluded2","_Screens2","OS","screensEnabled","ScreenContainer","MaybeScreen","_ref2","_excluded3","_Screens3","Screen","activityState"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Screens.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, Platform, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\n// The web implementation in react-native-screens seems buggy.\n// The view doesn't become visible after coming back in some cases.\n// So we use our custom implementation.\nclass WebScreen extends React.Component<\n  ViewProps & {\n    active: number;\n    children: React.ReactNode;\n  }\n> {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!active}\n        style={[style, { display: active ? 'flex' : 'none' }]}\n        {...rest}\n      />\n    );\n  }\n}\n\nconst AnimatedWebScreen = Animated.createAnimatedComponent(WebScreen);\n\n// @ts-ignore\nexport const shouldUseActivityState = Screens?.shouldUseActivityState;\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS !== 'web' && Screens?.screensEnabled()) {\n    return (\n      // @ts-ignore\n      <Screens.ScreenContainer enabled={enabled} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | 2 | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && Platform.OS === 'web') {\n    return <AnimatedWebScreen active={active} {...rest} />;\n  }\n\n  if (enabled && Screens?.screensEnabled()) {\n    if (shouldUseActivityState) {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n      );\n    } else {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screens.Screen enabled={enabled} active={active} {...rest} />\n      );\n    }\n  }\n\n  return <View {...rest} />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}