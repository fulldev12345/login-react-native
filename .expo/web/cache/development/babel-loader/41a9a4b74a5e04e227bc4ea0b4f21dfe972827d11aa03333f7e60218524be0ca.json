{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport SceneView from \"./SceneView\";\nimport NavigationBuilderContext from \"./NavigationBuilderContext\";\nimport useNavigationCache from \"./useNavigationCache\";\nimport useRouteCache from \"./useRouteCache\";\nimport NavigationContext from \"./NavigationContext\";\nimport NavigationRouteContext from \"./NavigationRouteContext\";\nexport default function useDescriptors(_ref) {\n  var state = _ref.state,\n    screens = _ref.screens,\n    navigation = _ref.navigation,\n    screenOptions = _ref.screenOptions,\n    onAction = _ref.onAction,\n    getState = _ref.getState,\n    setState = _ref.setState,\n    addListener = _ref.addListener,\n    addKeyedListener = _ref.addKeyedListener,\n    onRouteFocus = _ref.onRouteFocus,\n    router = _ref.router,\n    emitter = _ref.emitter;\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    options = _React$useState2[0],\n    setOptions = _React$useState2[1];\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n    onDispatchAction = _React$useContext.onDispatchAction,\n    onOptionsChange = _React$useContext.onOptionsChange;\n  var context = React.useMemo(function () {\n    return {\n      navigation: navigation,\n      onAction: onAction,\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onRouteFocus: onRouteFocus,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange\n    };\n  }, [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange]);\n  var navigations = useNavigationCache({\n    state: state,\n    getState: getState,\n    navigation: navigation,\n    setOptions: setOptions,\n    router: router,\n    emitter: emitter\n  });\n  var routes = useRouteCache(state.routes);\n  return routes.reduce(function (acc, route, i) {\n    var screen = screens[route.name];\n    var navigation = navigations[route.key];\n    var routeOptions = _objectSpread(_objectSpread(_objectSpread({}, typeof screenOptions === 'object' || screenOptions == null ? screenOptions : screenOptions({\n      route: route,\n      navigation: navigation\n    })), typeof screen.options === 'object' || screen.options == null ? screen.options : screen.options({\n      route: route,\n      navigation: navigation\n    })), options[route.key]);\n    acc[route.key] = {\n      navigation: navigation,\n      render: function render() {\n        return React.createElement(NavigationBuilderContext.Provider, {\n          key: route.key,\n          value: context\n        }, React.createElement(NavigationContext.Provider, {\n          value: navigation\n        }, React.createElement(NavigationRouteContext.Provider, {\n          value: route\n        }, React.createElement(SceneView, {\n          navigation: navigation,\n          route: route,\n          screen: screen,\n          routeState: state.routes[i].state,\n          getState: getState,\n          setState: setState,\n          options: routeOptions\n        }))));\n      },\n      options: routeOptions\n    };\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["React","SceneView","NavigationBuilderContext","useNavigationCache","useRouteCache","NavigationContext","NavigationRouteContext","useDescriptors","_ref","state","screens","navigation","screenOptions","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","_React$useState","useState","_React$useState2","_slicedToArray","options","setOptions","_React$useContext","useContext","onDispatchAction","onOptionsChange","context","useMemo","navigations","routes","reduce","acc","route","i","screen","name","key","routeOptions","_objectSpread","render","createElement","Provider","value","routeState"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-navigation\\core\\lib\\module\\useDescriptors.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport SceneView from './SceneView';\nimport NavigationBuilderContext, {\n  AddListener,\n  AddKeyedListener,\n} from './NavigationBuilderContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type {\n  Descriptor,\n  NavigationHelpers,\n  RouteConfig,\n  RouteProp,\n  EventMapBase,\n} from './types';\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenOptions);\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<any>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<string, Descriptor<ParamListBase, string, State, ScreenOptions>>\n  >((acc, route, i) => {\n    const screen = screens[route.name];\n    const navigation = navigations[route.key];\n\n    const routeOptions = {\n      // The default `screenOptions` passed to the navigator\n      ...(typeof screenOptions === 'object' || screenOptions == null\n        ? screenOptions\n        : // @ts-expect-error: this is a function, but typescript doesn't think so\n          screenOptions({\n            route,\n            navigation,\n          })),\n      // The `options` prop passed to `Screen` elements\n      ...(typeof screen.options === 'object' || screen.options == null\n        ? screen.options\n        : // @ts-expect-error: this is a function, but typescript doesn't think so\n          screen.options({\n            route,\n            navigation,\n          })),\n      // The options set via `navigation.setOptions`\n      ...options[route.key],\n    };\n\n    acc[route.key] = {\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={routeOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: routeOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,OAAOC,SAAP;AACA,OAAOC,wBAAP;AAKA,OAAOC,kBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,sBAAP;AA+CA,eAAe,SAASC,cAATA,CAAAC,IAAA,EAiB6B;EAAA,IAZ1CC,KADA,GAAAD,IAAA,CACAC,KADA;IAEAC,OAFA,GAAAF,IAAA,CAEAE,OAFA;IAGAC,UAHA,GAAAH,IAAA,CAGAG,UAHA;IAIAC,aAJA,GAAAJ,IAAA,CAIAI,aAJA;IAKAC,QALA,GAAAL,IAAA,CAKAK,QALA;IAMAC,QANA,GAAAN,IAAA,CAMAM,QANA;IAOAC,QAPA,GAAAP,IAAA,CAOAO,QAPA;IAQAC,WARA,GAAAR,IAAA,CAQAQ,WARA;IASAC,gBATA,GAAAT,IAAA,CASAS,gBATA;IAUAC,YAVA,GAAAV,IAAA,CAUAU,YAVA;IAWAC,MAXA,GAAAX,IAAA,CAWAW,MAXA;IAYAC,OAAA,GAAAZ,IAAA,CAAAY,OAAA;EAEA,IAAAC,eAAA,GAA8BrB,KAAK,CAACsB,QAAN,CAAuC,EAAvC,CAA9B;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,OAAD,GAAAF,gBAAA;IAAUG,UAAV,GAAAH,gBAAA;EACN,IAAAI,iBAAA,GAA8C3B,KAAK,CAAC4B,UAAN,CAC5C1B,wBAD4C,CAA9C;IAAQ2B,gBAAF,GAAAF,iBAAA,CAAEE,gBAAF;IAAoBC,eAAA,GAAAH,iBAAA,CAAAG,eAAA;EAI1B,IAAMC,OAAO,GAAG/B,KAAK,CAACgC,OAAN,CACd;IAAA,OAAO;MACLrB,UADK,EACLA,UADK;MAELE,QAFK,EAELA,QAFK;MAGLG,WAHK,EAGLA,WAHK;MAILC,gBAJK,EAILA,gBAJK;MAKLC,YALK,EAKLA,YALK;MAMLW,gBANK,EAMLA,gBANK;MAOLC,eAAA,EAAAA;IAPK,CAAP;EAAA,CADc,EAUd,CACEnB,UADF,EAEEE,QAFF,EAGEG,WAHF,EAIEC,gBAJF,EAKEC,YALF,EAMEW,gBANF,EAOEC,eAPF,CAVc,CAAhB;EAqBA,IAAMG,WAAW,GAAG9B,kBAAkB,CAAuB;IAC3DM,KAD2D,EAC3DA,KAD2D;IAE3DK,QAF2D,EAE3DA,QAF2D;IAG3DH,UAH2D,EAG3DA,UAH2D;IAI3De,UAJ2D,EAI3DA,UAJ2D;IAK3DP,MAL2D,EAK3DA,MAL2D;IAM3DC,OAAA,EAAAA;EAN2D,CAAvB,CAAtC;EASA,IAAMc,MAAM,GAAG9B,aAAa,CAACK,KAAK,CAACyB,MAAP,CAA5B;EAEA,OAAOA,MAAM,CAACC,MAAP,CAEL,UAACC,GAAD,EAAMC,KAAN,EAAaC,CAAb,EAAmB;IACnB,IAAMC,MAAM,GAAG7B,OAAO,CAAC2B,KAAK,CAACG,IAAP,CAAtB;IACA,IAAM7B,UAAU,GAAGsB,WAAW,CAACI,KAAK,CAACI,GAAP,CAA9B;IAEA,IAAMC,YAAY,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAEZ,OAAO/B,aAAP,KAAyB,QAAzB,IAAqCA,aAAa,IAAI,IAAtD,GACAA,aADA,GAGAA,aAAa,CAAC;MACZyB,KADY,EACZA,KADY;MAEZ1B,UAAA,EAAAA;IAFY,CAAD,CAHjB,GAQI,OAAO4B,MAAM,CAACd,OAAd,KAA0B,QAA1B,IAAsCc,MAAM,CAACd,OAAP,IAAkB,IAAxD,GACAc,MAAM,CAACd,OADP,GAGAc,MAAM,CAACd,OAAP,CAAe;MACbY,KADa,EACbA,KADa;MAEb1B,UAAA,EAAAA;IAFa,CAAf,CAHJ,GAQGc,OAAO,CAACY,KAAK,CAACI,GAAP,EAlBZ;IAqBAL,GAAG,CAACC,KAAK,CAACI,GAAP,CAAH,GAAiB;MACf9B,UADe,EACfA,UADe;MAEfiC,MAAM,WAAAA,OAAA,EAAG;QACP,OACE5C,KAAA,CAAA6C,aAAA,CAAC3C,wBAAD,CAA0B4C,QAA1B;UAAmCL,GAAG,EAAEJ,KAAK,CAACI,GAA9C;UAAmDM,KAAK,EAAEhB;QAA1D,GACE/B,KAAA,CAAA6C,aAAA,CAACxC,iBAAD,CAAmByC,QAAnB;UAA4BC,KAAK,EAAEpC;QAAnC,GACEX,KAAA,CAAA6C,aAAA,CAACvC,sBAAD,CAAwBwC,QAAxB;UAAiCC,KAAK,EAAEV;QAAxC,GACErC,KAAA,CAAA6C,aAAA,CAAC5C,SAAD;UACEU,UAAU,EAAEA,UADd;UAEE0B,KAAK,EAAEA,KAFT;UAGEE,MAAM,EAAEA,MAHV;UAIES,UAAU,EAAEvC,KAAK,CAACyB,MAAN,CAAaI,CAAb,EAAgB7B,KAJ9B;UAKEK,QAAQ,EAAEA,QALZ;UAMEC,QAAQ,EAAEA,QANZ;UAOEU,OAAO,EAAEiB;QAPX,EADF,CADF,CADF,CADF;MAiBD,CApBc;MAqBfjB,OAAO,EAAEiB;IArBM,CAAjB;IAwBA,OAAON,GAAP;EACD,CApDM,EAoDJ,EApDI,CAAP;AAqDD"},"metadata":{},"sourceType":"module","externalDependencies":[]}