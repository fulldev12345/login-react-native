{"ast":null,"code":"export var listIds = new WeakMap();\nfunction normalizeKey(key) {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n  return '' + key;\n}\nexport function getItemId(state, itemKey) {\n  var listId = listIds.get(state);\n  if (!listId) {\n    throw new Error('Unknown list');\n  }\n  return listId + \"-option-\" + normalizeKey(itemKey);\n}","map":{"version":3,"names":["listIds","WeakMap","normalizeKey","key","replace","getItemId","state","itemKey","listId","get","Error"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-native-aria\\listbox\\lib\\module\\utils.ts"],"sourcesContent":["import { Key } from 'react';\nimport { ListState } from '@react-stately/list';\n\nexport const listIds = new WeakMap<ListState<unknown>, string>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getItemId<T>(state: ListState<T>, itemKey: Key): string {\n  let listId = listIds.get(state);\n\n  if (!listId) {\n    throw new Error('Unknown list');\n  }\n\n  return `${listId}-option-${normalizeKey(itemKey)}`;\n}\n"],"mappings":"AAGA,OAAO,IAAMA,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AAEP,SAASC,YAATA,CAAsBC,GAAtB,EAAwC;EACtC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IAC3B,OAAOA,GAAG,CAACC,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAP;EACD;EAED,OAAO,KAAKD,GAAZ;AACD;AAED,OAAO,SAASE,SAATA,CAAsBC,KAAtB,EAA2CC,OAA3C,EAAiE;EACtE,IAAIC,MAAM,GAAGR,OAAO,CAACS,GAAR,CAAYH,KAAZ,CAAb;EAEA,IAAI,CAACE,MAAL,EAAa;IACX,MAAM,IAAIE,KAAJ,CAAU,cAAV,CAAN;EACD;EAED,OAAUF,MAAO,gBAAUN,YAAY,CAACK,OAAD,CAAU;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}