{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useFocus } from \"@react-aria/interactions\";\nimport _react, { useMemo, useState } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar $f431c2c11cc559fa3c5864caafbcfd19$var$styles = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  margin: '0 -1px -1px 0',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n  whiteSpace: 'nowrap'\n};\nexport function useVisuallyHidden(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    style = _props.style,\n    isFocusable = _props.isFocusable;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setFocused = _useState2[1];\n  var _useFocus = useFocus({\n      isDisabled: !isFocusable,\n      onFocusChange: setFocused\n    }),\n    focusProps = _useFocus.focusProps;\n  var combinedStyles = useMemo(function () {\n    if (isFocused) {\n      return style;\n    } else if (style) {\n      return _babelRuntimeHelpersEsmExtends({}, $f431c2c11cc559fa3c5864caafbcfd19$var$styles, style);\n    } else {\n      return $f431c2c11cc559fa3c5864caafbcfd19$var$styles;\n    }\n  }, [isFocused]);\n  return {\n    visuallyHiddenProps: _babelRuntimeHelpersEsmExtends({}, focusProps, {\n      style: combinedStyles\n    })\n  };\n}\nexport function VisuallyHidden(props) {\n  var children = props.children,\n    _props$elementType = props.elementType,\n    Element = _props$elementType === void 0 ? 'div' : _props$elementType,\n    otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"elementType\", \"isFocusable\", \"style\"]);\n  var _useVisuallyHidden = useVisuallyHidden(props),\n    visuallyHiddenProps = _useVisuallyHidden.visuallyHiddenProps;\n  return _react.createElement(Element, mergeProps(otherProps, visuallyHiddenProps), children);\n}","map":{"version":3,"names":["$f431c2c11cc559fa3c5864caafbcfd19$var$styles","border","clip","clipPath","height","margin","overflow","padding","position","width","whiteSpace","useVisuallyHidden","props","_props","style","isFocusable","_useState","useState","_useState2","_slicedToArray","isFocused","setFocused","_useFocus","useFocus","isDisabled","onFocusChange","focusProps","combinedStyles","useMemo","_babelRuntimeHelpersEsmExtends","visuallyHiddenProps","VisuallyHidden","children","_props$elementType","elementType","Element","otherProps","_babelRuntimeHelpersEsmObjectWithoutPropertiesLoose","_useVisuallyHidden","_react","createElement","mergeProps"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\visually-hidden\\dist\\packages\\@react-aria\\visually-hidden\\src\\VisuallyHidden.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport React, {CSSProperties, HTMLAttributes, JSXElementConstructor, ReactNode, useMemo, useState} from 'react';\nimport {useFocus} from '@react-aria/interactions';\n\ninterface VisuallyHiddenProps extends HTMLAttributes<HTMLElement> {\n  /** The content to visually hide. */\n  children?: ReactNode,\n\n  /**\n   * The element type for the container.\n   * @default 'div'\n   */\n  elementType?: string | JSXElementConstructor<any>,\n\n  /** Whether the element should become visible on focus, for example skip links. */\n  isFocusable?: boolean\n}\n\nconst styles: CSSProperties = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  margin: '0 -1px -1px 0',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n  whiteSpace: 'nowrap'\n};\n\ninterface VisuallyHiddenAria {\n  visuallyHiddenProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides props for an element that hides its children visually\n * but keeps content visible to assistive technology.\n */\nexport function useVisuallyHidden(props: VisuallyHiddenProps = {}): VisuallyHiddenAria {\n  let {\n    style,\n    isFocusable\n  } = props;\n\n  let [isFocused, setFocused] = useState(false);\n  let {focusProps} = useFocus({\n    isDisabled: !isFocusable,\n    onFocusChange: setFocused\n  });\n\n  // If focused, don't hide the element.\n  let combinedStyles = useMemo(() => {\n    if (isFocused) {\n      return style;\n    } else if (style) {\n      return {...styles, ...style};\n    } else {\n      return styles;\n    }\n  }, [isFocused]);\n\n  return {\n    visuallyHiddenProps: {\n      ...focusProps,\n      style: combinedStyles\n    }\n  };\n}\n\n/**\n * VisuallyHidden hides its children visually, while keeping content visible\n * to screen readers.\n */\nexport function VisuallyHidden(props: VisuallyHiddenProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, elementType: Element = 'div', isFocusable, style, ...otherProps} = props;\n  let {visuallyHiddenProps} = useVisuallyHidden(props);\n\n  return (\n    <Element {...mergeProps(otherProps, visuallyHiddenProps)}>\n      {children}\n    </Element>\n  );\n}\n"],"mappings":";;;;;;AA8BA,IAAMA,4CAAqB,GAAG;EAC5BC,MAAM,EAAE,CADoB;EAE5BC,IAAI,EAAE,eAFsB;EAG5BC,QAAQ,EAAE,YAHkB;EAI5BC,MAAM,EAAE,CAJoB;EAK5BC,MAAM,EAAE,eALoB;EAM5BC,QAAQ,EAAE,QANkB;EAO5BC,OAAO,EAAE,CAPmB;EAQ5BC,QAAQ,EAAE,UARkB;EAS5BC,KAAK,EAAE,CATqB;EAU5BC,UAAU,EAAE;AAVgB,CAA9B;OAqBO,SAASC,iBAATA,CAA2BC,KAA3B,EAAgF;EAAA,IAArDA,KAAqD;IAArDA,KAAqD,GAAxB,EAAwB;EAAA;EACrF,IAAAC,MAAA,GAGID,KAHJ;IACEE,KADE,GAAAD,MAAA,CACFC,KADE;IAEFC,WAAA,GAAAF,MAAA,CAAAE,WAAA;EAGF,IAAAC,SAAA,GAA8BC,QAAQ,CAAC,KAAD,CAAtC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAKI,SAAD,GAAAF,UAAA;IAAYG,UAAZ,GAAAH,UAAA;EACJ,IAAAI,SAAA,GAAmBC,QAAQ,CAAC;MAC1BC,UAAU,EAAE,CAACT,WADa;MAE1BU,aAAa,EAAEJ;IAFW,CAAD,CAA3B;IAAKK,UAAA,GAAAJ,SAAA,CAAAI,UAAA;EAML,IAAIC,cAAc,GAAGC,OAAO,CAAC,YAAM;IACjC,IAAIR,SAAJ,EAAe;MACb,OAAON,KAAP;IACD,CAFD,MAEO,IAAIA,KAAJ,EAAW;MAChB,OAAAe,8BAAA,KAAW7B,4CAAX,EAAsBc,KAAtB;IACD,CAFM,MAEA;MACL,OAAOd,4CAAP;IACD;EACF,CAR2B,EAQzB,CAACoB,SAAD,CARyB,CAA5B;EAUA,OAAO;IACLU,mBAAmB,EAAAD,8BAAA,KACdH,UADc;MAEjBZ,KAAK,EAAEa;IAFU;EADd,CAAP;AAMD;OAMM,SAASI,cAATA,CAAwBnB,KAAxB,EAAoD;EAEzD,IAAKoB,QAAD,GAA8EpB,KAAlF,CAAKoB,QAAD;IAAAC,kBAAA,GAA8ErB,KAAlF,CAAesB,WAAW;IAAEC,OAAO,GAAAF,kBAAA,cAAG,QAAAA,kBAAA;IAA8BG,UAApE,GAAAC,mDAAA,CAAkFzB,KAAlF;EACA,IAAA0B,kBAAA,GAA4B3B,iBAAiB,CAACC,KAAD,CAA7C;IAAKkB,mBAAA,GAAAQ,kBAAA,CAAAR,mBAAA;EAEL,OACES,MAAA,CAAAC,aAAA,CAACL,OAAD,EAAaM,UAAU,CAACL,UAAD,EAAaN,mBAAb,CAAvB,EACGE,QADH,CADF;AAKD"},"metadata":{},"sourceType":"module","externalDependencies":[]}