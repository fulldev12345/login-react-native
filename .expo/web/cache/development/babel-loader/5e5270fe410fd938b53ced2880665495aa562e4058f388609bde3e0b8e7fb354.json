{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from \"./BaseRouter\";\nexport var StackActions = {\n  replace: function replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  push: function push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  pop: function pop() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count: count\n      }\n    };\n  },\n  popToTop: function popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexport default function StackRouter(options) {\n  var router = _objectSpread(_objectSpread({}, BaseRouter), {}, {\n    type: 'stack',\n    getInitialState: function getInitialState(_ref) {\n      var routeNames = _ref.routeNames,\n        routeParamList = _ref.routeParamList;\n      var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\".concat(nanoid()),\n        index: 0,\n        routeNames: routeNames,\n        routes: [{\n          key: \"\".concat(initialRouteName, \"-\").concat(nanoid()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList;\n      var state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      }).map(function (route) {\n        return _objectSpread(_objectSpread({}, route), {}, {\n          key: route.key || \"\".concat(route.name, \"-\").concat(nanoid()),\n          params: routeParamList[route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[route.name]), route.params) : route.params\n        });\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: \"\".concat(initialRouteName, \"-\").concat(nanoid()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\".concat(nanoid()),\n        index: routes.length - 1,\n        routeNames: routeNames,\n        routes: routes\n      };\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList;\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: \"\".concat(initialRouteName, \"-\").concat(nanoid()),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        routeNames: routeNames,\n        routes: routes,\n        index: Math.min(state.index, routes.length - 1)\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        index: index,\n        routes: state.routes.slice(0, index + 1)\n      });\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      var routeParamList = options.routeParamList;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            var _action$payload = action.payload,\n              name = _action$payload.name,\n              key = _action$payload.key,\n              params = _action$payload.params;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              routes: state.routes.map(function (route, i) {\n                return i === index ? {\n                  key: key !== undefined ? key : \"\".concat(name, \"-\").concat(nanoid()),\n                  name: name,\n                  params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), params) : params\n                } : route;\n              })\n            });\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            var getId = options.routeGetIdList[action.payload.name];\n            var id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            var route = action.payload.name && action.payload.key ? state.routes.find(function (route) {\n              return route.name === action.payload.name && route.key === action.payload.key;\n            }) : id ? state.routes.find(function (route) {\n              return route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              }));\n            }) : undefined;\n            var routes;\n            if (route) {\n              routes = state.routes.filter(function (r) {\n                return r.key !== route.key;\n              });\n              routes.push(_objectSpread(_objectSpread({}, route), {}, {\n                params: action.payload.params !== undefined ? _objectSpread(_objectSpread({}, route.params), action.payload.params) : route.params\n              }));\n            } else {\n              var _action$payload$key;\n              routes = [].concat(_toConsumableArray(state.routes), [{\n                key: (_action$payload$key = action.payload.key) !== null && _action$payload$key !== void 0 ? _action$payload$key : \"\".concat(action.payload.name, \"-\").concat(nanoid()),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: routes.length - 1,\n              routes: routes\n            });\n          }\n          return null;\n        case 'POP':\n          {\n            var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (_index > 0) {\n              var count = Math.max(_index - action.payload.count + 1, 1);\n              var _routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n              return _objectSpread(_objectSpread({}, state), {}, {\n                index: _routes.length - 1,\n                routes: _routes\n              });\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            var _index2 = -1;\n            var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            var _id = _getId === null || _getId === void 0 ? void 0 : _getId({\n              params: action.payload.params\n            });\n            if (_id) {\n              _index2 = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name && _id === (_getId === null || _getId === void 0 ? void 0 : _getId({\n                  params: route.params\n                }));\n              });\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              _index2 = state.index;\n            } else {\n              for (var i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  _index2 = i;\n                  break;\n                }\n              }\n            }\n            if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (_index2 === -1 && action.payload.name !== undefined) {\n              var _action$payload$key2;\n              var _routes2 = [].concat(_toConsumableArray(state.routes), [{\n                key: (_action$payload$key2 = action.payload.key) !== null && _action$payload$key2 !== void 0 ? _action$payload$key2 : \"\".concat(action.payload.name, \"-\").concat(nanoid()),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[action.payload.name]), action.payload.params) : action.payload.params\n              }]);\n              return _objectSpread(_objectSpread({}, state), {}, {\n                routes: _routes2,\n                index: _routes2.length - 1\n              });\n            }\n            var _route = state.routes[_index2];\n            var _params;\n            if (action.payload.merge === false) {\n              _params = routeParamList[_route.name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[_route.name]), action.payload.params) : action.payload.params;\n            } else {\n              _params = action.payload.params ? _objectSpread(_objectSpread({}, _route.params), action.payload.params) : _route.params;\n            }\n            return _objectSpread(_objectSpread({}, state), {}, {\n              index: _index2,\n              routes: [].concat(_toConsumableArray(state.routes.slice(0, _index2)), [_params !== _route.params ? _objectSpread(_objectSpread({}, _route), {}, {\n                params: _params\n              }) : state.routes[_index2]])\n            });\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  });\n  return router;\n}","map":{"version":3,"names":["nanoid","BaseRouter","StackActions","replace","name","params","type","payload","push","pop","count","arguments","length","undefined","popToTop","StackRouter","options","router","_objectSpread","getInitialState","_ref","routeNames","routeParamList","initialRouteName","includes","stale","key","concat","index","routes","getRehydratedState","partialState","_ref2","state","filter","route","map","getStateForRouteNamesChange","_ref3","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","_action$payload","i","getId","routeGetIdList","id","find","_action$payload$key","_toConsumableArray","max","_action$payload$key2","merge","actionCreators"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-navigation\\routers\\lib\\module\\StackRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nimport type {\n  NavigationState,\n  CommonNavigationAction,\n  Router,\n  DefaultRouterOptions,\n  Route,\n  ParamListBase,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<\n  ParamList extends ParamListBase\n> = NavigationState<ParamList> & {\n  /**\n   * Type of the router, in this case, it's stack.\n   */\n  type: 'stack';\n};\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [RouteName] | [RouteName, ParamList[RouteName]]\n      : [RouteName, ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(state, { routeNames, routeParamList }) {\n      const routes = state.routes.filter((route) =>\n        routeNames.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route =\n              action.payload.name && action.payload.key\n                ? state.routes.find(\n                    (route) =>\n                      route.name === action.payload.name &&\n                      route.key === action.payload.key\n                  )\n                : id\n                ? state.routes.find(\n                    (route) =>\n                      route.name === action.payload.name &&\n                      id === getId?.({ params: route.params })\n                  )\n                : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  action.payload.params !== undefined\n                    ? {\n                        ...route.params,\n                        ...action.payload.params,\n                      }\n                    : route.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge === false) {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            } else {\n              params = action.payload.params\n                ? {\n                    ...route.params,\n                    ...action.payload.params,\n                  }\n                : route.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params\n                  ? { ...route, params }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}