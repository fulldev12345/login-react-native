{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _clsx from \"clsx\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport _react, { useContext, useEffect, useRef, useState } from \"react\";\nimport { getInteractionModality, isFocusVisible as _isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin, useKeyboard } from \"@react-aria/interactions\";\nimport { focusWithoutScrolling, runAfterTransition, useLayoutEffect, mergeProps, useSyncRef } from \"@react-aria/utils\";\nexport function focusSafely(element) {\n  if (getInteractionModality() === 'virtual') {\n    var lastFocusedElement = document.activeElement;\n    runAfterTransition(function () {\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\nfunction $ee5e90cbb4a22466973155c14222fa1$var$isStyleVisible(element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n  var _element$style = element.style,\n    display = _element$style.display,\n    visibility = _element$style.visibility;\n  var isVisible = display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse';\n  if (isVisible) {\n    var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n    var _getComputedStyle = getComputedStyle(element),\n      computedDisplay = _getComputedStyle.display,\n      computedVisibility = _getComputedStyle.visibility;\n    isVisible = computedDisplay !== 'none' && computedVisibility !== 'hidden' && computedVisibility !== 'collapse';\n  }\n  return isVisible;\n}\nfunction $ee5e90cbb4a22466973155c14222fa1$var$isAttributeVisible(element, childElement) {\n  return !element.hasAttribute('hidden') && (element.nodeName === 'DETAILS' && childElement && childElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true);\n}\nfunction $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(element, childElement) {\n  return element.nodeName !== '#comment' && $ee5e90cbb4a22466973155c14222fa1$var$isStyleVisible(element) && $ee5e90cbb4a22466973155c14222fa1$var$isAttributeVisible(element, childElement) && (!element.parentElement || $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(element.parentElement, element));\n}\nvar $c9e8f80f5bb1841844f54e4ad30b$var$FocusContext = _react.createContext(null);\nvar $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = null;\nvar $c9e8f80f5bb1841844f54e4ad30b$var$scopes = new Set();\nexport function FocusScope(props) {\n  var children = props.children,\n    contain = props.contain,\n    restoreFocus = props.restoreFocus,\n    autoFocus = props.autoFocus;\n  var startRef = useRef();\n  var endRef = useRef();\n  var scopeRef = useRef([]);\n  useLayoutEffect(function () {\n    var node = startRef.current.nextSibling;\n    var nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n    scopeRef.current = nodes;\n    $c9e8f80f5bb1841844f54e4ad30b$var$scopes.add(scopeRef);\n    return function () {\n      $c9e8f80f5bb1841844f54e4ad30b$var$scopes.delete(scopeRef);\n    };\n  }, [children]);\n  $c9e8f80f5bb1841844f54e4ad30b$var$useFocusContainment(scopeRef, contain);\n  $c9e8f80f5bb1841844f54e4ad30b$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $c9e8f80f5bb1841844f54e4ad30b$var$useAutoFocus(scopeRef, autoFocus);\n  var focusManager = $c9e8f80f5bb1841844f54e4ad30b$var$createFocusManagerForScope(scopeRef);\n  return _react.createElement($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext.Provider, {\n    value: focusManager\n  }, _react.createElement(\"span\", {\n    hidden: true,\n    ref: startRef\n  }), children, _react.createElement(\"span\", {\n    hidden: true,\n    ref: endRef\n  }));\n}\nexport function useFocusManager() {\n  return useContext($c9e8f80f5bb1841844f54e4ad30b$var$FocusContext);\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n      var scope = scopeRef.current;\n      var _opts = opts,\n        from = _opts.from,\n        tabbable = _opts.tabbable,\n        wrap = _opts.wrap;\n      var node = from || document.activeElement;\n      var sentinel = scope[0].previousElementSibling;\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: tabbable\n      }, scope);\n      walker.currentNode = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n      var scope = scopeRef.current;\n      var _opts2 = opts,\n        from = _opts2.from,\n        tabbable = _opts2.tabbable,\n        wrap = _opts2.wrap;\n      var node = from || document.activeElement;\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: tabbable\n      }, scope);\n      walker.currentNode = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n      if (previousNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\nvar $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements = ['input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'a[href]', 'area[href]', 'summary', 'iframe', 'object', 'embed', 'audio[controls]', 'video[controls]', '[contenteditable]'];\nvar $c9e8f80f5bb1841844f54e4ad30b$var$FOCUSABLE_ELEMENT_SELECTOR = $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n$c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nvar $c9e8f80f5bb1841844f54e4ad30b$var$TABBABLE_ELEMENT_SELECTOR = $c9e8f80f5bb1841844f54e4ad30b$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = useRef();\n  var raf = useRef(null);\n  useEffect(function () {\n    var scope = scopeRef.current;\n    if (!contain) {\n      return;\n    }\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n      var focusedElement = document.activeElement;\n      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(focusedElement, scope)) {\n        return;\n      }\n      var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n        tabbable: true\n      }, scope);\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n      e.preventDefault();\n      if (nextElement) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextElement, true);\n      }\n    };\n    var onFocus = function onFocus(e) {\n      var isInAnyScope = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope(e.target, $c9e8f80f5bb1841844f54e4ad30b$var$scopes);\n      if (!isInAnyScope) {\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if ($c9e8f80f5bb1841844f54e4ad30b$var$activeScope) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope($c9e8f80f5bb1841844f54e4ad30b$var$activeScope.current);\n        }\n      } else {\n        $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;\n        focusedNode.current = e.target;\n      }\n    };\n    var onBlur = function onBlur(e) {\n      raf.current = requestAnimationFrame(function () {\n        var isInAnyScope = $c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope(document.activeElement, $c9e8f80f5bb1841844f54e4ad30b$var$scopes);\n        if (!isInAnyScope) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    scope.forEach(function (element) {\n      return element.addEventListener('focusout', onBlur, false);\n    });\n    return function () {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n      scope.forEach(function (element) {\n        return element.removeEventListener('focusout', onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  useEffect(function () {\n    return function () {\n      return cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope(element, scopes) {\n  for (var _iterator = _createForOfIteratorHelperLoose(scopes.values()), _step; !(_step = _iterator()).done;) {\n    var scope = _step.value;\n    if ($c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(element, scope) {\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(element, scroll) {\n  if (scroll === void 0) {\n    scroll = false;\n  }\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {}\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {}\n  }\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope(scope) {\n  var sentinel = scope[0].previousElementSibling;\n  var walker = getFocusableTreeWalker($c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot(scope), {\n    tabbable: true\n  }, scope);\n  walker.currentNode = sentinel;\n  $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(walker.nextNode());\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$useAutoFocus(scopeRef, autoFocus) {\n  useEffect(function () {\n    if (autoFocus) {\n      $c9e8f80f5bb1841844f54e4ad30b$var$activeScope = scopeRef;\n      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(document.activeElement, $c9e8f80f5bb1841844f54e4ad30b$var$activeScope.current)) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope(scopeRef.current);\n      }\n    }\n  }, [scopeRef, autoFocus]);\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  useLayoutEffect(function () {\n    var scope = scopeRef.current;\n    var nodeToRestore = document.activeElement;\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n      var focusedElement = document.activeElement;\n      if (!$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(focusedElement, scope)) {\n        return;\n      }\n      var walker = getFocusableTreeWalker(document.body, {\n        tabbable: true\n      });\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n      }\n      if ((!nextElement || !$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(nextElement, scope)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n        do {\n          nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n        } while ($c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(nextElement, scope));\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextElement, true);\n        } else {\n          focusedElement.blur();\n        }\n      }\n    };\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n    return function () {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n      if (restoreFocus && nodeToRestore && $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(document.activeElement, scope)) {\n        requestAnimationFrame(function () {\n          if (document.body.contains(nodeToRestore)) {\n            $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\nexport function getFocusableTreeWalker(root, opts, scope) {\n  var selector = opts != null && opts.tabbable ? $c9e8f80f5bb1841844f54e4ad30b$var$TABBABLE_ELEMENT_SELECTOR : $c9e8f80f5bb1841844f54e4ad30b$var$FOCUSABLE_ELEMENT_SELECTOR;\n  var walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var _opts$from;\n      if (opts != null && (_opts$from = opts.from) != null && _opts$from.contains(node)) {\n        return NodeFilter.FILTER_REJECT;\n      }\n      if (node.matches(selector) && $ee5e90cbb4a22466973155c14222fa1$export$isElementVisible(node) && (!scope || $c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope(node, scope))) {\n        return NodeFilter.FILTER_ACCEPT;\n      }\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n  if (opts != null && opts.from) {\n    walker.currentNode = opts.from;\n  }\n  return walker;\n}\nexport function createFocusManager(ref) {\n  return {\n    focusNext: function focusNext(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n      var root = ref.current;\n      var _opts3 = opts,\n        from = _opts3.from,\n        tabbable = _opts3.tabbable,\n        wrap = _opts3.wrap;\n      var node = from || document.activeElement;\n      var walker = getFocusableTreeWalker(root, {\n        tabbable: tabbable\n      });\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious(opts) {\n      if (opts === void 0) {\n        opts = {};\n      }\n      var root = ref.current;\n      var _opts4 = opts,\n        from = _opts4.from,\n        tabbable = _opts4.tabbable,\n        wrap = _opts4.wrap;\n      var node = from || document.activeElement;\n      var walker = getFocusableTreeWalker(root, {\n        tabbable: tabbable\n      });\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        var next = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);\n        if (next) {\n          $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(next, true);\n        }\n        return next;\n      }\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = $c9e8f80f5bb1841844f54e4ad30b$var$last(walker);\n      }\n      if (previousNode) {\n        $c9e8f80f5bb1841844f54e4ad30b$var$focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\nfunction $c9e8f80f5bb1841844f54e4ad30b$var$last(walker) {\n  var next;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\nexport function useFocusRing(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    _props$autoFocus = _props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isTextInput = _props.isTextInput,\n    within = _props.within;\n  var state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || _isFocusVisible()\n  }).current;\n  var _useState = useState(function () {\n      return state.isFocused && state.isFocusVisible;\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocusVisibleState = _useState2[0],\n    setFocusVisible = _useState2[1];\n  var updateState = function updateState() {\n    return setFocusVisible(state.isFocused && state.isFocusVisible);\n  };\n  var onFocusChange = function onFocusChange(isFocused) {\n    state.isFocused = isFocused;\n    updateState();\n  };\n  useFocusVisibleListener(function (isFocusVisible) {\n    state.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n  var _useFocus = useFocus({\n      isDisabled: within,\n      onFocusChange: onFocusChange\n    }),\n    focusProps = _useFocus.focusProps;\n  var _useFocusWithin = useFocusWithin({\n      isDisabled: !within,\n      onFocusWithinChange: onFocusChange\n    }),\n    focusWithinProps = _useFocusWithin.focusWithinProps;\n  return {\n    isFocused: state.isFocused,\n    isFocusVisible: state.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nexport function FocusRing(props) {\n  var _clsx2;\n  var children = props.children,\n    focusClass = props.focusClass,\n    focusRingClass = props.focusRingClass;\n  var _useFocusRing = useFocusRing(props),\n    isFocused = _useFocusRing.isFocused,\n    isFocusVisible = _useFocusRing.isFocusVisible,\n    focusProps = _useFocusRing.focusProps;\n  var child = _react.Children.only(children);\n  return _react.cloneElement(child, mergeProps(child.props, _babelRuntimeHelpersEsmExtends({}, focusProps, {\n    className: _clsx((_clsx2 = {}, _defineProperty(_clsx2, focusClass || '', isFocused), _defineProperty(_clsx2, focusRingClass || '', isFocusVisible), _clsx2))\n  })));\n}\nvar $e11539c8317b2d21639df611cb5658f$var$FocusableContext = _react.createContext(null);\nfunction $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(ref) {\n  var context = useContext($e11539c8317b2d21639df611cb5658f$var$FocusableContext) || {};\n  useSyncRef(context, ref);\n  return context;\n}\nfunction $e11539c8317b2d21639df611cb5658f$var$FocusableProvider(props, ref) {\n  var children = props.children,\n    otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\"]);\n  var context = _babelRuntimeHelpersEsmExtends({}, otherProps, {\n    ref: ref\n  });\n  return _react.createElement($e11539c8317b2d21639df611cb5658f$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\nexport var FocusableProvider = _react.forwardRef($e11539c8317b2d21639df611cb5658f$var$FocusableProvider);\nexport function useFocusable(props, domRef) {\n  var _useFocus2 = useFocus(props),\n    focusProps = _useFocus2.focusProps;\n  var _useKeyboard = useKeyboard(props),\n    keyboardProps = _useKeyboard.keyboardProps;\n  var interactions = mergeProps(focusProps, keyboardProps);\n  var domProps = $e11539c8317b2d21639df611cb5658f$var$useFocusableContext(domRef);\n  var interactionProps = props.isDisabled ? {} : domProps;\n  useEffect(function () {\n    if (props.autoFocus && domRef.current) {\n      domRef.current.focus();\n    }\n  }, [props.autoFocus, domRef]);\n  return {\n    focusableProps: mergeProps(_babelRuntimeHelpersEsmExtends({}, interactions, {\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }), interactionProps)\n  };\n}","map":{"version":3,"names":["focusSafely","element","getInteractionModality","lastFocusedElement","document","activeElement","runAfterTransition","contains","focusWithoutScrolling","$ee5e90cbb4a22466973155c14222fa1$var$isStyleVisible","isStyleVisible","HTMLElement","SVGElement","_element$style","style","display","visibility","isVisible","getComputedStyle","ownerDocument","defaultView","_getComputedStyle","computedDisplay","computedVisibility","$ee5e90cbb4a22466973155c14222fa1$var$isAttributeVisible","isAttributeVisible","childElement","hasAttribute","nodeName","$ee5e90cbb4a22466973155c14222fa1$export$isElementVisible","isElementVisible","parentElement","$c9e8f80f5bb1841844f54e4ad30b$var$FocusContext","_react","createContext","$c9e8f80f5bb1841844f54e4ad30b$var$activeScope","$c9e8f80f5bb1841844f54e4ad30b$var$scopes","Set","FocusScope","props","children","contain","restoreFocus","autoFocus","startRef","useRef","endRef","scopeRef","useLayoutEffect","node","current","nextSibling","nodes","push","add","delete","$c9e8f80f5bb1841844f54e4ad30b$var$useFocusContainment","$c9e8f80f5bb1841844f54e4ad30b$var$useRestoreFocus","$c9e8f80f5bb1841844f54e4ad30b$var$useAutoFocus","focusManager","$c9e8f80f5bb1841844f54e4ad30b$var$createFocusManagerForScope","createElement","Provider","value","hidden","ref","useFocusManager","useContext","createFocusManagerForScope","focusNext","opts","scope","_opts","from","tabbable","wrap","sentinel","previousElementSibling","walker","getFocusableTreeWalker","$c9e8f80f5bb1841844f54e4ad30b$var$getScopeRoot","currentNode","$c9e8f80f5bb1841844f54e4ad30b$var$isElementInScope","nextNode","$c9e8f80f5bb1841844f54e4ad30b$var$focusElement","focusPrevious","_opts2","length","nextElementSibling","previousNode","$c9e8f80f5bb1841844f54e4ad30b$var$focusableElements","$c9e8f80f5bb1841844f54e4ad30b$var$FOCUSABLE_ELEMENT_SELECTOR","join","$c9e8f80f5bb1841844f54e4ad30b$var$TABBABLE_ELEMENT_SELECTOR","getScopeRoot","useFocusContainment","focusedNode","raf","useEffect","onKeyDown","e","key","altKey","ctrlKey","metaKey","focusedElement","nextElement","shiftKey","preventDefault","onFocus","isInAnyScope","$c9e8f80f5bb1841844f54e4ad30b$var$isElementInAnyScope","target","focus","$c9e8f80f5bb1841844f54e4ad30b$var$focusFirstInScope","onBlur","requestAnimationFrame","addEventListener","forEach","removeEventListener","cancelAnimationFrame","isElementInAnyScope","scopes","_iterator","_createForOfIteratorHelperLoose","values","_step","done","isElementInScope","some","focusElement","scroll","err","focusFirstInScope","useAutoFocus","useRestoreFocus","nodeToRestore","body","stopPropagation","blur","root","selector","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","_opts$from","FILTER_REJECT","matches","FILTER_ACCEPT","FILTER_SKIP","createFocusManager","_opts3","_opts4","next","$c9e8f80f5bb1841844f54e4ad30b$var$last","last","lastChild","useFocusRing","_props","_props$autoFocus","isTextInput","within","state","isFocused","isFocusVisible","_isFocusVisible","_useState","useState","_useState2","_slicedToArray","isFocusVisibleState","setFocusVisible","updateState","onFocusChange","useFocusVisibleListener","_useFocus","useFocus","isDisabled","focusProps","_useFocusWithin","useFocusWithin","onFocusWithinChange","focusWithinProps","FocusRing","_clsx2","focusClass","focusRingClass","_useFocusRing","child","Children","only","cloneElement","mergeProps","_babelRuntimeHelpersEsmExtends","className","_clsx","_defineProperty","$e11539c8317b2d21639df611cb5658f$var$FocusableContext","$e11539c8317b2d21639df611cb5658f$var$useFocusableContext","useFocusableContext","context","useSyncRef","$e11539c8317b2d21639df611cb5658f$var$FocusableProvider","FocusableProvider","otherProps","_babelRuntimeHelpersEsmObjectWithoutPropertiesLoose","forwardRef","useFocusable","domRef","_useFocus2","_useKeyboard","useKeyboard","keyboardProps","interactions","domProps","interactionProps","focusableProps","tabIndex","excludeFromTabOrder","undefined"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\focusSafely.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\isElementVisible.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\FocusScope.tsx","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\useFocusRing.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\FocusRing.tsx","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\useFocusable.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: HTMLElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n// import {FocusScope, useFocusScope} from 'react-events/focus-scope';\n// export {FocusScope};\n\ninterface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\ninterface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: HTMLElement,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean\n}\n\ninterface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): HTMLElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): HTMLElement\n}\n\nconst FocusContext = React.createContext<FocusManager>(null);\n\nlet activeScope: RefObject<HTMLElement[]> = null;\nlet scopes: Set<RefObject<HTMLElement[]>> = new Set();\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n// For now, it relies on the DOM tree order rather than the React tree order, and is probably\n// less optimized for performance.\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<HTMLElement[]>([]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n    scopes.add(scopeRef);\n    return () => {\n      scopes.delete(scopeRef);\n    };\n  }, [children]);\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  let focusManager = createFocusManagerForScope(scopeRef);\n\n  return (\n    <FocusContext.Provider value={focusManager}>\n      <span hidden ref={startRef} />\n      {children}\n      <span hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext);\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<HTMLElement[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as HTMLElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as HTMLElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as HTMLElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as HTMLElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: HTMLElement[]) {\n  return scope[0].parentElement;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<HTMLElement[]>, contain: boolean) {\n  let focusedNode = useRef<HTMLElement>();\n\n  let raf = useRef(null);\n  useEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as HTMLElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n      // restore focus to the previously focused node or the first tabbable element in the active scope.\n      let isInAnyScope = isElementInAnyScope(e.target, scopes);\n      if (!isInAnyScope) {\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        let isInAnyScope = isElementInAnyScope(document.activeElement, scopes);\n\n        if (!isInAnyScope) {\n          activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => cancelAnimationFrame(raf.current);\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element, scopes: Set<RefObject<HTMLElement[]>>) {\n  for (let scope of scopes.values()) {\n    if (isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isElementInScope(element: Element, scope: HTMLElement[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction focusElement(element: HTMLElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: HTMLElement[]) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n  walker.currentNode = sentinel;\n  focusElement(walker.nextNode() as HTMLElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<HTMLElement[]>, autoFocus: boolean) {\n  useEffect(() => {\n    if (autoFocus) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n  }, [scopeRef, autoFocus]);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<HTMLElement[]>, restoreFocus: boolean, contain: boolean) {\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    let nodeToRestore = document.activeElement as HTMLElement;\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scope)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n        } while (isElementInScope(nextElement, scope));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n          // If there is no next element, blur the focused element to move focus to the body.\n          focusedElement.blur();\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n\n      if (restoreFocus && nodeToRestore && isElementInScope(document.activeElement, scope)) {\n        requestAnimationFrame(() => {\n          if (document.body.contains(nodeToRestore)) {\n            focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: HTMLElement, opts?: FocusManagerOptions, scope?: HTMLElement[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as HTMLElement).matches(selector)\n          && isElementVisible(node as HTMLElement)\n          && (!scope || isElementInScope(node as HTMLElement, scope))) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<HTMLElement>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      let nextNode = walker.nextNode() as HTMLElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as HTMLElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      let {from, tabbable, wrap} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next;\n      }\n      let previousNode = walker.previousNode() as HTMLElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = last(walker);\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: HTMLElement;\n  let last: HTMLElement;\n  do {\n    last = walker.lastChild() as HTMLElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {HTMLAttributes, useState} from 'react';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useRef} from 'react';\n\ninterface FocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: FocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  }).current;\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.isFocused && state.isFocusVisible);\n\n  let updateState = () => setFocusVisible(state.isFocused && state.isFocusVisible);\n\n  let onFocusChange = isFocused => {\n    state.isFocused = isFocused;\n    updateState();\n  };\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused: state.isFocused,\n    isFocusVisible: state.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\ninterface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableDOMProps, FocusableProps} from '@react-types/shared';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {HTMLAttributes, MutableRefObject, ReactNode, RefObject, useContext, useEffect} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\ninterface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusableProviderProps extends HTMLAttributes<HTMLElement> {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<HTMLElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<HTMLElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  return context;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<HTMLElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<HTMLElement>) {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n\n  useEffect(() => {\n    if (props.autoFocus && domRef.current) {\n      domRef.current.focus();\n    }\n  }, [props.autoFocus, domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}