{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.View = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _hooks = require(\"../../../hooks\");\nvar _styled = require(\"../../../utils/styled\");\nvar _this = this,\n  _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/components/basic/View/View.tsx\";\nvar StyledView = (0, _styled.makeStyledBox)(_reactNative.View);\nvar View = (0, _react.forwardRef)(function (props, ref) {\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('View', props),\n    resolvedProps = (0, _extends2.default)({}, _usePropsResolution);\n  return _react.default.createElement(StyledView, (0, _extends2.default)({}, resolvedProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }));\n});\nexports.View = View;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_hooks","_styled","StyledView","makeStyledBox","View","forwardRef","props","ref","_usePropsResolution","usePropsResolution","resolvedProps","_extends2","default","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\basic\\View\\View.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledBox } from '../../../utils/styled';\nimport type { IViewProps } from './types';\n\nconst StyledView: any = makeStyledBox(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;;;AAGA,IAAMI,UAAe,GAAG,IAAAD,OAAA,CAAAE,aAAA,EAAcJ,YAAA,CAAAK,IAAd,CAAxB;AAEO,IAAMA,IAAI,GAAG,IAAAR,MAAA,CAAAS,UAAA,EAAW,UAACC,KAAD,EAAoBC,GAApB,EAAiC;EAAA,IAAAC,mBAAA,GACjC,IAAAR,MAAA,CAAAS,kBAAA,EAAmB,MAAnB,EAA2BH,KAA3B,CADiC;IACnDI,aADmD,OAAAC,SAAA,CAAAC,OAAA,MAAAJ,mBAAA;EAG9D,OAAOZ,MAAA,CAAAgB,OAAA,CAAAC,aAAA,CAACX,UAAD,MAAAS,SAAA,CAAAC,OAAA,MAAgBF,aAAhB;IAA+BH,GAAG,EAAEA,GAApC;IAAAO,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAP;AACD,CAJmB,CAAb"},"metadata":{},"sourceType":"script","externalDependencies":[]}