{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport _react, { useContext, useEffect, useMemo, useRef, useState, useCallback } from \"react\";\nimport { mergeProps, runAfterTransition, focusWithoutScrolling, useGlobalListeners, useSyncRef, isMac } from \"@react-aria/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nvar $e17c9db826984f8ab8e5d837bf0b8$var$state = 'default';\nvar $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect = '';\nfunction $e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection() {\n  if ($e17c9db826984f8ab8e5d837bf0b8$var$state === 'default') {\n    $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = 'none';\n  }\n  $e17c9db826984f8ab8e5d837bf0b8$var$state = 'disabled';\n}\nfunction $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection() {\n  if ($e17c9db826984f8ab8e5d837bf0b8$var$state !== 'disabled') {\n    return;\n  }\n  $e17c9db826984f8ab8e5d837bf0b8$var$state = 'restoring';\n  setTimeout(function () {\n    runAfterTransition(function () {\n      if ($e17c9db826984f8ab8e5d837bf0b8$var$state === 'restoring') {\n        if (document.documentElement.style.webkitUserSelect === 'none') {\n          document.documentElement.style.webkitUserSelect = $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect || '';\n        }\n        $e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect = '';\n        $e17c9db826984f8ab8e5d837bf0b8$var$state = 'default';\n      }\n    });\n  }, 300);\n}\nfunction $f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nvar $a3ff51240de6f955c79cf17a88e349$export$PressResponderContext = _react.createContext(null);\n$a3ff51240de6f955c79cf17a88e349$export$PressResponderContext.displayName = 'PressResponderContext';\nfunction $ffc54430b1dbeee65879852feaaff07d$var$usePressResponderContext(props) {\n  var context = useContext($a3ff51240de6f955c79cf17a88e349$export$PressResponderContext);\n  if (context) {\n    var register = context.register,\n      contextProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(context, [\"register\"]);\n    props = mergeProps(contextProps, props);\n    register();\n  }\n  useSyncRef(context, props.ref);\n  return props;\n}\nexport function usePress(props) {\n  var _usePressResponderCon = $ffc54430b1dbeee65879852feaaff07d$var$usePressResponderContext(props),\n    onPress = _usePressResponderCon.onPress,\n    onPressChange = _usePressResponderCon.onPressChange,\n    onPressStart = _usePressResponderCon.onPressStart,\n    onPressEnd = _usePressResponderCon.onPressEnd,\n    onPressUp = _usePressResponderCon.onPressUp,\n    isDisabled = _usePressResponderCon.isDisabled,\n    isPressedProp = _usePressResponderCon.isPressed,\n    preventFocusOnPress = _usePressResponderCon.preventFocusOnPress,\n    domProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(_usePressResponderCon, [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"ref\"]);\n  var propsRef = useRef(null);\n  propsRef.current = {\n    onPress: onPress,\n    onPressChange: onPressChange,\n    onPressStart: onPressStart,\n    onPressEnd: onPressEnd,\n    onPressUp: onPressUp,\n    isDisabled: isDisabled\n  };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPressed = _useState2[0],\n    setPressed = _useState2[1];\n  var ref = useRef({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n  var _useGlobalListeners = useGlobalListeners(),\n    addGlobalListener = _useGlobalListeners.addGlobalListener,\n    removeAllGlobalListeners = _useGlobalListeners.removeAllGlobalListeners;\n  var pressProps = useMemo(function () {\n    var state = ref.current;\n    var triggerPressStart = function triggerPressStart(originalEvent, pointerType) {\n      var _propsRef$current = propsRef.current,\n        onPressStart = _propsRef$current.onPressStart,\n        onPressChange = _propsRef$current.onPressChange,\n        isDisabled = _propsRef$current.isDisabled;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType: pointerType,\n          target: originalEvent.currentTarget,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n      if (onPressChange) {\n        onPressChange(true);\n      }\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n    var triggerPressEnd = function triggerPressEnd(originalEvent, pointerType, wasPressed) {\n      if (wasPressed === void 0) {\n        wasPressed = true;\n      }\n      var _propsRef$current2 = propsRef.current,\n        onPressEnd = _propsRef$current2.onPressEnd,\n        onPressChange = _propsRef$current2.onPressChange,\n        onPress = _propsRef$current2.onPress,\n        isDisabled = _propsRef$current2.isDisabled;\n      if (!state.didFirePressStart) {\n        return;\n      }\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType: pointerType,\n          target: originalEvent.currentTarget,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n      if (onPressChange) {\n        onPressChange(false);\n      }\n      setPressed(false);\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType: pointerType,\n          target: originalEvent.currentTarget,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n    var triggerPressUp = function triggerPressUp(originalEvent, pointerType) {\n      var _propsRef$current3 = propsRef.current,\n        onPressUp = _propsRef$current3.onPressUp,\n        isDisabled = _propsRef$current3.isDisabled;\n      if (isDisabled) {\n        return;\n      }\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType: pointerType,\n          target: originalEvent.currentTarget,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n    var cancel = function cancel(e) {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();\n      }\n    };\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e.nativeEvent) && e.currentTarget.contains(e.target)) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp: function onKeyUp(e) {\n        if ($ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e.nativeEvent) && !e.repeat && e.currentTarget.contains(e.target)) {\n          triggerPressUp($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) {\n          return;\n        }\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && $f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(e.nativeEvent)) {\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n    var onKeyUp = function onKeyUp(e) {\n      if (state.isPressed && $ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n        state.isPressed = false;\n        triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), 'keyboard', e.target === state.target);\n        removeAllGlobalListeners();\n        if (e.target === state.target && $ffc54430b1dbeee65879852feaaff07d$var$isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') {\n          state.target.click();\n        }\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) {\n          return;\n        }\n        if ($ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(e.target)) {\n          e.preventDefault();\n        }\n        state.pointerType = $ffc54430b1dbeee65879852feaaff07d$var$isVirtualPointerEvent(e.nativeEvent) ? 'virtual' : e.pointerType;\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n          $e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection();\n          triggerPressStart(e, state.pointerType);\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        if (e.button === 0) {\n          if ($ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(e.target)) {\n            e.preventDefault();\n          }\n          e.stopPropagation();\n        }\n      };\n      pressProps.onPointerUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        if (e.button === 0 && $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n        if ($ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), state.pointerType, false);\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if ($ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e, state.target)) {\n            triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), state.pointerType, false);\n          }\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();\n        }\n      };\n      var onPointerCancel = function onPointerCancel(e) {\n        cancel(e);\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) {\n          return;\n        }\n        if ($ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(e.target)) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = $f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n        }\n      };\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button !== 0) {\n          return;\n        }\n        state.isPressed = false;\n        removeAllGlobalListeners();\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n        if ($ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(e, state.target)) {\n          triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd($ffc54430b1dbeee65879852feaaff07d$var$createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isOverTarget = false;\n      };\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        e.stopPropagation();\n        var touch = $ffc54430b1dbeee65879852feaaff07d$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n        $e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection();\n        triggerPressStart(e, state.pointerType);\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n        var touch = $ffc54430b1dbeee65879852feaaff07d$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n        }\n      };\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n        var touch = $ffc54430b1dbeee65879852feaaff07d$var$getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();\n        removeAllGlobalListeners();\n      };\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n      var onScroll = function onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n          });\n        }\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) {\n          return;\n        }\n        cancel(e);\n      };\n    }\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners]);\n  useEffect(function () {\n    return function () {\n      return $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();\n    };\n  }, []);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$isHTMLAnchorLink(target) {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent(event) {\n  var key = event.key,\n    target = event.target;\n  var element = target;\n  var tagName = element.tagName,\n    isContentEditable = element.isContentEditable;\n  var role = element.getAttribute('role');\n  return (key === 'Enter' || key === ' ' || key === 'Spacebar') && tagName !== 'INPUT' && tagName !== 'TEXTAREA' && isContentEditable !== true && (!$ffc54430b1dbeee65879852feaaff07d$var$isHTMLAnchorLink(element) || role === 'button' && key !== 'Enter') && !(role === 'link' && key !== 'Enter');\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n  for (var i = 0; i < changedTouches.length; i++) {\n    var touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey\n  };\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$getPointClientRect(point) {\n  var offsetX = point.width / 2 || point.radiusX || 0;\n  var offsetY = point.height / 2 || point.radiusY || 0;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$areRectanglesOverlapping(a, b) {\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $ffc54430b1dbeee65879852feaaff07d$var$getPointClientRect(point);\n  return $ffc54430b1dbeee65879852feaaff07d$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault(target) {\n  return !target.closest('[draggable=\"true\"]');\n}\nfunction $ffc54430b1dbeee65879852feaaff07d$var$isVirtualPointerEvent(event) {\n  return event.width === 0 && event.height === 0;\n}\nexport var Pressable = _react.forwardRef(function (_ref, ref) {\n  var _ref2;\n  var children = _ref.children,\n    props = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(_ref, [\"children\"]);\n  var newRef = useRef();\n  ref = (_ref2 = ref) != null ? _ref2 : newRef;\n  var _usePress = usePress(_babelRuntimeHelpersEsmExtends({}, props, {\n      ref: ref\n    })),\n    pressProps = _usePress.pressProps;\n  var child = _react.Children.only(children);\n  return _react.cloneElement(child, _babelRuntimeHelpersEsmExtends({\n    ref: ref\n  }, mergeProps(child.props, pressProps)));\n});\nexport var PressResponder = _react.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    props = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(_ref, [\"children\"]);\n  var isRegistered = useRef(false);\n  var prevContext = useContext($a3ff51240de6f955c79cf17a88e349$export$PressResponderContext);\n  var context = mergeProps(prevContext || {}, _babelRuntimeHelpersEsmExtends({}, props, {\n    ref: ref || (prevContext == null ? void 0 : prevContext.ref),\n    register: function register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  }));\n  useSyncRef(prevContext, ref);\n  useEffect(function () {\n    if (!isRegistered.current) {\n      console.warn('A PressResponder was rendered without a pressable child. ' + 'Either call the usePress hook, or wrap your DOM node with <Pressable> component.');\n    }\n  }, []);\n  return _react.createElement($a3ff51240de6f955c79cf17a88e349$export$PressResponderContext.Provider, {\n    value: context\n  }, children);\n});\nexport function useFocus(props) {\n  if (props.isDisabled) {\n    return {\n      focusProps: {}\n    };\n  }\n  var onFocus, onBlur;\n  if (props.onFocus || props.onFocusChange) {\n    onFocus = function onFocus(e) {\n      if (e.target === e.currentTarget) {\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n        if (props.onFocusChange) {\n          props.onFocusChange(true);\n        }\n      }\n    };\n  }\n  if (props.onBlur || props.onFocusChange) {\n    onBlur = function onBlur(e) {\n      if (e.target === e.currentTarget) {\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n        if (props.onFocusChange) {\n          props.onFocusChange(false);\n        }\n      }\n    };\n  }\n  return {\n    focusProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\nvar $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = null;\nvar $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers = new Set();\nvar $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasSetupGlobalListeners = false;\nvar $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = false;\nvar $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently = false;\nvar $d01f69bb2ab5f70dfd0005370a2a2cbc$var$FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers(modality, e) {\n  for (var _iterator = _createForOfIteratorHelperLoose($d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers), _step; !(_step = _iterator()).done;) {\n    var handler = _step.value;\n    handler(modality, e);\n  }\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$isValidKey(e) {\n  return !(e.metaKey || !isMac() && e.altKey || e.ctrlKey || e.type === 'keyup' && (e.key === 'Control' || e.key === 'Shift'));\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleKeyboardEvent(e) {\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;\n  if ($d01f69bb2ab5f70dfd0005370a2a2cbc$var$isValidKey(e)) {\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = 'keyboard';\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers('keyboard', e);\n  }\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent(e) {\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers('pointer', e);\n  }\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleClickEvent(e) {\n  if ($f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick(e)) {\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = 'virtual';\n  }\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleFocusEvent(e) {\n  if (e.target === window || e.target === document) {\n    return;\n  }\n  if (!$d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus && !$d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently) {\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = 'virtual';\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers('virtual', e);\n  }\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = false;\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently = false;\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleWindowBlur() {\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = false;\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently = true;\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasSetupGlobalListeners) {\n    return;\n  }\n  var focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n  document.addEventListener('keydown', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleKeyboardEvent, true);\n  document.addEventListener('keyup', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleKeyboardEvent, true);\n  document.addEventListener('click', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleClickEvent, true);\n  window.addEventListener('focus', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleFocusEvent, true);\n  window.addEventListener('blur', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleWindowBlur, false);\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);\n    document.addEventListener('pointermove', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);\n    document.addEventListener('pointerup', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);\n    document.addEventListener('mousemove', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);\n    document.addEventListener('mouseup', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent, true);\n  }\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasSetupGlobalListeners = true;\n}\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents);\n  }\n}\nexport function isFocusVisible() {\n  return $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality !== 'pointer';\n}\nexport function getInteractionModality() {\n  return $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality;\n}\nexport function setInteractionModality(modality) {\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality = modality;\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers(modality, null);\n}\nexport function useInteractionModality() {\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents();\n  var _useState3 = useState($d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modality = _useState4[0],\n    setModality = _useState4[1];\n  useEffect(function () {\n    var handler = function handler() {\n      setModality($d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality);\n    };\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers.add(handler);\n    return function () {\n      $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers.delete(handler);\n    };\n  }, []);\n  return modality;\n}\nfunction $d01f69bb2ab5f70dfd0005370a2a2cbc$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !$d01f69bb2ab5f70dfd0005370a2a2cbc$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\nexport function useFocusVisible(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    isTextInput = _props.isTextInput,\n    autoFocus = _props.autoFocus;\n  var _useState5 = useState(autoFocus || isFocusVisible()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFocusVisibleState = _useState6[0],\n    setFocusVisible = _useState6[1];\n  useFocusVisibleListener(function (isFocusVisible) {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {\n    isTextInput: isTextInput\n  });\n  return {\n    isFocusVisible: isFocusVisibleState\n  };\n}\nexport function useFocusVisibleListener(fn, deps, opts) {\n  $d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents();\n  useEffect(function () {\n    var handler = function handler(modality, e) {\n      if (!$d01f69bb2ab5f70dfd0005370a2a2cbc$var$isKeyboardFocusEvent(opts == null ? void 0 : opts.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers.add(handler);\n    return function () {\n      return $d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers.delete(handler);\n    };\n  }, deps);\n}\nexport function useFocusWithin(props) {\n  var state = useRef({\n    isFocusWithin: false\n  }).current;\n  if (props.isDisabled) {\n    return {\n      focusWithinProps: {}\n    };\n  }\n  var onFocus = function onFocus(e) {\n    if (!state.isFocusWithin) {\n      if (props.onFocusWithin) {\n        props.onFocusWithin(e);\n      }\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(true);\n      }\n      state.isFocusWithin = true;\n    }\n  };\n  var onBlur = function onBlur(e) {\n    if (state.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      if (props.onBlurWithin) {\n        props.onBlurWithin(e);\n      }\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(false);\n      }\n      state.isFocusWithin = false;\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\nvar $b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents = false;\nvar $b1a784c66b81d90efa4f74e05b$var$hoverCount = 0;\nfunction $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents() {\n  $b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents = true;\n  setTimeout(function () {\n    $b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\nfunction $b1a784c66b81d90efa4f74e05b$var$handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\nfunction $b1a784c66b81d90efa4f74e05b$var$setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', $b1a784c66b81d90efa4f74e05b$var$handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents);\n  }\n  $b1a784c66b81d90efa4f74e05b$var$hoverCount++;\n  return function () {\n    $b1a784c66b81d90efa4f74e05b$var$hoverCount--;\n    if ($b1a784c66b81d90efa4f74e05b$var$hoverCount > 0) {\n      return;\n    }\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', $b1a784c66b81d90efa4f74e05b$var$handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', $b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\nexport function useHover(props) {\n  var onHoverStart = props.onHoverStart,\n    onHoverChange = props.onHoverChange,\n    onHoverEnd = props.onHoverEnd,\n    isDisabled = props.isDisabled;\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isHovered = _useState8[0],\n    setHovered = _useState8[1];\n  var state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n  useEffect($b1a784c66b81d90efa4f74e05b$var$setupGlobalTouchEvents, []);\n  var _useMemo = useMemo(function () {\n      var triggerHoverStart = function triggerHoverStart(event, pointerType) {\n        state.pointerType = pointerType;\n        if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n          return;\n        }\n        state.isHovered = true;\n        var target = event.target;\n        state.target = target;\n        if (onHoverStart) {\n          onHoverStart({\n            type: 'hoverstart',\n            target: target,\n            pointerType: pointerType\n          });\n        }\n        if (onHoverChange) {\n          onHoverChange(true);\n        }\n        setHovered(true);\n      };\n      var triggerHoverEnd = function triggerHoverEnd(event, pointerType) {\n        state.pointerType = '';\n        state.target = null;\n        if (pointerType === 'touch' || !state.isHovered) {\n          return;\n        }\n        state.isHovered = false;\n        var target = event.target;\n        if (onHoverEnd) {\n          onHoverEnd({\n            type: 'hoverend',\n            target: target,\n            pointerType: pointerType\n          });\n        }\n        if (onHoverChange) {\n          onHoverChange(false);\n        }\n        setHovered(false);\n      };\n      var hoverProps = {};\n      if (typeof PointerEvent !== 'undefined') {\n        hoverProps.onPointerEnter = function (e) {\n          if ($b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n            return;\n          }\n          triggerHoverStart(e, e.pointerType);\n        };\n        hoverProps.onPointerLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) {\n            triggerHoverEnd(e, e.pointerType);\n          }\n        };\n      } else {\n        hoverProps.onTouchStart = function () {\n          state.ignoreEmulatedMouseEvents = true;\n        };\n        hoverProps.onMouseEnter = function (e) {\n          if (!state.ignoreEmulatedMouseEvents && !$b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents) {\n            triggerHoverStart(e, 'mouse');\n          }\n          state.ignoreEmulatedMouseEvents = false;\n        };\n        hoverProps.onMouseLeave = function (e) {\n          if (!isDisabled && e.currentTarget.contains(e.target)) {\n            triggerHoverEnd(e, 'mouse');\n          }\n        };\n      }\n      return {\n        hoverProps: hoverProps,\n        triggerHoverEnd: triggerHoverEnd\n      };\n    }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]),\n    hoverProps = _useMemo.hoverProps,\n    triggerHoverEnd = _useMemo.triggerHoverEnd;\n  useEffect(function () {\n    if (isDisabled) {\n      triggerHoverEnd({\n        target: state.target\n      }, state.pointerType);\n    }\n  }, [isDisabled]);\n  return {\n    hoverProps: hoverProps,\n    isHovered: isHovered\n  };\n}\nexport function useInteractOutside(props) {\n  var ref = props.ref,\n    onInteractOutside = props.onInteractOutside,\n    isDisabled = props.isDisabled,\n    onInteractOutsideStart = props.onInteractOutsideStart;\n  var stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var state = stateRef.current;\n  useEffect(function () {\n    var onPointerDown = function onPointerDown(e) {\n      if (isDisabled) {\n        return;\n      }\n      if ($e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e, ref) && onInteractOutside) {\n        if (onInteractOutsideStart) {\n          onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n    if (typeof PointerEvent !== 'undefined') {\n      var onPointerUp = function onPointerUp(e) {\n        if (isDisabled) {\n          return;\n        }\n        if (state.isPointerDown && onInteractOutside && $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n      return function () {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      var onMouseUp = function onMouseUp(e) {\n        if (isDisabled) {\n          return;\n        }\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && onInteractOutside && $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        if (isDisabled) {\n          return;\n        }\n        state.ignoreEmulatedMouseEvents = true;\n        if (onInteractOutside && state.isPointerDown && $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n      return function () {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [onInteractOutside, ref, state.ignoreEmulatedMouseEvents, state.isPointerDown, isDisabled]);\n}\nfunction $e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n  if (event.target) {\n    var ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n  return ref.current && !ref.current.contains(event.target);\n}\nfunction $dc0d75166de722fbf58eb6c3552$export$createEventHandler(handler) {\n  if (!handler) {\n    return;\n  }\n  var shouldStopPropagation = true;\n  return function (e) {\n    var event = _babelRuntimeHelpersEsmExtends({}, e, {\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented: function isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation: function stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation: function continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    });\n    handler(event);\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\nexport function useKeyboard(props) {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: $dc0d75166de722fbf58eb6c3552$export$createEventHandler(props.onKeyDown),\n      onKeyUp: $dc0d75166de722fbf58eb6c3552$export$createEventHandler(props.onKeyUp)\n    }\n  };\n}\nexport function useMove(props) {\n  var onMoveStart = props.onMoveStart,\n    onMove = props.onMove,\n    onMoveEnd = props.onMoveEnd;\n  var state = useRef({\n    didMove: false,\n    lastPosition: null,\n    id: null\n  });\n  var _useGlobalListeners2 = useGlobalListeners(),\n    addGlobalListener = _useGlobalListeners2.addGlobalListener,\n    removeGlobalListener = _useGlobalListeners2.removeGlobalListener;\n  var moveProps = useMemo(function () {\n    var moveProps = {};\n    var start = function start() {\n      $e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection();\n      state.current.didMove = false;\n    };\n    var move = function move(pointerType, deltaX, deltaY) {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart == null ? void 0 : onMoveStart({\n          type: 'movestart',\n          pointerType: pointerType\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType: pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n    };\n    var end = function end(pointerType) {\n      $e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd == null ? void 0 : onMoveEnd({\n          type: 'moveend',\n          pointerType: pointerType\n        });\n      }\n    };\n    if (typeof PointerEvent === 'undefined') {\n      var onMouseMove = function onMouseMove(e) {\n        if (e.button === 0) {\n          move('mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = function (e) {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      var onTouchMove = function onTouchMove(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref) {\n          var identifier = _ref.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          var _e$changedTouches$tou = e.changedTouches[touch],\n            pageX = _e$changedTouches$tou.pageX,\n            pageY = _e$changedTouches$tou.pageY;\n          move('touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: pageX,\n            pageY: pageY\n          };\n        }\n      };\n      var onTouchEnd = function onTouchEnd(e) {\n        var touch = _toConsumableArray(e.changedTouches).findIndex(function (_ref2) {\n          var identifier = _ref2.identifier;\n          return identifier === state.current.id;\n        });\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = function (e) {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n        var _e$changedTouches$ = e.changedTouches[0],\n          pageX = _e$changedTouches$.pageX,\n          pageY = _e$changedTouches$.pageY,\n          identifier = _e$changedTouches$.identifier;\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {\n          pageX: pageX,\n          pageY: pageY\n        };\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || 'mouse';\n          move(pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.current.id) {\n          var pointerType = e.pointerType || 'mouse';\n          end(pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n      moveProps.onPointerDown = function (e) {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {\n            pageX: e.pageX,\n            pageY: e.pageY\n          };\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n    var triggerKeyboardMove = function triggerKeyboardMove(deltaX, deltaY) {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n    moveProps.onKeyDown = function (e) {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n  return {\n    moveProps: moveProps\n  };\n}\nexport function useScrollWheel(props, ref) {\n  var onScroll = props.onScroll,\n    isDisabled = props.isDisabled;\n  var onScrollHandler = useCallback(function (e) {\n    if (e.ctrlKey) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) {\n      onScroll({\n        deltaX: e.deltaX,\n        deltaY: e.deltaY\n      });\n    }\n  }, [onScroll]);\n  useEffect(function () {\n    var elem = ref.current;\n    if (isDisabled) {\n      return;\n    }\n    elem.addEventListener('wheel', onScrollHandler);\n    return function () {\n      elem.removeEventListener('wheel', onScrollHandler);\n    };\n  }, [onScrollHandler, ref, isDisabled]);\n}","map":{"version":3,"names":["$e17c9db826984f8ab8e5d837bf0b8$var$state","$e17c9db826984f8ab8e5d837bf0b8$var$savedUserSelect","$e17c9db826984f8ab8e5d837bf0b8$export$disableTextSelection","disableTextSelection","document","documentElement","style","webkitUserSelect","$e17c9db826984f8ab8e5d837bf0b8$export$restoreTextSelection","restoreTextSelection","setTimeout","runAfterTransition","$f67ef9f1b8ed09b4b00fd0840cd8b94b$export$isVirtualClick","isVirtualClick","event","mozInputSource","isTrusted","detail","pointerType","$a3ff51240de6f955c79cf17a88e349$export$PressResponderContext","_react","createContext","displayName","$ffc54430b1dbeee65879852feaaff07d$var$usePressResponderContext","usePressResponderContext","props","context","useContext","register","contextProps","_babelRuntimeHelpersEsmObjectWithoutPropertiesLoose","mergeProps","useSyncRef","ref","usePress","_usePressResponderCon","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressedProp","isPressed","preventFocusOnPress","domProps","propsRef","useRef","current","_useState","useState","_useState2","_slicedToArray","setPressed","ignoreEmulatedMouseEvents","ignoreClickAfterPress","didFirePressStart","activePointerId","target","isOverTarget","_useGlobalListeners","useGlobalListeners","addGlobalListener","removeAllGlobalListeners","pressProps","useMemo","state","triggerPressStart","originalEvent","_propsRef$current","type","currentTarget","shiftKey","metaKey","ctrlKey","triggerPressEnd","wasPressed","_propsRef$current2","triggerPressUp","_propsRef$current3","cancel","e","$ffc54430b1dbeee65879852feaaff07d$var$createEvent","onKeyDown","$ffc54430b1dbeee65879852feaaff07d$var$isValidKeyboardEvent","nativeEvent","contains","preventDefault","stopPropagation","repeat","onKeyUp","onClick","button","focusWithoutScrolling","$ffc54430b1dbeee65879852feaaff07d$var$isHTMLAnchorLink","getAttribute","click","PointerEvent","onPointerDown","$ffc54430b1dbeee65879852feaaff07d$var$shouldPreventDefault","$ffc54430b1dbeee65879852feaaff07d$var$isVirtualPointerEvent","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","$ffc54430b1dbeee65879852feaaff07d$var$isOverTarget","onDragStart","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","$ffc54430b1dbeee65879852feaaff07d$var$getTouchFromEvent","identifier","window","onScroll","onTouchMove","$ffc54430b1dbeee65879852feaaff07d$var$getTouchById","onTouchEnd","onTouchCancel","useEffect","isHTMLAnchorLink","tagName","hasAttribute","isValidKeyboardEvent","key","element","isContentEditable","role","getTouchFromEvent","targetTouches","length","getTouchById","changedTouches","i","createEvent","$ffc54430b1dbeee65879852feaaff07d$var$getPointClientRect","getPointClientRect","point","offsetX","width","radiusX","offsetY","height","radiusY","top","clientY","right","clientX","bottom","left","$ffc54430b1dbeee65879852feaaff07d$var$areRectanglesOverlapping","areRectanglesOverlapping","a","b","rect","getBoundingClientRect","pointRect","shouldPreventDefault","closest","isVirtualPointerEvent","Pressable","forwardRef","_ref","_ref2","children","newRef","_usePress","_babelRuntimeHelpersEsmExtends","child","Children","only","cloneElement","PressResponder","isRegistered","prevContext","console","warn","createElement","Provider","value","useFocus","focusProps","onFocus","onBlur","onFocusChange","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$currentModality","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$changeHandlers","Set","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasSetupGlobalListeners","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasEventBeforeFocus","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$hasBlurredWindowRecently","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$triggerChangeHandlers","triggerChangeHandlers","modality","_iterator","_createForOfIteratorHelperLoose","_step","done","handler","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$isValidKey","isValidKey","isMac","altKey","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleKeyboardEvent","handleKeyboardEvent","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$handlePointerEvent","handlePointerEvent","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleClickEvent","handleClickEvent","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleFocusEvent","handleFocusEvent","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$handleWindowBlur","handleWindowBlur","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$setupGlobalFocusEvents","setupGlobalFocusEvents","focus","HTMLElement","prototype","apply","arguments","addEventListener","readyState","isFocusVisible","getInteractionModality","setInteractionModality","useInteractionModality","_useState3","_useState4","setModality","add","delete","$d01f69bb2ab5f70dfd0005370a2a2cbc$var$isKeyboardFocusEvent","isKeyboardFocusEvent","isTextInput","KeyboardEvent","useFocusVisible","_props","autoFocus","_useState5","_useState6","isFocusVisibleState","setFocusVisible","useFocusVisibleListener","fn","deps","opts","useFocusWithin","isFocusWithin","focusWithinProps","onFocusWithin","onFocusWithinChange","relatedTarget","onBlurWithin","$b1a784c66b81d90efa4f74e05b$var$globalIgnoreEmulatedMouseEvents","$b1a784c66b81d90efa4f74e05b$var$hoverCount","$b1a784c66b81d90efa4f74e05b$var$setGlobalIgnoreEmulatedMouseEvents","setGlobalIgnoreEmulatedMouseEvents","$b1a784c66b81d90efa4f74e05b$var$handleGlobalPointerEvent","handleGlobalPointerEvent","$b1a784c66b81d90efa4f74e05b$var$setupGlobalTouchEvents","setupGlobalTouchEvents","removeEventListener","useHover","onHoverStart","onHoverChange","onHoverEnd","_useState7","_useState8","isHovered","setHovered","_useMemo","triggerHoverStart","triggerHoverEnd","hoverProps","onPointerEnter","onPointerLeave","useInteractOutside","onInteractOutside","onInteractOutsideStart","stateRef","isPointerDown","$e415bb64ab27cb8fbfac2f417412022f$var$isValidEvent","isValidEvent","ownerDocument","$dc0d75166de722fbf58eb6c3552$export$createEventHandler","createEventHandler","shouldStopPropagation","isDefaultPrevented","error","continuePropagation","useKeyboard","keyboardProps","useMove","onMoveStart","onMove","onMoveEnd","didMove","lastPosition","id","_useGlobalListeners2","removeGlobalListener","moveProps","start","move","deltaX","deltaY","end","onMouseMove","pageX","pageY","_toConsumableArray","findIndex","_e$changedTouches$tou","_e$changedTouches$","triggerKeyboardMove","useScrollWheel","onScrollHandler","useCallback","elem"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\textSelection.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\utils.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\context.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\usePress.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\Pressable.tsx","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\PressResponder.tsx","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocus.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusVisible.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusWithin.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useHover.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useInteractOutside.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\createEventHandler.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useKeyboard.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useMove.ts","E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useScrollWheel.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\ntype State = 'default' | 'disabled' | 'restoring';\n\nlet state: State = 'default';\nlet savedUserSelect = '';\n\nexport function disableTextSelection() {\n  if (state === 'default') {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = 'none';\n  }\n\n  state = 'disabled';\n}\n\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== 'disabled') {\n    return;\n  }\n\n  state = 'restoring';\n\n  // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === 'restoring') {\n        if (document.documentElement.style.webkitUserSelect === 'none') {\n          document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n        }\n\n        savedUserSelect = '';\n        state = 'default';\n      }\n    });\n  }, 300);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<HTMLElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {focusWithoutScrolling, mergeProps, useGlobalListeners, useSyncRef} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport {isVirtualClick} from './utils';\nimport {PointerType, PressEvents} from '@react-types/shared';\nimport {PressResponderContext} from './context';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<HTMLElement>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  didFirePressStart: boolean,\n  activePointerId: any,\n  target: HTMLElement | null,\n  isOverTarget: boolean,\n  pointerType: PointerType,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: HTMLAttributes<HTMLElement>\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n  useSyncRef(context, props.ref);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb,\n    ...domProps\n  } = usePressResponderContext(props);\n  let propsRef = useRef<PressHookProps>(null);\n  propsRef.current = {onPress, onPressChange, onPressStart, onPressEnd, onPressUp, isDisabled};\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressStart, onPressChange, isDisabled} = propsRef.current;\n      if (isDisabled || state.didFirePressStart) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      state.didFirePressStart = true;\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      let {onPressEnd, onPressChange, onPress, isDisabled} = propsRef.current;\n      if (!state.didFirePressStart) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n      state.didFirePressStart = false;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed && !isDisabled) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      let {onPressUp, isDisabled} = propsRef.current;\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let cancel = (e: EventBase) => {\n      if (state.isPressed) {\n        if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n        state.isPressed = false;\n        state.isOverTarget = false;\n        state.activePointerId = null;\n        state.pointerType = null;\n        removeAllGlobalListeners();\n        restoreTextSelection();\n      }\n    };\n\n    let pressProps: HTMLAttributes<HTMLElement> = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && e.currentTarget.contains(e.target as HTMLElement)) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget as HTMLElement;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && !e.repeat && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && isVirtualClick(e.nativeEvent)) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        state.isPressed = false;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', e.target === state.target);\n        removeAllGlobalListeners();\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (e.target === state.target && isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks, and ignore events that bubbled through portals.\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.target as Element)) {\n          e.preventDefault();\n        }\n\n        // iOS safari fires pointer events from VoiceOver (but only when outside an iframe...)\n        // https://bugs.webkit.org/show_bug.cgi?id=222627\n        state.pointerType = isVirtualPointerEvent(e.nativeEvent) ? 'virtual' : e.pointerType;\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          disableTextSelection();\n          triggerPressStart(e, state.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          if (shouldPreventDefault(e.target as Element)) {\n            e.preventDefault();\n          }\n\n          e.stopPropagation();\n        }\n      };\n\n      pressProps.onPointerUp = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          restoreTextSelection();\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        cancel(e);\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0 || !e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        if (shouldPreventDefault(e.target as Element)) {\n          e.preventDefault();\n        }\n\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse';\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, state.pointerType);\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, state.pointerType);\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeAllGlobalListeners();\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), state.pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = 'touch';\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        disableTextSelection();\n        triggerPressStart(e, state.pointerType);\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, state.pointerType, false);\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, state.pointerType);\n          triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, state.pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        restoreTextSelection();\n        removeAllGlobalListeners();\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancel(e);\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as HTMLElement).contains(state.target)) {\n          cancel({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n          });\n        }\n      };\n\n      pressProps.onDragStart = (e) => {\n        if (!e.currentTarget.contains(e.target as HTMLElement)) {\n          return;\n        }\n\n        cancel(e);\n      };\n    }\n\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => restoreTextSelection();\n  }, []);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: HTMLElement): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent): boolean {\n  const {key, target} = event;\n  const element = target as HTMLElement;\n  const {tagName, isContentEditable} = element;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar') &&\n    (tagName !== 'INPUT' &&\n      tagName !== 'TEXTAREA' &&\n      isContentEditable !== true) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: HTMLElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey\n  };\n}\n\ninterface Rect {\n  top: number,\n  right: number,\n  bottom: number,\n  left: number\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number,\n  width?: number,\n  height?: number,\n  radiusX?: number,\n  radiusY?: number\n}\n\nfunction getPointClientRect(point: EventPoint): Rect {\n  let offsetX = (point.width / 2) || point.radiusX || 0;\n  let offsetY = (point.height / 2) || point.radiusY || 0;\n\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\n\nfunction areRectanglesOverlapping(a: Rect, b: Rect) {\n  // check if they cannot overlap on x axis\n  if (a.left > b.right || b.left > a.right) {\n    return false;\n  }\n  // check if they cannot overlap on y axis\n  if (a.top > b.bottom || b.top > a.bottom) {\n    return false;\n  }\n  return true;\n}\n\nfunction isOverTarget(point: EventPoint, target: HTMLElement) {\n  let rect = target.getBoundingClientRect();\n  let pointRect = getPointClientRect(point);\n  return areRectanglesOverlapping(rect, pointRect);\n}\n\nfunction shouldPreventDefault(target: Element) {\n  // We cannot prevent default if the target is inside a draggable element.\n  return !target.closest('[draggable=\"true\"]');\n}\n\nfunction isVirtualPointerEvent(event: PointerEvent) {\n  // If the pointer size is zero, then we assume it's from a screen reader.\n  return event.width === 0 && event.height === 0;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {HTMLAttributes, ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<HTMLAttributes<HTMLElement>, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<HTMLElement>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<HTMLElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref: ref || prevContext?.ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useSyncRef(prevContext, ref);\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes} from 'react';\nimport {FocusEvents} from '@react-types/shared';\n\ninterface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  if (props.isDisabled) {\n    return {focusProps: {}};\n  }\n\n  let onFocus, onBlur;\n  if (props.onFocus || props.onFocusChange) {\n    onFocus = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(true);\n        }\n      }\n    };\n  }\n\n  if (props.onBlur || props.onFocusChange) {\n    onBlur = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(false);\n        }\n      }\n    };\n  }\n\n  return {\n    focusProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac} from '@react-aria/utils';\nimport {isVirtualClick} from './utils';\nimport {useEffect, useState} from 'react';\n\ntype Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\ntype FocusVisibleHandler = (isFocusVisible: boolean) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.type === 'keyup' && (e.key === 'Control' || e.key === 'Shift'));\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalFocusEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalFocusEvents);\n  }\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(opts?.isTextInput, modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => changeHandlers.delete(handler);\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes, useRef} from 'react';\n\ninterface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\ninterface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let state = useRef({\n    isFocusWithin: false\n  }).current;\n\n  if (props.isDisabled) {\n    return {focusWithinProps: {}};\n  }\n\n  let onFocus = (e: FocusEvent) => {\n    if (!state.isFocusWithin) {\n      if (props.onFocusWithin) {\n        props.onFocusWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(true);\n      }\n\n      state.isFocusWithin = true;\n    }\n  };\n\n  let onBlur = (e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.isFocusWithin && !e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      if (props.onBlurWithin) {\n        props.onBlurWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(false);\n      }\n\n      state.isFocusWithin = false;\n    }\n  };\n\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {HoverEvents} from '@react-types/shared';\nimport {HTMLAttributes, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: HTMLAttributes<HTMLElement>,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.target;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.target;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: HTMLAttributes<HTMLElement> = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as HTMLElement)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({target: state.target}, state.pointerType);\n    }\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\ninterface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  onInteractOutsideStart?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  let state = stateRef.current;\n\n  useEffect(() => {\n    let onPointerDown = (e) => {\n      if (isDisabled) {\n        return;\n      }\n      if (isValidEvent(e, ref) && onInteractOutside) {\n        if (onInteractOutsideStart) {\n          onInteractOutsideStart(e);\n        }\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (isDisabled) {\n          return;\n        }\n        if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (isDisabled) {\n          return;\n        }\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        if (isDisabled) {\n          return;\n        }\n        state.ignoreEmulatedMouseEvents = true;\n        if (onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, true);\n      document.addEventListener('mouseup', onMouseUp, true);\n      document.addEventListener('touchstart', onPointerDown, true);\n      document.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, true);\n        document.removeEventListener('mouseup', onMouseUp, true);\n        document.removeEventListener('touchstart', onPointerDown, true);\n        document.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [onInteractOutside, ref, state.ignoreEmulatedMouseEvents, state.isPointerDown, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {HTMLAttributes} from 'react';\nimport {KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {MoveEvents, PointerType} from '@react-types/shared';\nimport React, {HTMLAttributes, useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\ninterface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: HTMLAttributes<HTMLElement> = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n    };\n    let end = (pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move('mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move('touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n            // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n          end(pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (deltaX: number, deltaY: number) => {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback, useEffect} from 'react';\nimport {ScrollEvents} from '@react-types/shared';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEffect(() => {\n    let elem = ref.current;\n    if (isDisabled) {\n      return;\n    }\n    elem.addEventListener('wheel', onScrollHandler);\n\n    return () => {\n      elem.removeEventListener('wheel', onScrollHandler);\n    };\n  }, [onScrollHandler, ref, isDisabled]);\n}\n"],"mappings":";;;;;;;;;AAyBA,IAAIA,wCAAY,GAAG,SAAnB;AACA,IAAIC,kDAAe,GAAG,EAAtB;AAEO,SAASC,0DAATC,CAAA,EAAgC;EACrC,IAAIH,wCAAK,KAAK,SAAd,EAAyB;IACvBC,kDAAe,GAAGG,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAAjD;IACAH,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,GAAkD,MAAlD;EACD;EAEDP,wCAAK,GAAG,UAAR;AACD;AAEM,SAASQ,0DAATC,CAAA,EAAgC;EAGrC,IAAIT,wCAAK,KAAK,UAAd,EAA0B;IACxB;EACD;EAEDA,wCAAK,GAAG,WAAR;EAIAU,UAAU,CAAC,YAAM;IAGfC,kBAAkB,CAAC,YAAM;MAEvB,IAAIX,wCAAK,KAAK,WAAd,EAA2B;QACzB,IAAII,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,KAAoD,MAAxD,EAAgE;UAC9DH,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,gBAA/B,GAAkDN,kDAAe,IAAI,EAArE;QACD;QAEDA,kDAAe,GAAG,EAAlB;QACAD,wCAAK,GAAG,SAAR;MACD;IACF,CAViB,CAAlB;EAWD,CAdS,EAcP,GAdO,CAAV;AAeD;ACxCM,SAASY,uDAATC,CAAwBC,KAAxB,EAAmE;EAExE,IAAKA,KAAD,CAAeC,cAAf,KAAkC,CAAlC,IAAuCD,KAAK,CAACE,SAAjD,EAA4D;IAC1D,OAAO,IAAP;EACD;EAED,OAAOF,KAAK,CAACG,MAAN,KAAiB,CAAjB,IAAsB,CAAEH,KAAD,CAAwBI,WAAtD;AACD;ACVM,IAAMC,4DAAqB,GAAGC,MAAK,CAACC,aAAN,CAA4C,IAA5C,CAA9B;AACPF,4DAAqB,CAACG,WAAtB,GAAoC,uBAApC;AC2CA,SAASC,8DAATC,CAAkCC,KAAlC,EAAyE;EAEvE,IAAIC,OAAO,GAAGC,UAAU,CAAAR,4DAAA,CAAxB;EACA,IAAIO,OAAJ,EAAa;IACP,IAACE,QAAA,GAA6BF,OAAlC,CAAKE,QAAA;MAAaC,YAAlB,GAAAC,mDAAA,CAAkCJ,OAAlC;IACAD,KAAK,GAAGM,UAAU,CAACF,YAAD,EAAeJ,KAAf,CAAlB;IACAG,QAAQ;EACT;EACDI,UAAU,CAACN,OAAD,EAAUD,KAAK,CAACQ,GAAhB,CAAV;EAEA,OAAOR,KAAP;AACD;OAOM,SAASS,QAATA,CAAkBT,KAAlB,EAAsD;EAC3D,IAAAU,qBAAA,GAYIZ,8DAAwB,CAACE,KAAD,CAZ5B;IACEW,OADE,GAAJD,qBAAA,CACEC,OADE;IAEFC,aAFE,GAAJF,qBAAA,CAEEE,aAFE;IAGFC,YAHE,GAAJH,qBAAA,CAGEG,YAHE;IAIFC,UAJE,GAAJJ,qBAAA,CAIEI,UAJE;IAKFC,SALE,GAAJL,qBAAA,CAKEK,SALE;IAMFC,UANE,GAAJN,qBAAA,CAMEM,UANE;IAOSC,aAPT,GAAJP,qBAAA,CAOEQ,SAAS;IACTC,mBAAA,GARFT,qBAAA,CAQES,mBAAA;IAGGC,QAXL,GAAAf,mDAAA,CAAAK,qBAAA;EAaA,IAAIW,QAAQ,GAAGC,MAAM,CAAiB,IAAjB,CAArB;EACAD,QAAQ,CAACE,OAAT,GAAmB;IAACZ,OAAD,EAACA,OAAD;IAAUC,aAAV,EAAUA,aAAV;IAAyBC,YAAzB,EAAyBA,YAAzB;IAAuCC,UAAvC,EAAuCA,UAAvC;IAAmDC,SAAnD,EAAmDA,SAAnD;IAA8DC,UAAA,EAAAA;EAA9D,CAAnB;EAEA,IAAAQ,SAAA,GAA8BC,QAAQ,CAAC,KAAD,CAAtC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAKN,SAAD,GAAAQ,UAAA;IAAYE,UAAZ,GAAAF,UAAA;EACJ,IAAIlB,GAAG,GAAGc,MAAM,CAAa;IAC3BJ,SAAS,EAAE,KADgB;IAE3BW,yBAAyB,EAAE,KAFA;IAG3BC,qBAAqB,EAAE,KAHI;IAI3BC,iBAAiB,EAAE,KAJQ;IAK3BC,eAAe,EAAE,IALU;IAM3BC,MAAM,EAAE,IANmB;IAO3BC,YAAY,EAAE,KAPa;IAQ3BzC,WAAW,EAAE;EARc,CAAb,CAAhB;EAWA,IAAA0C,mBAAA,GAAoDC,kBAAkB,EAAtE;IAAKC,iBAAD,GAAAF,mBAAA,CAACE,iBAAD;IAAoBC,wBAAA,GAAAH,mBAAA,CAAAG,wBAAA;EAExB,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAM;IAC7B,IAAIC,KAAK,GAAGjC,GAAG,CAACe,OAAhB;IACA,IAAImB,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,aAAD,EAA2BlD,WAA3B,EAAwD;MAC9E,IAAAmD,iBAAA,GAAgDvB,QAAQ,CAACE,OAAzD;QAAKV,YAAD,GAAA+B,iBAAA,CAAC/B,YAAD;QAAeD,aAAf,GAAAgC,iBAAA,CAAehC,aAAf;QAA8BI,UAAA,GAAA4B,iBAAA,CAAA5B,UAAA;MAClC,IAAIA,UAAU,IAAIyB,KAAK,CAACV,iBAAxB,EAA2C;QACzC;MACD;MAED,IAAIlB,YAAJ,EAAkB;QAChBA,YAAY,CAAC;UACXgC,IAAI,EAAE,YADK;UAEXpD,WAFW,EAEXA,WAFW;UAGXwC,MAAM,EAAEU,aAAa,CAACG,aAHX;UAIXC,QAAQ,EAAEJ,aAAa,CAACI,QAJb;UAKXC,OAAO,EAAEL,aAAa,CAACK,OALZ;UAMXC,OAAO,EAAEN,aAAa,CAACM;QANZ,CAAD,CAAZ;MAQD;MAED,IAAIrC,aAAJ,EAAmB;QACjBA,aAAa,CAAC,IAAD,CAAb;MACD;MAED6B,KAAK,CAACV,iBAAN,GAA0B,IAA1B;MACAH,UAAU,CAAC,IAAD,CAAV;IACD,CAvBD;IAyBA,IAAIsB,eAAe,GAAG,SAAlBA,eAAkBA,CAACP,aAAD,EAA2BlD,WAA3B,EAAqD0D,UAArD,EAA2E;MAAA,IAAtBA,UAAsB;QAAtBA,UAAsB,GAAT,IAAS;MAAA;MAC/F,IAAAC,kBAAA,GAAuD/B,QAAQ,CAACE,OAAhE;QAAKT,UAAD,GAAAsC,kBAAA,CAACtC,UAAD;QAAaF,aAAb,GAAAwC,kBAAA,CAAaxC,aAAb;QAA4BD,OAA5B,GAAAyC,kBAAA,CAA4BzC,OAA5B;QAAqCK,UAAA,GAAAoC,kBAAA,CAAApC,UAAA;MACzC,IAAI,CAACyB,KAAK,CAACV,iBAAX,EAA8B;QAC5B;MACD;MAEDU,KAAK,CAACX,qBAAN,GAA8B,IAA9B;MACAW,KAAK,CAACV,iBAAN,GAA0B,KAA1B;MAEA,IAAIjB,UAAJ,EAAgB;QACdA,UAAU,CAAC;UACT+B,IAAI,EAAE,UADG;UAETpD,WAFS,EAETA,WAFS;UAGTwC,MAAM,EAAEU,aAAa,CAACG,aAHb;UAITC,QAAQ,EAAEJ,aAAa,CAACI,QAJf;UAKTC,OAAO,EAAEL,aAAa,CAACK,OALd;UAMTC,OAAO,EAAEN,aAAa,CAACM;QANd,CAAD,CAAV;MAQD;MAED,IAAIrC,aAAJ,EAAmB;QACjBA,aAAa,CAAC,KAAD,CAAb;MACD;MAEDgB,UAAU,CAAC,KAAD,CAAV;MAEA,IAAIjB,OAAO,IAAIwC,UAAX,IAAyB,CAACnC,UAA9B,EAA0C;QACxCL,OAAO,CAAC;UACNkC,IAAI,EAAE,OADA;UAENpD,WAFM,EAENA,WAFM;UAGNwC,MAAM,EAAEU,aAAa,CAACG,aAHhB;UAINC,QAAQ,EAAEJ,aAAa,CAACI,QAJlB;UAKNC,OAAO,EAAEL,aAAa,CAACK,OALjB;UAMNC,OAAO,EAAEN,aAAa,CAACM;QANjB,CAAD,CAAP;MAQD;IACF,CApCD;IAsCA,IAAII,cAAc,GAAG,SAAjBA,cAAcA,CAAIV,aAAD,EAA2BlD,WAA3B,EAAwD;MAC3E,IAAA6D,kBAAA,GAA8BjC,QAAQ,CAACE,OAAvC;QAAKR,SAAD,GAAAuC,kBAAA,CAACvC,SAAD;QAAYC,UAAA,GAAAsC,kBAAA,CAAAtC,UAAA;MAChB,IAAIA,UAAJ,EAAgB;QACd;MACD;MAED,IAAID,SAAJ,EAAe;QACbA,SAAS,CAAC;UACR8B,IAAI,EAAE,SADE;UAERpD,WAFQ,EAERA,WAFQ;UAGRwC,MAAM,EAAEU,aAAa,CAACG,aAHd;UAIRC,QAAQ,EAAEJ,aAAa,CAACI,QAJhB;UAKRC,OAAO,EAAEL,aAAa,CAACK,OALf;UAMRC,OAAO,EAAEN,aAAa,CAACM;QANf,CAAD,CAAT;MAQD;IACF,CAhBD;IAkBA,IAAIM,MAAM,GAAI,SAAVA,MAAMA,CAAIC,CAAD,EAAkB;MAC7B,IAAIf,KAAK,CAACvB,SAAV,EAAqB;QACnB,IAAIuB,KAAK,CAACP,YAAV,EAAwB;UACtBgB,eAAe,CAACO,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+Bf,KAAK,CAAChD,WAArC,EAAkD,KAAlD,CAAf;QACD;QACDgD,KAAK,CAACvB,SAAN,GAAkB,KAAlB;QACAuB,KAAK,CAACP,YAAN,GAAqB,KAArB;QACAO,KAAK,CAACT,eAAN,GAAwB,IAAxB;QACAS,KAAK,CAAChD,WAAN,GAAoB,IAApB;QACA6C,wBAAwB;QACxBvD,0DAAA;MACD;IACF,CAZD;IAcA,IAAIwD,UAAuC,GAAG;MAC5CmB,SAAS,WAAAA,UAACF,CAAD,EAAI;QACX,IAAIG,0DAAoB,CAACH,CAAC,CAACI,WAAH,CAApB,IAAuCJ,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAA3C,EAA8F;UAC5FuB,CAAC,CAACM,cAAF;UACAN,CAAC,CAACO,eAAF;UAKA,IAAI,CAACtB,KAAK,CAACvB,SAAP,IAAoB,CAACsC,CAAC,CAACQ,MAA3B,EAAmC;YACjCvB,KAAK,CAACR,MAAN,GAAeuB,CAAC,CAACV,aAAjB;YACAL,KAAK,CAACvB,SAAN,GAAkB,IAAlB;YACAwB,iBAAiB,CAACc,CAAD,EAAI,UAAJ,CAAjB;YAIAnB,iBAAiB,CAAC1D,QAAD,EAAW,OAAX,EAAoBsF,OAApB,EAA6B,KAA7B,CAAjB;UACD;QACF;MACF,CAnB2C;MAoB5CA,OAAO,WAAAA,QAACT,CAAD,EAAI;QACT,IAAIG,0DAAoB,CAACH,CAAC,CAACI,WAAH,CAApB,IAAuC,CAACJ,CAAC,CAACQ,MAA1C,IAAoDR,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAxD,EAA2G;UACzGoB,cAAc,CAACI,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+B,UAA/B,CAAd;QACD;MACF,CAxB2C;MAyB5CU,OAAO,WAAAA,QAACV,CAAD,EAAI;QACT,IAAIA,CAAC,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAV,EAA6D;UAC3D;QACD;QAED,IAAIuB,CAAC,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAtB,EAAyB;UACvBX,CAAC,CAACO,eAAF;UACA,IAAI/C,UAAJ,EAAgB;YACdwC,CAAC,CAACM,cAAF;UACD;UAID,IAAI,CAACrB,KAAK,CAACX,qBAAP,IAAgC,CAACW,KAAK,CAACZ,yBAAvC,IAAoE1C,uDAAA,CAAeqE,CAAC,CAACI,WAAjB,CAAxE,EAAuG;YAErG,IAAI,CAAC5C,UAAD,IAAe,CAACG,mBAApB,EAAyC;cACvCiD,qBAAqB,CAACZ,CAAC,CAACV,aAAH,CAArB;YACD;YAEDJ,iBAAiB,CAACc,CAAD,EAAI,SAAJ,CAAjB;YACAH,cAAc,CAACG,CAAD,EAAI,SAAJ,CAAd;YACAN,eAAe,CAACM,CAAD,EAAI,SAAJ,CAAf;UACD;UAEDf,KAAK,CAACZ,yBAAN,GAAkC,KAAlC;UACAY,KAAK,CAACX,qBAAN,GAA8B,KAA9B;QACD;MACF;IApD2C,CAA9C;IAuDA,IAAImC,OAAO,GAAI,SAAXA,OAAOA,CAAIT,CAAD,EAAsB;MAClC,IAAIf,KAAK,CAACvB,SAAN,IAAmByC,0DAAoB,CAACH,CAAD,CAA3C,EAAgD;QAC9CA,CAAC,CAACM,cAAF;QACAN,CAAC,CAACO,eAAF;QAEAtB,KAAK,CAACvB,SAAN,GAAkB,KAAlB;QACAgC,eAAe,CAACO,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+B,UAA/B,EAA2CA,CAAC,CAACvB,MAAF,KAAaQ,KAAK,CAACR,MAA9D,CAAf;QACAK,wBAAwB;QAIxB,IAAIkB,CAAC,CAACvB,MAAF,KAAaQ,KAAK,CAACR,MAAnB,IAA6BoC,sDAAgB,CAAC5B,KAAK,CAACR,MAAP,CAA7C,IAA+DQ,KAAK,CAACR,MAAN,CAAaqC,YAAb,CAA0B,MAA1B,MAAsC,MAAzG,EAAiH;UAC/G7B,KAAK,CAACR,MAAN,CAAasC,KAAb;QACD;MACF;IACF,CAfD;IAiBA,IAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;MACvCjC,UAAU,CAACkC,aAAX,GAA4B,UAAAjB,CAAD,EAAO;QAEhC,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAb,IAAkB,CAACX,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAvB,EAA0E;UACxE;QACD;QAID,IAAIyC,0DAAoB,CAAClB,CAAC,CAACvB,MAAH,CAAxB,EAA+C;UAC7CuB,CAAC,CAACM,cAAF;QACD;QAIDrB,KAAK,CAAChD,WAAN,GAAoBkF,2DAAqB,CAACnB,CAAC,CAACI,WAAH,CAArB,GAAuC,SAAvC,GAAmDJ,CAAC,CAAC/D,WAAzE;QAEA+D,CAAC,CAACO,eAAF;QACA,IAAI,CAACtB,KAAK,CAACvB,SAAX,EAAsB;UACpBuB,KAAK,CAACvB,SAAN,GAAkB,IAAlB;UACAuB,KAAK,CAACP,YAAN,GAAqB,IAArB;UACAO,KAAK,CAACT,eAAN,GAAwBwB,CAAC,CAACoB,SAA1B;UACAnC,KAAK,CAACR,MAAN,GAAeuB,CAAC,CAACV,aAAjB;UAEA,IAAI,CAAC9B,UAAD,IAAe,CAACG,mBAApB,EAAyC;YACvCiD,qBAAqB,CAACZ,CAAC,CAACV,aAAH,CAArB;UACD;UAEDrE,0DAAA;UACAiE,iBAAiB,CAACc,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAjB;UAEA4C,iBAAiB,CAAC1D,QAAD,EAAW,aAAX,EAA0BkG,aAA1B,EAAyC,KAAzC,CAAjB;UACAxC,iBAAiB,CAAC1D,QAAD,EAAW,WAAX,EAAwBmG,WAAxB,EAAqC,KAArC,CAAjB;UACAzC,iBAAiB,CAAC1D,QAAD,EAAW,eAAX,EAA4BoG,eAA5B,EAA6C,KAA7C,CAAjB;QACD;MACF,CAlCD;MAoCAxC,UAAU,CAACyC,WAAX,GAA0B,UAAAxB,CAAD,EAAO;QAC9B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAED,IAAIuB,CAAC,CAACW,MAAF,KAAa,CAAjB,EAAoB;UAIlB,IAAIO,0DAAoB,CAAClB,CAAC,CAACvB,MAAH,CAAxB,EAA+C;YAC7CuB,CAAC,CAACM,cAAF;UACD;UAEDN,CAAC,CAACO,eAAF;QACD;MACF,CAfD;MAiBAxB,UAAU,CAACuC,WAAX,GAA0B,UAAAtB,CAAD,EAAO;QAC9B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAKD,IAAIuB,CAAC,CAACW,MAAF,KAAa,CAAb,IAAkBc,kDAAY,CAACzB,CAAD,EAAIA,CAAC,CAACV,aAAN,CAAlC,EAAwD;UACtDO,cAAc,CAACG,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAd;QACD;MACF,CAXD;MAgBA,IAAIoF,aAAa,GAAI,SAAjBA,aAAaA,CAAIrB,CAAD,EAAqB;QACvC,IAAIA,CAAC,CAACoB,SAAF,KAAgBnC,KAAK,CAACT,eAA1B,EAA2C;UACzC;QACD;QAED,IAAIiD,kDAAY,CAACzB,CAAD,EAAIf,KAAK,CAACR,MAAV,CAAhB,EAAmC;UACjC,IAAI,CAACQ,KAAK,CAACP,YAAX,EAAyB;YACvBO,KAAK,CAACP,YAAN,GAAqB,IAArB;YACAQ,iBAAiB,CAACe,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+Bf,KAAK,CAAChD,WAArC,CAAjB;UACD;QACF,CALD,MAKO,IAAIgD,KAAK,CAACP,YAAV,EAAwB;UAC7BO,KAAK,CAACP,YAAN,GAAqB,KAArB;UACAgB,eAAe,CAACO,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+Bf,KAAK,CAAChD,WAArC,EAAkD,KAAlD,CAAf;QACD;MACF,CAdD;MAgBA,IAAIqF,WAAW,GAAI,SAAfA,WAAWA,CAAItB,CAAD,EAAqB;QACrC,IAAIA,CAAC,CAACoB,SAAF,KAAgBnC,KAAK,CAACT,eAAtB,IAAyCS,KAAK,CAACvB,SAA/C,IAA4DsC,CAAC,CAACW,MAAF,KAAa,CAA7E,EAAgF;UAC9E,IAAIc,kDAAY,CAACzB,CAAD,EAAIf,KAAK,CAACR,MAAV,CAAhB,EAAmC;YACjCiB,eAAe,CAACO,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+Bf,KAAK,CAAChD,WAArC,CAAf;UACD,CAFD,MAEO,IAAIgD,KAAK,CAACP,YAAV,EAAwB;YAC7BgB,eAAe,CAACO,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+Bf,KAAK,CAAChD,WAArC,EAAkD,KAAlD,CAAf;UACD;UAEDgD,KAAK,CAACvB,SAAN,GAAkB,KAAlB;UACAuB,KAAK,CAACP,YAAN,GAAqB,KAArB;UACAO,KAAK,CAACT,eAAN,GAAwB,IAAxB;UACAS,KAAK,CAAChD,WAAN,GAAoB,IAApB;UACA6C,wBAAwB;UACxBvD,0DAAA;QACD;MACF,CAfD;MAiBA,IAAIgG,eAAe,GAAI,SAAnBA,eAAeA,CAAIvB,CAAD,EAAqB;QACzCD,MAAM,CAACC,CAAD,CAAN;MACD,CAFD;MAIAjB,UAAU,CAAC2C,WAAX,GAA0B,UAAA1B,CAAD,EAAO;QAC9B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAGDsB,MAAM,CAACC,CAAD,CAAN;MACD,CAPD;IAQD,CAnHD,MAmHO;MACLjB,UAAU,CAACyC,WAAX,GAA0B,UAAAxB,CAAD,EAAO;QAE9B,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAb,IAAkB,CAACX,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAvB,EAA0E;UACxE;QACD;QAID,IAAIyC,0DAAoB,CAAClB,CAAC,CAACvB,MAAH,CAAxB,EAA+C;UAC7CuB,CAAC,CAACM,cAAF;QACD;QAEDN,CAAC,CAACO,eAAF;QACA,IAAItB,KAAK,CAACZ,yBAAV,EAAqC;UACnC;QACD;QAEDY,KAAK,CAACvB,SAAN,GAAkB,IAAlB;QACAuB,KAAK,CAACP,YAAN,GAAqB,IAArB;QACAO,KAAK,CAACR,MAAN,GAAeuB,CAAC,CAACV,aAAjB;QACAL,KAAK,CAAChD,WAAN,GAAoBN,uDAAA,CAAeqE,CAAC,CAACI,WAAjB,IAAgC,SAAhC,GAA4C,OAAhE;QAEA,IAAI,CAAC5C,UAAD,IAAe,CAACG,mBAApB,EAAyC;UACvCiD,qBAAqB,CAACZ,CAAC,CAACV,aAAH,CAArB;QACD;QAEDJ,iBAAiB,CAACc,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAjB;QAEA4C,iBAAiB,CAAC1D,QAAD,EAAW,SAAX,EAAsBwG,SAAtB,EAAiC,KAAjC,CAAjB;MACD,CA7BD;MA+BA5C,UAAU,CAAC6C,YAAX,GAA2B,UAAA5B,CAAD,EAAO;QAC/B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAEDuB,CAAC,CAACO,eAAF;QACA,IAAItB,KAAK,CAACvB,SAAN,IAAmB,CAACuB,KAAK,CAACZ,yBAA9B,EAAyD;UACvDY,KAAK,CAACP,YAAN,GAAqB,IAArB;UACAQ,iBAAiB,CAACc,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAjB;QACD;MACF,CAVD;MAYA8C,UAAU,CAAC8C,YAAX,GAA2B,UAAA7B,CAAD,EAAO;QAC/B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAEDuB,CAAC,CAACO,eAAF;QACA,IAAItB,KAAK,CAACvB,SAAN,IAAmB,CAACuB,KAAK,CAACZ,yBAA9B,EAAyD;UACvDY,KAAK,CAACP,YAAN,GAAqB,KAArB;UACAgB,eAAe,CAACM,CAAD,EAAIf,KAAK,CAAChD,WAAV,EAAuB,KAAvB,CAAf;QACD;MACF,CAVD;MAYA8C,UAAU,CAAC4C,SAAX,GAAwB,UAAA3B,CAAD,EAAO;QAC5B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAED,IAAI,CAACQ,KAAK,CAACZ,yBAAP,IAAoC2B,CAAC,CAACW,MAAF,KAAa,CAArD,EAAwD;UACtDd,cAAc,CAACG,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAd;QACD;MACF,CARD;MAUA,IAAI0F,SAAS,GAAI,SAAbA,SAASA,CAAI3B,CAAD,EAAmB;QAEjC,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAjB,EAAoB;UAClB;QACD;QAED1B,KAAK,CAACvB,SAAN,GAAkB,KAAlB;QACAoB,wBAAwB;QAExB,IAAIG,KAAK,CAACZ,yBAAV,EAAqC;UACnCY,KAAK,CAACZ,yBAAN,GAAkC,KAAlC;UACA;QACD;QAED,IAAIoD,kDAAY,CAACzB,CAAD,EAAIf,KAAK,CAACR,MAAV,CAAhB,EAAmC;UACjCiB,eAAe,CAACO,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+Bf,KAAK,CAAChD,WAArC,CAAf;QACD,CAFD,MAEO,IAAIgD,KAAK,CAACP,YAAV,EAAwB;UAC7BgB,eAAe,CAACO,iDAAW,CAAChB,KAAK,CAACR,MAAP,EAAeuB,CAAf,CAAZ,EAA+Bf,KAAK,CAAChD,WAArC,EAAkD,KAAlD,CAAf;QACD;QAEDgD,KAAK,CAACP,YAAN,GAAqB,KAArB;MACD,CArBD;MAuBAK,UAAU,CAAC+C,YAAX,GAA2B,UAAA9B,CAAD,EAAO;QAC/B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAEDuB,CAAC,CAACO,eAAF;QACA,IAAIwB,KAAK,GAAGC,uDAAiB,CAAChC,CAAC,CAACI,WAAH,CAA7B;QACA,IAAI,CAAC2B,KAAL,EAAY;UACV;QACD;QACD9C,KAAK,CAACT,eAAN,GAAwBuD,KAAK,CAACE,UAA9B;QACAhD,KAAK,CAACZ,yBAAN,GAAkC,IAAlC;QACAY,KAAK,CAACP,YAAN,GAAqB,IAArB;QACAO,KAAK,CAACvB,SAAN,GAAkB,IAAlB;QACAuB,KAAK,CAACR,MAAN,GAAeuB,CAAC,CAACV,aAAjB;QACAL,KAAK,CAAChD,WAAN,GAAoB,OAApB;QAIA,IAAI,CAACuB,UAAD,IAAe,CAACG,mBAApB,EAAyC;UACvCiD,qBAAqB,CAACZ,CAAC,CAACV,aAAH,CAArB;QACD;QAEDrE,0DAAA;QACAiE,iBAAiB,CAACc,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAjB;QAEA4C,iBAAiB,CAACqD,MAAD,EAAS,QAAT,EAAmBC,QAAnB,EAA6B,IAA7B,CAAjB;MACD,CA3BD;MA6BApD,UAAU,CAACqD,WAAX,GAA0B,UAAApC,CAAD,EAAO;QAC9B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAEDuB,CAAC,CAACO,eAAF;QACA,IAAI,CAACtB,KAAK,CAACvB,SAAX,EAAsB;UACpB;QACD;QAED,IAAIqE,KAAK,GAAGM,kDAAY,CAACrC,CAAC,CAACI,WAAH,EAAgBnB,KAAK,CAACT,eAAtB,CAAxB;QACA,IAAIuD,KAAK,IAAIN,kDAAY,CAACM,KAAD,EAAQ/B,CAAC,CAACV,aAAV,CAAzB,EAAmD;UACjD,IAAI,CAACL,KAAK,CAACP,YAAX,EAAyB;YACvBO,KAAK,CAACP,YAAN,GAAqB,IAArB;YACAQ,iBAAiB,CAACc,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAjB;UACD;QACF,CALD,MAKO,IAAIgD,KAAK,CAACP,YAAV,EAAwB;UAC7BO,KAAK,CAACP,YAAN,GAAqB,KAArB;UACAgB,eAAe,CAACM,CAAD,EAAIf,KAAK,CAAChD,WAAV,EAAuB,KAAvB,CAAf;QACD;MACF,CApBD;MAsBA8C,UAAU,CAACuD,UAAX,GAAyB,UAAAtC,CAAD,EAAO;QAC7B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAEDuB,CAAC,CAACO,eAAF;QACA,IAAI,CAACtB,KAAK,CAACvB,SAAX,EAAsB;UACpB;QACD;QAED,IAAIqE,KAAK,GAAGM,kDAAY,CAACrC,CAAC,CAACI,WAAH,EAAgBnB,KAAK,CAACT,eAAtB,CAAxB;QACA,IAAIuD,KAAK,IAAIN,kDAAY,CAACM,KAAD,EAAQ/B,CAAC,CAACV,aAAV,CAAzB,EAAmD;UACjDO,cAAc,CAACG,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAd;UACAyD,eAAe,CAACM,CAAD,EAAIf,KAAK,CAAChD,WAAV,CAAf;QACD,CAHD,MAGO,IAAIgD,KAAK,CAACP,YAAV,EAAwB;UAC7BgB,eAAe,CAACM,CAAD,EAAIf,KAAK,CAAChD,WAAV,EAAuB,KAAvB,CAAf;QACD;QAEDgD,KAAK,CAACvB,SAAN,GAAkB,KAAlB;QACAuB,KAAK,CAACT,eAAN,GAAwB,IAAxB;QACAS,KAAK,CAACP,YAAN,GAAqB,KAArB;QACAO,KAAK,CAACZ,yBAAN,GAAkC,IAAlC;QACA9C,0DAAA;QACAuD,wBAAwB;MACzB,CAxBD;MA0BAC,UAAU,CAACwD,aAAX,GAA4B,UAAAvC,CAAD,EAAO;QAChC,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAEDuB,CAAC,CAACO,eAAF;QACA,IAAItB,KAAK,CAACvB,SAAV,EAAqB;UACnBqC,MAAM,CAACC,CAAD,CAAN;QACD;MACF,CATD;MAWA,IAAImC,QAAQ,GAAI,SAAZA,QAAQA,CAAInC,CAAD,EAAc;QAC3B,IAAIf,KAAK,CAACvB,SAAN,IAAoBsC,CAAC,CAACvB,MAAH,CAA0B4B,QAA1B,CAAmCpB,KAAK,CAACR,MAAzC,CAAvB,EAAyE;UACvEsB,MAAM,CAAC;YACLT,aAAa,EAAEL,KAAK,CAACR,MADhB;YAELc,QAAQ,EAAE,KAFL;YAGLE,OAAO,EAAE,KAHJ;YAILD,OAAO,EAAE;UAJJ,CAAD,CAAN;QAMD;MACF,CATD;MAWAT,UAAU,CAAC2C,WAAX,GAA0B,UAAA1B,CAAD,EAAO;QAC9B,IAAI,CAACA,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAL,EAAwD;UACtD;QACD;QAEDsB,MAAM,CAACC,CAAD,CAAN;MACD,CAND;IAOD;IAED,OAAOjB,UAAP;EACD,CAleuB,EAkerB,CAACF,iBAAD,EAAoBrB,UAApB,EAAgCG,mBAAhC,EAAqDmB,wBAArD,CAleqB,CAAxB;EAseA0D,SAAS,CAAC,YAAM;IACd,OAAO;MAAA,OAAMjH,0DAAA,EAAb;IAAA;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAO;IACLmC,SAAS,EAAED,aAAa,IAAIC,SADvB;IAELqB,UAAU,EAAEjC,UAAU,CAACc,QAAD,EAAWmB,UAAX;EAFjB,CAAP;AAID;AAED,SAAS8B,sDAAT4B,CAA0BhE,MAA1B,EAAwD;EACtD,OAAOA,MAAM,CAACiE,OAAP,KAAmB,GAAnB,IAA0BjE,MAAM,CAACkE,YAAP,CAAoB,MAApB,CAAjC;AACD;AAED,SAASxC,0DAATyC,CAA8B/G,KAA9B,EAA6D;EAC3D,IAAOgH,GAAD,GAAgBhH,KAAtB,CAAOgH,GAAD;IAAMpE,MAAA,GAAU5C,KAAtB,CAAY4C,MAAA;EACZ,IAAMqE,OAAO,GAAGrE,MAAhB;EACA,IAAOiE,OAAD,GAA+BI,OAArC,CAAOJ,OAAD;IAAUK,iBAAA,GAAqBD,OAArC,CAAgBC,iBAAA;EAChB,IAAMC,IAAI,GAAGF,OAAO,CAAChC,YAAR,CAAqB,MAArB,CAAb;EAGA,OACE,CAAC+B,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,GAA3B,IAAkCA,GAAG,KAAK,UAA3C,KACCH,OAAO,KAAK,OAAZ,IACCA,OAAO,KAAK,UADb,IAECK,iBAAiB,KAAK,IAHxB,KAMC,CAAClC,sDAAgB,CAACiC,OAAD,CAAjB,IAA+BE,IAAI,KAAK,QAAT,IAAqBH,GAAG,KAAK,OAN7D,KAQA,EAAEG,IAAI,KAAK,MAAT,IAAmBH,GAAG,KAAK,OAA7B,CATF;AAWD;AAED,SAASb,uDAATiB,CAA2BpH,KAA3B,EAA4D;EAC1D,IAAOqH,aAAA,GAAiBrH,KAAxB,CAAOqH,aAAA;EACP,IAAIA,aAAa,CAACC,MAAd,GAAuB,CAA3B,EAA8B;IAC5B,OAAOD,aAAa,CAAC,CAAD,CAApB;EACD;EACD,OAAO,IAAP;AACD;AAED,SAASb,kDAATe,CACEvH,KADF,EAEEuF,SAFF,EAGgB;EACd,IAAMiC,cAAc,GAAGxH,KAAK,CAACwH,cAA7B;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACF,MAAnC,EAA2CG,CAAC,EAA5C,EAAgD;IAC9C,IAAMvB,KAAK,GAAGsB,cAAc,CAACC,CAAD,CAA5B;IACA,IAAIvB,KAAK,CAACE,UAAN,KAAqBb,SAAzB,EAAoC;MAClC,OAAOW,KAAP;IACD;EACF;EACD,OAAO,IAAP;AACD;AAED,SAAS9B,iDAATsD,CAAqB9E,MAArB,EAA0CuB,CAA1C,EAAmE;EACjE,OAAO;IACLV,aAAa,EAAEb,MADV;IAELc,QAAQ,EAAES,CAAC,CAACT,QAFP;IAGLE,OAAO,EAAEO,CAAC,CAACP,OAHN;IAILD,OAAO,EAAEQ,CAAC,CAACR;EAJN,CAAP;AAMD;AAkBD,SAASgE,wDAATC,CAA4BC,KAA5B,EAAqD;EACnD,IAAIC,OAAO,GAAID,KAAK,CAACE,KAAN,GAAc,CAAf,IAAqBF,KAAK,CAACG,OAA3B,IAAsC,CAApD;EACA,IAAIC,OAAO,GAAIJ,KAAK,CAACK,MAAN,GAAe,CAAhB,IAAsBL,KAAK,CAACM,OAA5B,IAAuC,CAArD;EAEA,OAAO;IACLC,GAAG,EAAEP,KAAK,CAACQ,OAAN,GAAgBJ,OADhB;IAELK,KAAK,EAAET,KAAK,CAACU,OAAN,GAAgBT,OAFlB;IAGLU,MAAM,EAAEX,KAAK,CAACQ,OAAN,GAAgBJ,OAHnB;IAILQ,IAAI,EAAEZ,KAAK,CAACU,OAAN,GAAgBT;EAJjB,CAAP;AAMD;AAED,SAASY,8DAATC,CAAkCC,CAAlC,EAA2CC,CAA3C,EAAoD;EAElD,IAAID,CAAC,CAACH,IAAF,GAASI,CAAC,CAACP,KAAX,IAAoBO,CAAC,CAACJ,IAAF,GAASG,CAAC,CAACN,KAAnC,EAA0C;IACxC,OAAO,KAAP;EACD;EAED,IAAIM,CAAC,CAACR,GAAF,GAAQS,CAAC,CAACL,MAAV,IAAoBK,CAAC,CAACT,GAAF,GAAQQ,CAAC,CAACJ,MAAlC,EAA0C;IACxC,OAAO,KAAP;EACD;EACD,OAAO,IAAP;AACD;AAED,SAAS5C,kDAAT/C,CAAsBgF,KAAtB,EAAyCjF,MAAzC,EAA8D;EAC5D,IAAIkG,IAAI,GAAGlG,MAAM,CAACmG,qBAAP,EAAX;EACA,IAAIC,SAAS,GAAGrB,wDAAkB,CAACE,KAAD,CAAlC;EACA,OAAOa,8DAAwB,CAACI,IAAD,EAAOE,SAAP,CAA/B;AACD;AAED,SAAS3D,0DAAT4D,CAA8BrG,MAA9B,EAA+C;EAE7C,OAAO,CAACA,MAAM,CAACsG,OAAP,CAAe,oBAAf,CAAR;AACD;AAED,SAAS5D,2DAAT6D,CAA+BnJ,KAA/B,EAAoD;EAElD,OAAOA,KAAK,CAAC+H,KAAN,KAAgB,CAAhB,IAAqB/H,KAAK,CAACkI,MAAN,KAAiB,CAA7C;AACD;OC1rBM,IAAMkB,SAAS,GAAG9I,MAAK,CAAC+I,UAAN,CAAiB,UAAAC,IAAA,EAAuCnI,GAAvC,EAAuE;EAAA,IAAAoI,KAAA;EAAtE,IAACC,QAAA,GAAqEF,IAAA,CAArEE,QAAA;IAAa7I,KAAwD,GAAAK,mDAAA,CAAAsI,IAAA;EAC/G,IAAIG,MAAM,GAAGxH,MAAM,EAAnB;EACAd,GAAG,IAAAoI,KAAA,GAAGpI,GAAH,YAAAoI,KAAA,GAAUE,MAAb;EACA,IAAAC,SAAA,GAAmBtI,QAAA,CAAAuI,8BAAA,KAAahJ,KAAb;MAAoBQ,GAAA,EAAAA;IAApB,GAAnB;IAAK+B,UAAA,GAAAwG,SAAA,CAAAxG,UAAA;EACL,IAAI0G,KAAK,GAAGtJ,MAAK,CAACuJ,QAAN,CAAeC,IAAf,CAAoBN,QAApB,CAAZ;EACA,OAAOlJ,MAAK,CAACyJ,YAAN,CACLH,KADK,EAAAD,8BAAA;IAGJxI,GAAA,EAAAA;EAHI,GAGIF,UAAU,CAAC2I,KAAK,CAACjJ,KAAP,EAAcuC,UAAd,CAHd,EAAP;AAKD,CAVwB,CAAlB;OCCA,IAAM8G,cAAc,GAAG1J,MAAK,CAAC+I,UAAN,CAAiB,UAAAC,IAAA,EAA4CnI,GAA5C,EAA4E;EAA3E,IAACqI,QAAA,GAA0EF,IAAA,CAA1EE,QAAA;IAAa7I,KAA6D,GAAAK,mDAAA,CAAAsI,IAAA;EACzH,IAAIW,YAAY,GAAGhI,MAAM,CAAC,KAAD,CAAzB;EACA,IAAIiI,WAAW,GAAGrJ,UAAU,CAAAR,4DAAA,CAA5B;EACA,IAAIO,OAAO,GAAGK,UAAU,CAACiJ,WAAW,IAAI,EAAhB,EAAAP,8BAAA,KACnBhJ,KADmB;IAEtBQ,GAAG,EAAEA,GAAG,KAAI+I,WAAJ,oBAAIA,WAAW,CAAE/I,GAAjB,CAFc;IAGtBL,QAAQ,WAAAA,SAAA,EAAG;MACTmJ,YAAY,CAAC/H,OAAb,GAAuB,IAAvB;MACA,IAAIgI,WAAJ,EAAiB;QACfA,WAAW,CAACpJ,QAAZ;MACD;IACF;EARqB,GAAxB;EAWAI,UAAU,CAACgJ,WAAD,EAAc/I,GAAd,CAAV;EAEAwF,SAAS,CAAC,YAAM;IACd,IAAI,CAACsD,YAAY,CAAC/H,OAAlB,EAA2B;MACzBiI,OAAO,CAACC,IAAR,CACE,8DACA,kFAFF;IAID;EACF,CAPQ,EAON,EAPM,CAAT;EASA,OACE9J,MAAA,CAAA+J,aAAA,CAAAhK,4DAAA,CAAuBiK,QAAvB;IAAgCC,KAAK,EAAE3J;EAAvC,GACG4I,QADH,CADF;AAKD,CA9B6B,CAAvB;OCaA,SAASgB,QAATA,CAAkB7J,KAAlB,EAAkD;EACvD,IAAIA,KAAK,CAACgB,UAAV,EAAsB;IACpB,OAAO;MAAC8I,UAAU,EAAE;IAAb,CAAP;EACD;EAED,IAAIC,OAAJ,EAAaC,MAAb;EACA,IAAIhK,KAAK,CAAC+J,OAAN,IAAiB/J,KAAK,CAACiK,aAA3B,EAA0C;IACxCF,OAAO,GAAI,SAAAA,QAAAvG,CAAD,EAAmB;MAC3B,IAAIA,CAAC,CAACvB,MAAF,KAAauB,CAAC,CAACV,aAAnB,EAAkC;QAChC,IAAI9C,KAAK,CAAC+J,OAAV,EAAmB;UACjB/J,KAAK,CAAC+J,OAAN,CAAcvG,CAAd;QACD;QAED,IAAIxD,KAAK,CAACiK,aAAV,EAAyB;UACvBjK,KAAK,CAACiK,aAAN,CAAoB,IAApB;QACD;MACF;IACF,CAVD;EAWD;EAED,IAAIjK,KAAK,CAACgK,MAAN,IAAgBhK,KAAK,CAACiK,aAA1B,EAAyC;IACvCD,MAAM,GAAI,SAAAA,OAAAxG,CAAD,EAAmB;MAC1B,IAAIA,CAAC,CAACvB,MAAF,KAAauB,CAAC,CAACV,aAAnB,EAAkC;QAChC,IAAI9C,KAAK,CAACgK,MAAV,EAAkB;UAChBhK,KAAK,CAACgK,MAAN,CAAaxG,CAAb;QACD;QAED,IAAIxD,KAAK,CAACiK,aAAV,EAAyB;UACvBjK,KAAK,CAACiK,aAAN,CAAoB,KAApB;QACD;MACF;IACF,CAVD;EAWD;EAED,OAAO;IACLH,UAAU,EAAE;MACVC,OADU,EACVA,OADU;MAEVC,MAAA,EAAAA;IAFU;EADP,CAAP;AAMD;ACrCD,IAAIE,qDAAe,GAAG,IAAtB;AACA,IAAIC,oDAAc,GAAG,IAAIC,GAAJ,EAArB;AACA,IAAIC,6DAAuB,GAAG,KAA9B;AACA,IAAIC,yDAAmB,GAAG,KAA1B;AACA,IAAIC,8DAAwB,GAAG,KAA/B;AAGA,IAAMC,8DAAwB,GAAG;EAC/BC,GAAG,EAAE,IAD0B;EAE/BC,MAAM,EAAE;AAFuB,CAAjC;AAKA,SAASC,2DAATC,CAA+BC,QAA/B,EAAmDrH,CAAnD,EAAoE;EAClE,SAAAsH,SAAA,GAAAC,+BAAA,CAAoBZ,oDAApB,GAAAa,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAoC;IAAA,IAA3BC,OAAT,GAAAF,KAAA,CAAApB,KAAA;IACEsB,OAAO,CAACL,QAAD,EAAWrH,CAAX,CAAP;EACD;AACF;AAKD,SAAS2H,gDAATC,CAAoB5H,CAApB,EAAsC;EAEpC,OAAO,EAAEA,CAAC,CAACR,OAAF,IAAc,CAACqI,KAAK,EAAN,IAAY7H,CAAC,CAAC8H,MAA5B,IAAuC9H,CAAC,CAACP,OAAzC,IAAoDO,CAAC,CAACX,IAAF,KAAW,OAAX,KAAuBW,CAAC,CAAC6C,GAAF,KAAU,SAAV,IAAuB7C,CAAC,CAAC6C,GAAF,KAAU,OAAxD,CAAtD,CAAP;AACD;AAGD,SAASkF,yDAATC,CAA6BhI,CAA7B,EAA+C;EAC7C8G,yDAAmB,GAAG,IAAtB;EACA,IAAIa,gDAAU,CAAC3H,CAAD,CAAd,EAAmB;IACjB0G,qDAAe,GAAG,UAAlB;IACAS,2DAAqB,CAAC,UAAD,EAAanH,CAAb,CAArB;EACD;AACF;AAED,SAASiI,wDAATC,CAA4BlI,CAA5B,EAA0D;EACxD0G,qDAAe,GAAG,SAAlB;EACA,IAAI1G,CAAC,CAACX,IAAF,KAAW,WAAX,IAA0BW,CAAC,CAACX,IAAF,KAAW,aAAzC,EAAwD;IACtDyH,yDAAmB,GAAG,IAAtB;IACAK,2DAAqB,CAAC,SAAD,EAAYnH,CAAZ,CAArB;EACD;AACF;AAED,SAASmI,sDAATC,CAA0BpI,CAA1B,EAAyC;EACvC,IAAIrE,uDAAA,CAAeqE,CAAf,CAAJ,EAAuB;IACrB8G,yDAAmB,GAAG,IAAtB;IACAJ,qDAAe,GAAG,SAAlB;EACD;AACF;AAED,SAAS2B,sDAATC,CAA0BtI,CAA1B,EAAyC;EAIvC,IAAIA,CAAC,CAACvB,MAAF,KAAayD,MAAb,IAAuBlC,CAAC,CAACvB,MAAF,KAAatD,QAAxC,EAAkD;IAChD;EACD;EAID,IAAI,CAAC2L,yDAAD,IAAwB,CAACC,8DAA7B,EAAuD;IACrDL,qDAAe,GAAG,SAAlB;IACAS,2DAAqB,CAAC,SAAD,EAAYnH,CAAZ,CAArB;EACD;EAED8G,yDAAmB,GAAG,KAAtB;EACAC,8DAAwB,GAAG,KAA3B;AACD;AAED,SAASwB,sDAATC,CAAA,EAA4B;EAG1B1B,yDAAmB,GAAG,KAAtB;EACAC,8DAAwB,GAAG,IAA3B;AACD;AAKD,SAAS0B,4DAATC,CAAA,EAAkC;EAChC,IAAI,OAAOxG,MAAP,KAAkB,WAAlB,IAAiC2E,6DAArC,EAA8D;IAC5D;EACD;EAMD,IAAI8B,KAAK,GAAGC,WAAW,CAACC,SAAZ,CAAsBF,KAAlC;EACAC,WAAW,CAACC,SAAZ,CAAsBF,KAAtB,GAA8B,YAAY;IACxC7B,yDAAmB,GAAG,IAAtB;IACA6B,KAAK,CAACG,KAAN,CAAY,IAAZ,EAAkBC,SAAlB;EACD,CAHD;EAKA5N,QAAQ,CAAC6N,gBAAT,CAA0B,SAA1B,EAAqCjB,yDAArC,EAA0D,IAA1D;EACA5M,QAAQ,CAAC6N,gBAAT,CAA0B,OAA1B,EAAmCjB,yDAAnC,EAAwD,IAAxD;EACA5M,QAAQ,CAAC6N,gBAAT,CAA0B,OAA1B,EAAmCb,sDAAnC,EAAqD,IAArD;EAIAjG,MAAM,CAAC8G,gBAAP,CAAwB,OAAxB,EAAiCX,sDAAjC,EAAmD,IAAnD;EACAnG,MAAM,CAAC8G,gBAAP,CAAwB,MAAxB,EAAgCT,sDAAhC,EAAkD,KAAlD;EAEA,IAAI,OAAOvH,YAAP,KAAwB,WAA5B,EAAyC;IACvC7F,QAAQ,CAAC6N,gBAAT,CAA0B,aAA1B,EAAyCf,wDAAzC,EAA6D,IAA7D;IACA9M,QAAQ,CAAC6N,gBAAT,CAA0B,aAA1B,EAAyCf,wDAAzC,EAA6D,IAA7D;IACA9M,QAAQ,CAAC6N,gBAAT,CAA0B,WAA1B,EAAuCf,wDAAvC,EAA2D,IAA3D;EACD,CAJD,MAIO;IACL9M,QAAQ,CAAC6N,gBAAT,CAA0B,WAA1B,EAAuCf,wDAAvC,EAA2D,IAA3D;IACA9M,QAAQ,CAAC6N,gBAAT,CAA0B,WAA1B,EAAuCf,wDAAvC,EAA2D,IAA3D;IACA9M,QAAQ,CAAC6N,gBAAT,CAA0B,SAA1B,EAAqCf,wDAArC,EAAyD,IAAzD;EACD;EAEDpB,6DAAuB,GAAG,IAA1B;AACD;AAED,IAAI,OAAO1L,QAAP,KAAoB,WAAxB,EAAqC;EACnC,IAAIA,QAAQ,CAAC8N,UAAT,KAAwB,SAA5B,EAAuC;IACrCR,4DAAsB;EACvB,CAFD,MAEO;IACLtN,QAAQ,CAAC6N,gBAAT,CAA0B,kBAA1B,EAA8CP,4DAA9C;EACD;AACF;OAKM,SAASS,cAATA,CAAA,EAAmC;EACxC,OAAOxC,qDAAe,KAAK,SAA3B;AACD;OAEM,SAASyC,sBAATA,CAAA,EAA4C;EACjD,OAAOzC,qDAAP;AACD;OAEM,SAAS0C,sBAATA,CAAgC/B,QAAhC,EAAoD;EACzDX,qDAAe,GAAGW,QAAlB;EACAF,2DAAqB,CAACE,QAAD,EAAW,IAAX,CAArB;AACD;OAKM,SAASgC,sBAATA,CAAA,EAA4C;EACjDZ,4DAAsB;EAEtB,IAAAa,UAAA,GAA8BrL,QAAQ,CAACyI,qDAAD,CAAtC;IAAA6C,UAAA,GAAApL,cAAA,CAAAmL,UAAA;IAAKjC,QAAD,GAAAkC,UAAA;IAAWC,WAAX,GAAAD,UAAA;EACJ/G,SAAS,CAAC,YAAM;IACd,IAAIkF,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;MAClB8B,WAAW,CAAC9C,qDAAD,CAAX;IACD,CAFD;IAIAC,oDAAc,CAAC8C,GAAf,CAAmB/B,OAAnB;IACA,OAAO,YAAM;MACXf,oDAAc,CAAC+C,MAAf,CAAsBhC,OAAtB;IACD,CAFD;EAGD,CATQ,EASN,EATM,CAAT;EAWA,OAAOL,QAAP;AACD;AAMD,SAASsC,0DAATC,CAA8BC,WAA9B,EAAoDxC,QAApD,EAAwErH,CAAxE,EAAyF;EACvF,OAAO,EAAE6J,WAAW,IAAIxC,QAAQ,KAAK,UAA5B,IAA0CrH,CAAC,YAAY8J,aAAvD,IAAwE,CAAC9C,8DAAwB,CAAChH,CAAC,CAAC6C,GAAH,CAAnG,CAAP;AACD;OAKM,SAASkH,eAATA,CAAyBvN,KAAzB,EAA4E;EAAA,IAAnDA,KAAmD;IAAnDA,KAAmD,GAAxB,EAAwB;EAAA;EACjF,IAAAwN,MAAA,GAA+BxN,KAA/B;IAAKqN,WAAD,GAAAG,MAAA,CAACH,WAAD;IAAcI,SAAA,GAAAD,MAAA,CAAAC,SAAA;EAClB,IAAAC,UAAA,GAA6CjM,QAAQ,CAACgM,SAAS,IAAIf,cAAc,EAA5B,CAArD;IAAAiB,UAAA,GAAAhM,cAAA,CAAA+L,UAAA;IAAKE,mBAAD,GAAAD,UAAA;IAAsBE,eAAtB,GAAAF,UAAA;EACJG,uBAAuB,CAAE,UAAApB,cAAD,EAAoB;IAC1CmB,eAAe,CAACnB,cAAD,CAAf;EACD,CAFsB,EAEpB,CAACW,WAAD,CAFoB,EAEL;IAACA,WAAA,EAAAA;EAAD,CAFK,CAAvB;EAIA,OAAO;IAACX,cAAc,EAAEkB;EAAjB,CAAP;AACD;OAKM,SAASE,uBAATA,CAAiCC,EAAjC,EAA0DC,IAA1D,EAAoFC,IAApF,EAA0H;EAC/HhC,4DAAsB;EAEtBjG,SAAS,CAAC,YAAM;IACd,IAAIkF,OAAO,GAAG,SAAVA,OAAOA,CAAIL,QAAD,EAAqBrH,CAArB,EAAyC;MACrD,IAAI,CAAC2J,0DAAoB,CAACc,IAAD,oBAACA,IAAI,CAAEZ,WAAP,EAAoBxC,QAApB,EAA8BrH,CAA9B,CAAzB,EAA2D;QACzD;MACD;MACDuK,EAAE,CAACrB,cAAc,EAAf,CAAF;IACD,CALD;IAMAvC,oDAAc,CAAC8C,GAAf,CAAmB/B,OAAnB;IACA,OAAO;MAAA,OAAMf,oDAAc,CAAC+C,MAAf,CAAsBhC,OAAtB,CAAb;IAAA;EACD,CATQ,EASN8C,IATM,CAAT;AAUD;OCrMM,SAASE,cAATA,CAAwBlO,KAAxB,EAAoE;EACzE,IAAIyC,KAAK,GAAGnB,MAAM,CAAC;IACjB6M,aAAa,EAAE;EADE,CAAD,CAAN,CAET5M,OAFH;EAIA,IAAIvB,KAAK,CAACgB,UAAV,EAAsB;IACpB,OAAO;MAACoN,gBAAgB,EAAE;IAAnB,CAAP;EACD;EAED,IAAIrE,OAAO,GAAI,SAAXA,OAAOA,CAAIvG,CAAD,EAAmB;IAC/B,IAAI,CAACf,KAAK,CAAC0L,aAAX,EAA0B;MACxB,IAAInO,KAAK,CAACqO,aAAV,EAAyB;QACvBrO,KAAK,CAACqO,aAAN,CAAoB7K,CAApB;MACD;MAED,IAAIxD,KAAK,CAACsO,mBAAV,EAA+B;QAC7BtO,KAAK,CAACsO,mBAAN,CAA0B,IAA1B;MACD;MAED7L,KAAK,CAAC0L,aAAN,GAAsB,IAAtB;IACD;EACF,CAZD;EAcA,IAAInE,MAAM,GAAI,SAAVA,MAAMA,CAAIxG,CAAD,EAAmB;IAI9B,IAAIf,KAAK,CAAC0L,aAAN,IAAuB,CAAC3K,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAAC+K,aAA3B,CAA5B,EAAsF;MACpF,IAAIvO,KAAK,CAACwO,YAAV,EAAwB;QACtBxO,KAAK,CAACwO,YAAN,CAAmBhL,CAAnB;MACD;MAED,IAAIxD,KAAK,CAACsO,mBAAV,EAA+B;QAC7BtO,KAAK,CAACsO,mBAAN,CAA0B,KAA1B;MACD;MAED7L,KAAK,CAAC0L,aAAN,GAAsB,KAAtB;IACD;EACF,CAfD;EAiBA,OAAO;IACLC,gBAAgB,EAAE;MAChBrE,OAAO,EAAEA,OADO;MAEhBC,MAAM,EAAEA;IAFQ;EADb,CAAP;AAMD;AClDD,IAAIyE,+DAA+B,GAAG,KAAtC;AACA,IAAIC,0CAAU,GAAG,CAAjB;AAEA,SAASC,kEAATC,CAAA,EAA8C;EAC5CH,+DAA+B,GAAG,IAAlC;EAMAxP,UAAU,CAAC,YAAM;IACfwP,+DAA+B,GAAG,KAAlC;EACD,CAFS,EAEP,EAFO,CAAV;AAGD;AAED,SAASI,wDAATC,CAAkCtL,CAAlC,EAAqC;EACnC,IAAIA,CAAC,CAAC/D,WAAF,KAAkB,OAAtB,EAA+B;IAC7BkP,kEAAkC;EACnC;AACF;AAED,SAASI,sDAATC,CAAA,EAAkC;EAChC,IAAI,OAAOrQ,QAAP,KAAoB,WAAxB,EAAqC;IACnC;EACD;EAED,IAAI,OAAO6F,YAAP,KAAwB,WAA5B,EAAyC;IACvC7F,QAAQ,CAAC6N,gBAAT,CAA0B,WAA1B,EAAuCqC,wDAAvC;EACD,CAFD,MAEO;IACLlQ,QAAQ,CAAC6N,gBAAT,CAA0B,UAA1B,EAAsCmC,kEAAtC;EACD;EAEDD,0CAAU;EACV,OAAO,YAAM;IACXA,0CAAU;IACV,IAAIA,0CAAU,GAAG,CAAjB,EAAoB;MAClB;IACD;IAED,IAAI,OAAOlK,YAAP,KAAwB,WAA5B,EAAyC;MACvC7F,QAAQ,CAACsQ,mBAAT,CAA6B,WAA7B,EAA0CJ,wDAA1C;IACD,CAFD,MAEO;MACLlQ,QAAQ,CAACsQ,mBAAT,CAA6B,UAA7B,EAAyCN,kEAAzC;IACD;EACF,CAXD;AAYD;OAMM,SAASO,QAATA,CAAkBlP,KAAlB,EAAkD;EACvD,IACEmP,YADE,GAKAnP,KALJ,CACEmP,YADE;IAEFC,aAFE,GAKApP,KALJ,CAEEoP,aAFE;IAGFC,UAHE,GAKArP,KALJ,CAGEqP,UAHE;IAIFrO,UAAA,GACEhB,KALJ,CAIEgB,UAAA;EAGF,IAAAsO,UAAA,GAA8B7N,QAAQ,CAAC,KAAD,CAAtC;IAAA8N,UAAA,GAAA5N,cAAA,CAAA2N,UAAA;IAAKE,SAAD,GAAAD,UAAA;IAAYE,UAAZ,GAAAF,UAAA;EACJ,IAAI9M,KAAK,GAAGnB,MAAM,CAAC;IACjBkO,SAAS,EAAE,KADM;IAEjB3N,yBAAyB,EAAE,KAFV;IAGjBpC,WAAW,EAAE,EAHI;IAIjBwC,MAAM,EAAE;EAJS,CAAD,CAAN,CAKTV,OALH;EAOAyE,SAAS,CAAC+I,sDAAD,EAAyB,EAAzB,CAAT;EAEA,IAAAW,QAAA,GAAoClN,OAAO,CAAC,YAAM;MAChD,IAAImN,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAItQ,KAAD,EAAQI,WAAR,EAAwB;QAC9CgD,KAAK,CAAChD,WAAN,GAAoBA,WAApB;QACA,IAAIuB,UAAU,IAAIvB,WAAW,KAAK,OAA9B,IAAyCgD,KAAK,CAAC+M,SAA/C,IAA4D,CAACnQ,KAAK,CAACyD,aAAN,CAAoBe,QAApB,CAA6BxE,KAAK,CAAC4C,MAAnC,CAAjE,EAA6G;UAC3G;QACD;QAEDQ,KAAK,CAAC+M,SAAN,GAAkB,IAAlB;QACA,IAAIvN,MAAM,GAAG5C,KAAK,CAAC4C,MAAnB;QACAQ,KAAK,CAACR,MAAN,GAAeA,MAAf;QAEA,IAAIkN,YAAJ,EAAkB;UAChBA,YAAY,CAAC;YACXtM,IAAI,EAAE,YADK;YAEXZ,MAFW,EAEXA,MAFW;YAGXxC,WAAA,EAAAA;UAHW,CAAD,CAAZ;QAKD;QAED,IAAI2P,aAAJ,EAAmB;UACjBA,aAAa,CAAC,IAAD,CAAb;QACD;QAEDK,UAAU,CAAC,IAAD,CAAV;MACD,CAvBD;MAyBA,IAAIG,eAAe,GAAG,SAAlBA,eAAeA,CAAIvQ,KAAD,EAAQI,WAAR,EAAwB;QAC5CgD,KAAK,CAAChD,WAAN,GAAoB,EAApB;QACAgD,KAAK,CAACR,MAAN,GAAe,IAAf;QAEA,IAAIxC,WAAW,KAAK,OAAhB,IAA2B,CAACgD,KAAK,CAAC+M,SAAtC,EAAiD;UAC/C;QACD;QAED/M,KAAK,CAAC+M,SAAN,GAAkB,KAAlB;QACA,IAAIvN,MAAM,GAAG5C,KAAK,CAAC4C,MAAnB;QACA,IAAIoN,UAAJ,EAAgB;UACdA,UAAU,CAAC;YACTxM,IAAI,EAAE,UADG;YAETZ,MAFS,EAETA,MAFS;YAGTxC,WAAA,EAAAA;UAHS,CAAD,CAAV;QAKD;QAED,IAAI2P,aAAJ,EAAmB;UACjBA,aAAa,CAAC,KAAD,CAAb;QACD;QAEDK,UAAU,CAAC,KAAD,CAAV;MACD,CAvBD;MAyBA,IAAII,UAAuC,GAAG,EAA9C;MAEA,IAAI,OAAOrL,YAAP,KAAwB,WAA5B,EAAyC;QACvCqL,UAAU,CAACC,cAAX,GAA6B,UAAAtM,CAAD,EAAO;UACjC,IAAIiL,+DAA+B,IAAIjL,CAAC,CAAC/D,WAAF,KAAkB,OAAzD,EAAkE;YAChE;UACD;UAEDkQ,iBAAiB,CAACnM,CAAD,EAAIA,CAAC,CAAC/D,WAAN,CAAjB;QACD,CAND;QAQAoQ,UAAU,CAACE,cAAX,GAA6B,UAAAvM,CAAD,EAAO;UACjC,IAAI,CAACxC,UAAD,IAAewC,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAnB,EAAsE;YACpE2N,eAAe,CAACpM,CAAD,EAAIA,CAAC,CAAC/D,WAAN,CAAf;UACD;QACF,CAJD;MAKD,CAdD,MAcO;QACLoQ,UAAU,CAACvK,YAAX,GAA0B,YAAM;UAC9B7C,KAAK,CAACZ,yBAAN,GAAkC,IAAlC;QACD,CAFD;QAIAgO,UAAU,CAACzK,YAAX,GAA2B,UAAA5B,CAAD,EAAO;UAC/B,IAAI,CAACf,KAAK,CAACZ,yBAAP,IAAoC,CAAC4M,+DAAzC,EAA0E;YACxEkB,iBAAiB,CAACnM,CAAD,EAAI,OAAJ,CAAjB;UACD;UAEDf,KAAK,CAACZ,yBAAN,GAAkC,KAAlC;QACD,CAND;QAQAgO,UAAU,CAACxK,YAAX,GAA2B,UAAA7B,CAAD,EAAO;UAC/B,IAAI,CAACxC,UAAD,IAAewC,CAAC,CAACV,aAAF,CAAgBe,QAAhB,CAAyBL,CAAC,CAACvB,MAA3B,CAAnB,EAAsE;YACpE2N,eAAe,CAACpM,CAAD,EAAI,OAAJ,CAAf;UACD;QACF,CAJD;MAKD;MACD,OAAO;QAACqM,UAAD,EAACA,UAAD;QAAaD,eAAA,EAAAA;MAAb,CAAP;IACD,CAvF0C,EAuFxC,CAACT,YAAD,EAAeC,aAAf,EAA8BC,UAA9B,EAA0CrO,UAA1C,EAAsDyB,KAAtD,CAvFwC,CAA3C;IAAKoN,UAAD,GAAAH,QAAA,CAACG,UAAD;IAAaD,eAAA,GAAAF,QAAA,CAAAE,eAAA;EAyFjB5J,SAAS,CAAC,YAAM;IAGd,IAAIhF,UAAJ,EAAgB;MACd4O,eAAe,CAAC;QAAC3N,MAAM,EAAEQ,KAAK,CAACR;MAAf,CAAD,EAAyBQ,KAAK,CAAChD,WAA/B,CAAf;IACD;EACF,CANQ,EAMN,CAACuB,UAAD,CANM,CAAT;EAQA,OAAO;IACL6O,UADK,EACLA,UADK;IAELL,SAAA,EAAAA;EAFK,CAAP;AAID;OC7KM,SAASQ,kBAATA,CAA4BhQ,KAA5B,EAAyD;EAC9D,IAAKQ,GAAD,GAA+DR,KAAnE,CAAKQ,GAAD;IAAMyP,iBAAN,GAA+DjQ,KAAnE,CAAUiQ,iBAAN;IAAyBjP,UAAzB,GAA+DhB,KAAnE,CAA6BgB,UAAzB;IAAqCkP,sBAAA,GAA0BlQ,KAAnE,CAAyCkQ,sBAAA;EACzC,IAAIC,QAAQ,GAAG7O,MAAM,CAAC;IACpB8O,aAAa,EAAE,KADK;IAEpBvO,yBAAyB,EAAE;EAFP,CAAD,CAArB;EAIA,IAAIY,KAAK,GAAG0N,QAAQ,CAAC5O,OAArB;EAEAyE,SAAS,CAAC,YAAM;IACd,IAAIvB,aAAa,GAAI,SAAjBA,aAAaA,CAAIjB,CAAD,EAAO;MACzB,IAAIxC,UAAJ,EAAgB;QACd;MACD;MACD,IAAIqP,kDAAY,CAAC7M,CAAD,EAAIhD,GAAJ,CAAZ,IAAwByP,iBAA5B,EAA+C;QAC7C,IAAIC,sBAAJ,EAA4B;UAC1BA,sBAAsB,CAAC1M,CAAD,CAAtB;QACD;QACDf,KAAK,CAAC2N,aAAN,GAAsB,IAAtB;MACD;IACF,CAVD;IAaA,IAAI,OAAO5L,YAAP,KAAwB,WAA5B,EAAyC;MACvC,IAAIM,WAAW,GAAI,SAAfA,WAAWA,CAAItB,CAAD,EAAO;QACvB,IAAIxC,UAAJ,EAAgB;UACd;QACD;QACD,IAAIyB,KAAK,CAAC2N,aAAN,IAAuBH,iBAAvB,IAA4CI,kDAAY,CAAC7M,CAAD,EAAIhD,GAAJ,CAA5D,EAAsE;UACpEiC,KAAK,CAAC2N,aAAN,GAAsB,KAAtB;UACAH,iBAAiB,CAACzM,CAAD,CAAjB;QACD;MACF,CARD;MAWA7E,QAAQ,CAAC6N,gBAAT,CAA0B,aAA1B,EAAyC/H,aAAzC,EAAwD,IAAxD;MACA9F,QAAQ,CAAC6N,gBAAT,CAA0B,WAA1B,EAAuC1H,WAAvC,EAAoD,IAApD;MAEA,OAAO,YAAM;QACXnG,QAAQ,CAACsQ,mBAAT,CAA6B,aAA7B,EAA4CxK,aAA5C,EAA2D,IAA3D;QACA9F,QAAQ,CAACsQ,mBAAT,CAA6B,WAA7B,EAA0CnK,WAA1C,EAAuD,IAAvD;MACD,CAHD;IAID,CAnBD,MAmBO;MACL,IAAIK,SAAS,GAAI,SAAbA,SAASA,CAAI3B,CAAD,EAAO;QACrB,IAAIxC,UAAJ,EAAgB;UACd;QACD;QACD,IAAIyB,KAAK,CAACZ,yBAAV,EAAqC;UACnCY,KAAK,CAACZ,yBAAN,GAAkC,KAAlC;QACD,CAFD,MAEO,IAAIY,KAAK,CAAC2N,aAAN,IAAuBH,iBAAvB,IAA4CI,kDAAY,CAAC7M,CAAD,EAAIhD,GAAJ,CAA5D,EAAsE;UAC3EiC,KAAK,CAAC2N,aAAN,GAAsB,KAAtB;UACAH,iBAAiB,CAACzM,CAAD,CAAjB;QACD;MACF,CAVD;MAYA,IAAIsC,UAAU,GAAI,SAAdA,UAAUA,CAAItC,CAAD,EAAO;QACtB,IAAIxC,UAAJ,EAAgB;UACd;QACD;QACDyB,KAAK,CAACZ,yBAAN,GAAkC,IAAlC;QACA,IAAIoO,iBAAiB,IAAIxN,KAAK,CAAC2N,aAA3B,IAA4CC,kDAAY,CAAC7M,CAAD,EAAIhD,GAAJ,CAA5D,EAAsE;UACpEiC,KAAK,CAAC2N,aAAN,GAAsB,KAAtB;UACAH,iBAAiB,CAACzM,CAAD,CAAjB;QACD;MACF,CATD;MAWA7E,QAAQ,CAAC6N,gBAAT,CAA0B,WAA1B,EAAuC/H,aAAvC,EAAsD,IAAtD;MACA9F,QAAQ,CAAC6N,gBAAT,CAA0B,SAA1B,EAAqCrH,SAArC,EAAgD,IAAhD;MACAxG,QAAQ,CAAC6N,gBAAT,CAA0B,YAA1B,EAAwC/H,aAAxC,EAAuD,IAAvD;MACA9F,QAAQ,CAAC6N,gBAAT,CAA0B,UAA1B,EAAsC1G,UAAtC,EAAkD,IAAlD;MAEA,OAAO,YAAM;QACXnH,QAAQ,CAACsQ,mBAAT,CAA6B,WAA7B,EAA0CxK,aAA1C,EAAyD,IAAzD;QACA9F,QAAQ,CAACsQ,mBAAT,CAA6B,SAA7B,EAAwC9J,SAAxC,EAAmD,IAAnD;QACAxG,QAAQ,CAACsQ,mBAAT,CAA6B,YAA7B,EAA2CxK,aAA3C,EAA0D,IAA1D;QACA9F,QAAQ,CAACsQ,mBAAT,CAA6B,UAA7B,EAAyCnJ,UAAzC,EAAqD,IAArD;MACD,CALD;IAMD;EACF,CArEQ,EAqEN,CAACmK,iBAAD,EAAoBzP,GAApB,EAAyBiC,KAAK,CAACZ,yBAA/B,EAA0DY,KAAK,CAAC2N,aAAhE,EAA+EpP,UAA/E,CArEM,CAAT;AAsED;AAED,SAASqP,kDAATC,CAAsBjR,KAAtB,EAA6BmB,GAA7B,EAAkC;EAChC,IAAInB,KAAK,CAAC8E,MAAN,GAAe,CAAnB,EAAsB;IACpB,OAAO,KAAP;EACD;EAGD,IAAI9E,KAAK,CAAC4C,MAAV,EAAkB;IAChB,IAAMsO,aAAa,GAAGlR,KAAK,CAAC4C,MAAN,CAAasO,aAAnC;IACA,IAAI,CAACA,aAAD,IAAkB,CAACA,aAAa,CAAC3R,eAAd,CAA8BiF,QAA9B,CAAuCxE,KAAK,CAAC4C,MAA7C,CAAvB,EAA6E;MAC3E,OAAO,KAAP;IACD;EACF;EAED,OAAOzB,GAAG,CAACe,OAAJ,IAAe,CAACf,GAAG,CAACe,OAAJ,CAAYsC,QAAZ,CAAqBxE,KAAK,CAAC4C,MAA3B,CAAvB;AACD;AC3GM,SAASuO,sDAATC,CAAsDvF,OAAtD,EAA0G;EAC/G,IAAI,CAACA,OAAL,EAAc;IACZ;EACD;EAED,IAAIwF,qBAAqB,GAAG,IAA5B;EACA,OAAQ,UAAAlN,CAAD,EAAU;IACf,IAAInE,KAAmB,GAAA2J,8BAAA,KAClBxF,CADkB;MAErBM,cAAc,WAAAA,eAAA,EAAG;QACfN,CAAC,CAACM,cAAF;MACD,CAJoB;MAKrB6M,kBAAkB,WAAAA,mBAAA,EAAG;QACnB,OAAOnN,CAAC,CAACmN,kBAAF,EAAP;MACD,CAPoB;MAQrB5M,eAAe,WAAAA,gBAAA,EAAG;QAChByF,OAAO,CAACoH,KAAR,CAAc,sIAAd;MACD,CAVoB;MAWrBC,mBAAmB,WAAAA,oBAAA,EAAG;QACpBH,qBAAqB,GAAG,KAAxB;MACD;IAboB,EAAvB;IAgBAxF,OAAO,CAAC7L,KAAD,CAAP;IAEA,IAAIqR,qBAAJ,EAA2B;MACzBlN,CAAC,CAACO,eAAF;IACD;EACF,CAtBD;AAuBD;OClBM,SAAS+M,WAATA,CAAqB9Q,KAArB,EAA2D;EAChE,OAAO;IACL+Q,aAAa,EAAE/Q,KAAK,CAACgB,UAAN,GAAmB,EAAnB,GAAwB;MACrC0C,SAAS,EAAE8M,sDAAA,CAAmBxQ,KAAK,CAAC0D,SAAzB,CAD0B;MAErCO,OAAO,EAAEuM,sDAAA,CAAmBxQ,KAAK,CAACiE,OAAzB;IAF4B;EADlC,CAAP;AAMD;OCTM,SAAS+M,OAATA,CAAiBhR,KAAjB,EAAgD;EACrD,IAAKiR,WAAD,GAAmCjR,KAAvC,CAAKiR,WAAD;IAAcC,MAAd,GAAmClR,KAAvC,CAAkBkR,MAAd;IAAsBC,SAAA,GAAanR,KAAvC,CAA0BmR,SAAA;EAE1B,IAAI1O,KAAK,GAAGnB,MAAM,CAIf;IAAC8P,OAAO,EAAE,KAAV;IAAiBC,YAAY,EAAE,IAA/B;IAAqCC,EAAE,EAAE;EAAzC,CAJe,CAAlB;EAMA,IAAAC,oBAAA,GAAgDnP,kBAAkB,EAAlE;IAAKC,iBAAD,GAAAkP,oBAAA,CAAClP,iBAAD;IAAoBmP,oBAAA,GAAAD,oBAAA,CAAAC,oBAAA;EAExB,IAAIC,SAAS,GAAGjP,OAAO,CAAC,YAAM;IAC5B,IAAIiP,SAAsC,GAAG,EAA7C;IAEA,IAAIC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;MAChBjT,0DAAA;MACAgE,KAAK,CAAClB,OAAN,CAAc6P,OAAd,GAAwB,KAAxB;IACD,CAHD;IAIA,IAAIO,IAAI,GAAG,SAAPA,IAAIA,CAAIlS,WAAD,EAA2BmS,MAA3B,EAA2CC,MAA3C,EAA8D;MACvE,IAAID,MAAM,KAAK,CAAX,IAAgBC,MAAM,KAAK,CAA/B,EAAkC;QAChC;MACD;MAED,IAAI,CAACpP,KAAK,CAAClB,OAAN,CAAc6P,OAAnB,EAA4B;QAC1B3O,KAAK,CAAClB,OAAN,CAAc6P,OAAd,GAAwB,IAAxB;QACAH,WAAW,QAAX,YAAAA,WAAW,CAAG;UACZpO,IAAI,EAAE,WADM;UAEZpD,WAAA,EAAAA;QAFY,CAAH,CAAX;MAID;MACDyR,MAAM,CAAC;QACLrO,IAAI,EAAE,MADD;QAELpD,WAFK,EAELA,WAFK;QAGLmS,MAAM,EAAEA,MAHH;QAILC,MAAM,EAAEA;MAJH,CAAD,CAAN;IAMD,CAlBD;IAmBA,IAAIC,GAAG,GAAI,SAAPA,GAAGA,CAAIrS,WAAD,EAA8B;MACtCV,0DAAA;MACA,IAAI0D,KAAK,CAAClB,OAAN,CAAc6P,OAAlB,EAA2B;QACzBD,SAAS,QAAT,YAAAA,SAAS,CAAG;UACVtO,IAAI,EAAE,SADI;UAEVpD,WAAA,EAAAA;QAFU,CAAH,CAAT;MAID;IACF,CARD;IAUA,IAAI,OAAO+E,YAAP,KAAwB,WAA5B,EAAyC;MACvC,IAAIuN,WAAW,GAAI,SAAfA,WAAWA,CAAIvO,CAAD,EAAmB;QACnC,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAjB,EAAoB;UAClBwN,IAAI,CAAC,OAAD,EAAUnO,CAAC,CAACwO,KAAF,GAAUvP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,CAA2BW,KAA/C,EAAsDxO,CAAC,CAACyO,KAAF,GAAUxP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,CAA2BY,KAA3F,CAAJ;UACAxP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,GAA6B;YAACW,KAAK,EAAExO,CAAC,CAACwO,KAAV;YAAiBC,KAAK,EAAEzO,CAAC,CAACyO;UAA1B,CAA7B;QACD;MACF,CALD;MAMA,IAAI9M,SAAS,GAAI,SAAbA,SAASA,CAAI3B,CAAD,EAAmB;QACjC,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAjB,EAAoB;UAClB2N,GAAG,CAAC,OAAD,CAAH;UACAN,oBAAoB,CAAC9L,MAAD,EAAS,WAAT,EAAsBqM,WAAtB,EAAmC,KAAnC,CAApB;UACAP,oBAAoB,CAAC9L,MAAD,EAAS,SAAT,EAAoBP,SAApB,EAA+B,KAA/B,CAApB;QACD;MACF,CAND;MAOAsM,SAAS,CAACzM,WAAV,GAAyB,UAAAxB,CAAD,EAAyB;QAC/C,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAjB,EAAoB;UAClBuN,KAAK;UACLlO,CAAC,CAACO,eAAF;UACAP,CAAC,CAACM,cAAF;UACArB,KAAK,CAAClB,OAAN,CAAc8P,YAAd,GAA6B;YAACW,KAAK,EAAExO,CAAC,CAACwO,KAAV;YAAiBC,KAAK,EAAEzO,CAAC,CAACyO;UAA1B,CAA7B;UACA5P,iBAAiB,CAACqD,MAAD,EAAS,WAAT,EAAsBqM,WAAtB,EAAmC,KAAnC,CAAjB;UACA1P,iBAAiB,CAACqD,MAAD,EAAS,SAAT,EAAoBP,SAApB,EAA+B,KAA/B,CAAjB;QACD;MACF,CATD;MAWA,IAAIS,WAAW,GAAI,SAAfA,WAAWA,CAAIpC,CAAD,EAAmB;QAEnC,IAAI+B,KAAK,GAAG2M,kBAAA,CAAI1O,CAAC,CAACqD,cAAN,EAAsBsL,SAAtB,CAAgC,UAAAxJ,IAAA;UAAA,IAAElD,UAAA,GAAFkD,IAAA,CAAElD,UAAA;UAAF,OAAkBA,UAAU,KAAKhD,KAAK,CAAClB,OAAN,CAAc+P,EAA/C;QAAA,CAAhC,CAAZ;QACA,IAAI/L,KAAK,IAAI,CAAb,EAAgB;UACd,IAAA6M,qBAAA,GAAqB5O,CAAC,CAACqD,cAAF,CAAiBtB,KAAjB,CAArB;YAAKyM,KAAD,GAAAI,qBAAA,CAACJ,KAAD;YAAQC,KAAA,GAAAG,qBAAA,CAAAH,KAAA;UACZN,IAAI,CAAC,OAAD,EAAUK,KAAK,GAAGvP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,CAA2BW,KAA7C,EAAoDC,KAAK,GAAGxP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,CAA2BY,KAAvF,CAAJ;UACAxP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,GAA6B;YAACW,KAAD,EAACA,KAAD;YAAQC,KAAA,EAAAA;UAAR,CAA7B;QACD;MACF,CARD;MASA,IAAInM,UAAU,GAAI,SAAdA,UAAUA,CAAItC,CAAD,EAAmB;QAElC,IAAI+B,KAAK,GAAG2M,kBAAA,CAAI1O,CAAC,CAACqD,cAAN,EAAsBsL,SAAtB,CAAgC,UAAAvJ,KAAA;UAAA,IAAEnD,UAAA,GAAFmD,KAAA,CAAEnD,UAAA;UAAF,OAAkBA,UAAU,KAAKhD,KAAK,CAAClB,OAAN,CAAc+P,EAA/C;QAAA,CAAhC,CAAZ;QACA,IAAI/L,KAAK,IAAI,CAAb,EAAgB;UACduM,GAAG,CAAC,OAAD,CAAH;UACArP,KAAK,CAAClB,OAAN,CAAc+P,EAAd,GAAmB,IAAnB;UACAE,oBAAoB,CAAC9L,MAAD,EAAS,WAAT,EAAsBE,WAAtB,CAApB;UACA4L,oBAAoB,CAAC9L,MAAD,EAAS,UAAT,EAAqBI,UAArB,CAApB;UACA0L,oBAAoB,CAAC9L,MAAD,EAAS,aAAT,EAAwBI,UAAxB,CAApB;QACD;MACF,CAVD;MAWA2L,SAAS,CAACnM,YAAV,GAA0B,UAAA9B,CAAD,EAAyB;QAChD,IAAIA,CAAC,CAACqD,cAAF,CAAiBF,MAAjB,KAA4B,CAA5B,IAAiClE,KAAK,CAAClB,OAAN,CAAc+P,EAAd,IAAoB,IAAzD,EAA+D;UAC7D;QACD;QAED,IAAAe,kBAAA,GAAiC7O,CAAC,CAACqD,cAAF,CAAiB,CAAjB,CAAjC;UAAKmL,KAAD,GAAAK,kBAAA,CAACL,KAAD;UAAQC,KAAR,GAAAI,kBAAA,CAAQJ,KAAR;UAAexM,UAAA,GAAA4M,kBAAA,CAAA5M,UAAA;QACnBiM,KAAK;QACLlO,CAAC,CAACO,eAAF;QACAP,CAAC,CAACM,cAAF;QACArB,KAAK,CAAClB,OAAN,CAAc8P,YAAd,GAA6B;UAACW,KAAD,EAACA,KAAD;UAAQC,KAAA,EAAAA;QAAR,CAA7B;QACAxP,KAAK,CAAClB,OAAN,CAAc+P,EAAd,GAAmB7L,UAAnB;QACApD,iBAAiB,CAACqD,MAAD,EAAS,WAAT,EAAsBE,WAAtB,EAAmC,KAAnC,CAAjB;QACAvD,iBAAiB,CAACqD,MAAD,EAAS,UAAT,EAAqBI,UAArB,EAAiC,KAAjC,CAAjB;QACAzD,iBAAiB,CAACqD,MAAD,EAAS,aAAT,EAAwBI,UAAxB,EAAoC,KAApC,CAAjB;MACD,CAdD;IAeD,CA5DD,MA4DO;MACL,IAAIjB,aAAa,GAAI,SAAjBA,aAAaA,CAAIrB,CAAD,EAAqB;QACvC,IAAIA,CAAC,CAACoB,SAAF,KAAgBnC,KAAK,CAAClB,OAAN,CAAc+P,EAAlC,EAAsC;UAEpC,IAAI7R,WAAwB,GAAG+D,CAAC,CAAC/D,WAAF,IAAiB,OAAhD;UAKAkS,IAAI,CAAClS,WAAD,EAAc+D,CAAC,CAACwO,KAAF,GAAUvP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,CAA2BW,KAAnD,EAA0DxO,CAAC,CAACyO,KAAF,GAAUxP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,CAA2BY,KAA/F,CAAJ;UACAxP,KAAK,CAAClB,OAAN,CAAc8P,YAAd,GAA6B;YAACW,KAAK,EAAExO,CAAC,CAACwO,KAAV;YAAiBC,KAAK,EAAEzO,CAAC,CAACyO;UAA1B,CAA7B;QACD;MACF,CAXD;MAaA,IAAInN,WAAW,GAAI,SAAfA,WAAWA,CAAItB,CAAD,EAAqB;QACrC,IAAIA,CAAC,CAACoB,SAAF,KAAgBnC,KAAK,CAAClB,OAAN,CAAc+P,EAAlC,EAAsC;UAEpC,IAAI7R,WAAwB,GAAG+D,CAAC,CAAC/D,WAAF,IAAiB,OAAhD;UACAqS,GAAG,CAACrS,WAAD,CAAH;UACAgD,KAAK,CAAClB,OAAN,CAAc+P,EAAd,GAAmB,IAAnB;UACAE,oBAAoB,CAAC9L,MAAD,EAAS,aAAT,EAAwBb,aAAxB,EAAuC,KAAvC,CAApB;UACA2M,oBAAoB,CAAC9L,MAAD,EAAS,WAAT,EAAsBZ,WAAtB,EAAmC,KAAnC,CAApB;UACA0M,oBAAoB,CAAC9L,MAAD,EAAS,eAAT,EAA0BZ,WAA1B,EAAuC,KAAvC,CAApB;QACD;MACF,CAVD;MAYA2M,SAAS,CAAChN,aAAV,GAA2B,UAAAjB,CAAD,EAA2B;QACnD,IAAIA,CAAC,CAACW,MAAF,KAAa,CAAb,IAAkB1B,KAAK,CAAClB,OAAN,CAAc+P,EAAd,IAAoB,IAA1C,EAAgD;UAC9CI,KAAK;UACLlO,CAAC,CAACO,eAAF;UACAP,CAAC,CAACM,cAAF;UACArB,KAAK,CAAClB,OAAN,CAAc8P,YAAd,GAA6B;YAACW,KAAK,EAAExO,CAAC,CAACwO,KAAV;YAAiBC,KAAK,EAAEzO,CAAC,CAACyO;UAA1B,CAA7B;UACAxP,KAAK,CAAClB,OAAN,CAAc+P,EAAd,GAAmB9N,CAAC,CAACoB,SAArB;UACAvC,iBAAiB,CAACqD,MAAD,EAAS,aAAT,EAAwBb,aAAxB,EAAuC,KAAvC,CAAjB;UACAxC,iBAAiB,CAACqD,MAAD,EAAS,WAAT,EAAsBZ,WAAtB,EAAmC,KAAnC,CAAjB;UACAzC,iBAAiB,CAACqD,MAAD,EAAS,eAAT,EAA0BZ,WAA1B,EAAuC,KAAvC,CAAjB;QACD;MACF,CAXD;IAYD;IAED,IAAIwN,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIV,MAAD,EAAiBC,MAAjB,EAAoC;MAC5DH,KAAK;MACLC,IAAI,CAAC,UAAD,EAAaC,MAAb,EAAqBC,MAArB,CAAJ;MACAC,GAAG,CAAC,UAAD,CAAH;IACD,CAJD;IAMAL,SAAS,CAAC/N,SAAV,GAAuB,UAAAF,CAAD,EAAO;MAC3B,QAAQA,CAAC,CAAC6C,GAAV;QACE,KAAK,MAAL;QACA,KAAK,WAAL;UACE7C,CAAC,CAACM,cAAF;UACAN,CAAC,CAACO,eAAF;UACAuO,mBAAmB,CAAC,CAAC,CAAF,EAAK,CAAL,CAAnB;UACA;QACF,KAAK,OAAL;QACA,KAAK,YAAL;UACE9O,CAAC,CAACM,cAAF;UACAN,CAAC,CAACO,eAAF;UACAuO,mBAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;UACA;QACF,KAAK,IAAL;QACA,KAAK,SAAL;UACE9O,CAAC,CAACM,cAAF;UACAN,CAAC,CAACO,eAAF;UACAuO,mBAAmB,CAAC,CAAD,EAAI,CAAC,CAAL,CAAnB;UACA;QACF,KAAK,MAAL;QACA,KAAK,WAAL;UACE9O,CAAC,CAACM,cAAF;UACAN,CAAC,CAACO,eAAF;UACAuO,mBAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB;UACA;MAxBJ;IA0BD,CA3BD;IA6BA,OAAOb,SAAP;EACD,CA5KsB,EA4KpB,CAAChP,KAAD,EAAQwO,WAAR,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwC9O,iBAAxC,EAA2DmP,oBAA3D,CA5KoB,CAAvB;EA8KA,OAAO;IAACC,SAAA,EAAAA;EAAD,CAAP;AACD;OChMM,SAASc,cAATA,CAAwBvS,KAAxB,EAAiDQ,GAAjD,EAAoF;EACzF,IAAKmF,QAAD,GAAyB3F,KAA7B,CAAK2F,QAAD;IAAW3E,UAAA,GAAchB,KAA7B,CAAegB,UAAA;EACf,IAAIwR,eAAe,GAAGC,WAAW,CAAE,UAAAjP,CAAD,EAAO;IAEvC,IAAIA,CAAC,CAACP,OAAN,EAAe;MACb;IACD;IAGDO,CAAC,CAACM,cAAF;IACAN,CAAC,CAACO,eAAF;IAEA,IAAI4B,QAAJ,EAAc;MACZA,QAAQ,CAAC;QAACiM,MAAM,EAAEpO,CAAC,CAACoO,MAAX;QAAmBC,MAAM,EAAErO,CAAC,CAACqO;MAA7B,CAAD,CAAR;IACD;EACF,CAbgC,EAa9B,CAAClM,QAAD,CAb8B,CAAjC;EAeAK,SAAS,CAAC,YAAM;IACd,IAAI0M,IAAI,GAAGlS,GAAG,CAACe,OAAf;IACA,IAAIP,UAAJ,EAAgB;MACd;IACD;IACD0R,IAAI,CAAClG,gBAAL,CAAsB,OAAtB,EAA+BgG,eAA/B;IAEA,OAAO,YAAM;MACXE,IAAI,CAACzD,mBAAL,CAAyB,OAAzB,EAAkCuD,eAAlC;IACD,CAFD;EAGD,CAVQ,EAUN,CAACA,eAAD,EAAkBhS,GAAlB,EAAuBQ,UAAvB,CAVM,CAAT;AAWD"},"metadata":{},"sourceType":"module","externalDependencies":[]}