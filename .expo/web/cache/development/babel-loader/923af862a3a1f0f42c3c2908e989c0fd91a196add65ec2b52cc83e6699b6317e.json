{"ast":null,"code":"import { useId, useLabels } from \"@react-aria/utils\";\nexport function useLabel(props) {\n  var id = props.id,\n    label = props.label,\n    ariaLabelledby = props['aria-labelledby'],\n    ariaLabel = props['aria-label'],\n    _props$labelElementTy = props.labelElementType,\n    labelElementType = _props$labelElementTy === void 0 ? 'label' : _props$labelElementTy;\n  id = useId(id);\n  var labelId = useId();\n  var labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? ariaLabelledby + \" \" + labelId : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n  var fieldProps = useLabels({\n    id: id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  };\n}","map":{"version":3,"names":["useLabel","props","id","label","ariaLabelledby","ariaLabel","_props$labelElementTy","labelElementType","useId","labelId","labelProps","htmlFor","undefined","console","warn","fieldProps","useLabels"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\useLabel.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, LabelableProps} from '@react-types/shared';\nimport {ElementType, HTMLAttributes, LabelHTMLAttributes} from 'react';\nimport {useId, useLabels} from '@react-aria/utils';\n\ninterface LabelAriaProps extends LabelableProps, DOMProps, AriaLabelingProps {\n  /**\n   * The HTML element used to render the label, e.g. 'label', or 'span'.\n   * @default 'label'\n   */\n  labelElementType?: ElementType\n}\n\ninterface LabelAria {\n  /** Props to apply to the label container element. */\n  labelProps: LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to apply to the field container element being labeled. */\n  fieldProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for labels and their associated elements.\n * Labels provide context for user inputs.\n * @param props - The props for labels and fields.\n */\nexport function useLabel(props: LabelAriaProps): LabelAria {\n  let {\n    id,\n    label,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    labelElementType = 'label'\n  } = props;\n\n  id = useId(id);\n  let labelId = useId();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  let fieldProps = useLabels({\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n\n  return {\n    labelProps,\n    fieldProps\n  };\n}\n"],"mappings":";OAoCO,SAASA,QAATA,CAAkBC,KAAlB,EAAoD;EACzD,IACEC,EADE,GAMAD,KANJ,CACEC,EADE;IAEFC,KAFE,GAMAF,KANJ,CAEEE,KAFE;IAGiBC,cAHjB,GAMAH,KANJ,CAGE;IACcI,SAJZ,GAMAJ,KANJ,CAIE;IAAAK,qBAAA,GAEEL,KANJ,CAKEM,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,UAAAA,qBAAA;EAGrBJ,EAAE,GAAGM,KAAK,CAACN,EAAD,CAAV;EACA,IAAIO,OAAO,GAAGD,KAAK,EAAnB;EACA,IAAIE,UAAU,GAAG,EAAjB;EACA,IAAIP,KAAJ,EAAW;IACTC,cAAc,GAAGA,cAAc,GAAMA,cAAN,SAAwBK,OAAxB,GAAoCA,OAAnE;IACAC,UAAU,GAAG;MACXR,EAAE,EAAEO,OADO;MAEXE,OAAO,EAAEJ,gBAAgB,KAAK,OAArB,GAA+BL,EAA/B,GAAoCU;IAFlC,CAAb;EAID,CAND,MAMO,IAAI,CAACR,cAAD,IAAmB,CAACC,SAAxB,EAAmC;IACxCQ,OAAO,CAACC,IAAR,CAAa,sHAAb;EACD;EAED,IAAIC,UAAU,GAAGC,SAAS,CAAC;IACzBd,EADyB,EACzBA,EADyB;IAEzB,cAAcG,SAFW;IAGzB,mBAAmBD;EAHM,CAAD,CAA1B;EAMA,OAAO;IACLM,UADK,EACLA,UADK;IAELK,UAAA,EAAAA;EAFK,CAAP;AAID"},"metadata":{},"sourceType":"module","externalDependencies":[]}