{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from \"./EnsureSingleNavigator\";\nexport default function useRegisterNavigator() {\n  var _React$useState = React.useState(function () {\n      return nanoid();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    key = _React$useState2[0];\n  var container = React.useContext(SingleNavigatorContext);\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\");\n  }\n  React.useEffect(function () {\n    var register = container.register,\n      unregister = container.unregister;\n    register(key);\n    return function () {\n      return unregister(key);\n    };\n  }, [container, key]);\n  return key;\n}","map":{"version":3,"names":["React","nanoid","SingleNavigatorContext","useRegisterNavigator","_React$useState","useState","_React$useState2","_slicedToArray","key","container","useContext","undefined","Error","useEffect","register","unregister"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-navigation\\core\\lib\\module\\useRegisterNavigator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,sBAAT;AAMA,eAAe,SAASC,oBAATA,CAAA,EAAgC;EAC7C,IAAAC,eAAA,GAAcJ,KAAK,CAACK,QAAN,CAAe;MAAA,OAAMJ,MAAM,EAA3B;IAAA,EAAd;IAAAK,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,GAAD,GAAAF,gBAAA;EACN,IAAMG,SAAS,GAAGT,KAAK,CAACU,UAAN,CAAiBR,sBAAjB,CAAlB;EAEA,IAAIO,SAAS,KAAKE,SAAlB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CACJ,wFADI,CAAN;EAGD;EAEDZ,KAAK,CAACa,SAAN,CAAgB,YAAM;IACpB,IAAQC,QAAF,GAA2BL,SAAjC,CAAQK,QAAF;MAAYC,UAAA,GAAeN,SAAjC,CAAkBM,UAAA;IAElBD,QAAQ,CAACN,GAAD,CAAR;IAEA,OAAO;MAAA,OAAMO,UAAU,CAACP,GAAD,CAAvB;IAAA;EACD,CAND,EAMG,CAACC,SAAD,EAAYD,GAAZ,CANH;EAQA,OAAOA,GAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}