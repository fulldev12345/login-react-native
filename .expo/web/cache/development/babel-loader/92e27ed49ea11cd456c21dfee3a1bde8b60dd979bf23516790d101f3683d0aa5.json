{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n};\nvar open = function open(url) {\n  if (canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\nexport default Linking;","map":{"version":3,"names":["canUseDOM","invariant","initialURL","window","location","href","Linking","addEventListener","removeEventListener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","open","e","reject","_validateURL","URL","toString"],"sources":["E:/Login-UI-UX-React-Native/node_modules/react-native-web/dist/exports/Linking/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nexport default Linking;"],"mappings":"AASA,SAASA,SAAS,QAAQ,+BAA+B;AACzD,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,IAAIC,UAAU,GAAGF,SAAS,GAAGG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,EAAE;AACtD,IAAIC,OAAO,GAAG;EACZC,gBAAgB,EAAE,SAASA,gBAAgBA,CAAA,EAAG,CAAC,CAAC;EAChDC,mBAAmB,EAAE,SAASA,mBAAmBA,CAAA,EAAG,CAAC,CAAC;EACtDC,UAAU,EAAE,SAASA,UAAUA,CAAA,EAAG;IAChC,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;EAC9B,CAAC;EACDC,aAAa,EAAE,SAASA,aAAaA,CAAA,EAAG;IACtC,OAAOF,OAAO,CAACC,OAAO,CAACT,UAAU,CAAC;EACpC,CAAC;EACDW,OAAO,EAAE,SAASA,OAAOA,CAACC,GAAG,EAAE;IAC7B,IAAI;MACFC,IAAI,CAACD,GAAG,CAAC;MACT,OAAOJ,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,OAAON,OAAO,CAACO,MAAM,CAACD,CAAC,CAAC;IAC1B;EACF,CAAC;EACDE,YAAY,EAAE,SAASA,YAAYA,CAACJ,GAAG,EAAE;IACvCb,SAAS,CAAC,OAAOa,GAAG,KAAK,QAAQ,EAAE,wCAAwC,GAAGA,GAAG,CAAC;IAClFb,SAAS,CAACa,GAAG,EAAE,8BAA8B,CAAC;EAChD;AACF,CAAC;AAED,IAAIC,IAAI,GAAG,SAASA,IAAIA,CAACD,GAAG,EAAE;EAC5B,IAAId,SAAS,EAAE;IACbG,MAAM,CAACC,QAAQ,GAAG,IAAIe,GAAG,CAACL,GAAG,EAAEX,MAAM,CAACC,QAAQ,CAAC,CAACgB,QAAQ,CAAC,CAAC;EAC5D;AACF,CAAC;AAED,eAAed,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}