{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useClipboard = useClipboard;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nfunction useClipboard() {\n  var _React$useState = _react.default.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    hasCopied = _React$useState2[0],\n    setHasCopied = _React$useState2[1];\n  var _React$useState3 = _react.default.useState(''),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    value = _React$useState4[0],\n    setValue = _React$useState4[1];\n  var onCopy = function onCopy(copiedValue) {\n    return _regenerator.default.async(function onCopy$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!_reactNative.Clipboard) {\n              _context.next = 3;\n              break;\n            }\n            _context.next = 3;\n            return _regenerator.default.awrap(_reactNative.Clipboard.setString(copiedValue));\n          case 3:\n            setValue(copiedValue);\n            setHasCopied(true);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","useClipboard","_React$useState","default","useState","_React$useState2","_slicedToArray2","hasCopied","setHasCopied","_React$useState3","_React$useState4","value","setValue","onCopy","copiedValue","_regenerator","async","onCopy$","_context","prev","next","Clipboard","awrap","setString","stop","Promise"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\hooks\\useClipboard.ts"],"sourcesContent":["import React from 'react';\nimport { Clipboard } from 'react-native';\n\nexport function useClipboard() {\n  const [hasCopied, setHasCopied] = React.useState(false);\n  const [value, setValue] = React.useState<string>('');\n  const onCopy = async (copiedValue: string) => {\n    if (Clipboard) {\n      await Clipboard.setString(copiedValue);\n    }\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n  return {\n    value,\n    onCopy,\n    hasCopied,\n  };\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEO,SAASE,YAATA,CAAA,EAAwB;EAAA,IAAAC,eAAA,GACKL,MAAA,CAAAM,OAAA,CAAMC,QAAN,CAAe,KAAf,CADL;IAAAC,gBAAA,OAAAC,eAAA,CAAAH,OAAA,EAAAD,eAAA;IACtBK,SADsB,GAAAF,gBAAA;IACXG,YADW,GAAAH,gBAAA;EAAA,IAAAI,gBAAA,GAEHZ,MAAA,CAAAM,OAAA,CAAMC,QAAN,CAAuB,EAAvB,CAFG;IAAAM,gBAAA,OAAAJ,eAAA,CAAAH,OAAA,EAAAM,gBAAA;IAEtBE,KAFsB,GAAAD,gBAAA;IAEfE,QAFe,GAAAF,gBAAA;EAG7B,IAAMG,MAAM,GAAG,SAATA,MAASA,CAAOC,WAAP;IAAA,OAAAC,YAAA,CAAAZ,OAAA,CAAAa,KAAA,UAAAC,QAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAA,KACTpB,YAAA,CAAAqB,SADS;cAAAH,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAAAL,YAAA,CAAAZ,OAAA,CAAAmB,KAAA,CAELtB,YAAA,CAAAqB,SAAA,CAAUE,SAAV,CAAoBT,WAApB,CAFK;UAAA;YAIbF,QAAQ,CAACE,WAAD,CAAR;YACAN,YAAY,CAAC,IAAD,CAAZ;UALa;UAAA;YAAA,OAAAU,QAAA,CAAAM,IAAA;QAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CAAf;EAOA,OAAO;IACLd,KAAK,EAALA,KADK;IAELE,MAAM,EAANA,MAFK;IAGLN,SAAS,EAATA;EAHK,CAAP;AAKD"},"metadata":{},"sourceType":"script","externalDependencies":[]}