{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypeahead = useTypeahead;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _reducer = require(\"./reducer\");\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar stateChangeTypes = _interopRequireWildcard(require(\"./types\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _utils = require(\"./utils\");\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\nfunction useTypeahead(props) {\n  var defaultValues = (0, _extends2.default)({}, _utils.dropdownDefaultStateValues);\n  defaultValues.isOpen = (0, _utils.getDefaultValue)(props, 'isOpen');\n  var _React$useReducer = _react.default.useReducer(_reducer.useTypeaheadReducer, defaultValues),\n    _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n    state = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  var dispatchWithProps = function dispatchWithProps(object) {\n    dispatch((0, _extends2.default)({}, object, {\n      props: props\n    }));\n  };\n  var inputValue = state.inputValue,\n    isOpen = state.isOpen;\n  var items = props.items,\n    onInputValueChange = props.onInputValueChange,\n    onSelectedItemChange = props.onSelectedItemChange,\n    selectedItem = props.selectedItem,\n    itemToString = props.itemToString;\n  var isControlled = isControlledProp(props, 'selectedItem');\n  (0, _react.useEffect)(function () {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem)\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n  var onChangeText = function onChangeText(text) {\n    onInputValueChange == null ? void 0 : onInputValueChange({\n      inputValue: text\n    });\n    dispatchWithProps({\n      type: stateChangeTypes.InputChange,\n      inputValue: text\n    });\n  };\n  var handleItemSelect = function handleItemSelect(item, index) {\n    onSelectedItemChange == null ? void 0 : onSelectedItemChange(item);\n    dispatchWithProps({\n      type: stateChangeTypes.ItemClick,\n      index: index\n    });\n    _reactNative.Keyboard.dismiss();\n  };\n  var getMenuItemProps = function getMenuItemProps(item, index) {\n    return {\n      onPress: function onPress() {\n        return handleItemSelect(item, index);\n      },\n      accessible: true,\n      accessiblityRole: 'menuitem'\n    };\n  };\n  var getMenuProps = function getMenuProps() {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu',\n      accessibilityHint: \"Showing \" + items.length + \" records\"\n    };\n  };\n  var getToggleButtonProps = function getToggleButtonProps() {\n    return {\n      onPress: function onPress() {\n        dispatchWithProps({\n          type: stateChangeTypes.ToggleButtonClick\n        });\n      }\n    };\n  };\n  var getInputProps = function getInputProps(propInputVal, propOnchangeText) {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox',\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen\n      }\n    };\n  };\n  return {\n    getInputProps: getInputProps,\n    getMenuItemProps: getMenuItemProps,\n    getMenuProps: getMenuProps,\n    getToggleButtonProps: getToggleButtonProps,\n    isOpen: isOpen\n  };\n}","map":{"version":3,"names":["_reducer","require","_react","_interopRequireWildcard","stateChangeTypes","_reactNative","_utils","isControlledProp","props","key","undefined","useTypeahead","defaultValues","_extends2","default","dropdownDefaultStateValues","isOpen","getDefaultValue","_React$useReducer","useReducer","useTypeaheadReducer","_React$useReducer2","_slicedToArray2","state","dispatch","dispatchWithProps","object","inputValue","items","onInputValueChange","onSelectedItemChange","selectedItem","itemToString","isControlled","useEffect","type","ControlledPropUpdatedSelectedItem","onChangeText","text","InputChange","handleItemSelect","item","index","ItemClick","Keyboard","dismiss","getMenuItemProps","onPress","accessible","accessiblityRole","getMenuProps","accessibilityRole","accessibilityHint","length","getToggleButtonProps","ToggleButtonClick","getInputProps","propInputVal","propOnchangeText","value","accessibilityLabel","accessibilityState","expanded"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\composites\\Typeahead\\useTypeahead\\useTypeahead.ts"],"sourcesContent":["import { useTypeaheadReducer } from './reducer';\nimport React, { useEffect } from 'react';\nimport * as stateChangeTypes from './types';\nimport type { AccessibilityRole } from 'react-native';\nimport { Keyboard } from 'react-native';\nimport { dropdownDefaultStateValues, getDefaultValue } from './utils';\n\nfunction isControlledProp(props: any, key: string) {\n  return props[key] !== undefined;\n}\n\nimport type { IUseTypeaheadProps } from './types';\n\nexport function useTypeahead(props: IUseTypeaheadProps) {\n  let defaultValues = { ...dropdownDefaultStateValues };\n  defaultValues.isOpen = getDefaultValue(props, 'isOpen');\n\n  const [state, dispatch] = React.useReducer(\n    useTypeaheadReducer,\n    defaultValues\n  );\n\n  const dispatchWithProps = (object: any) => {\n    dispatch({ ...object, props });\n  };\n\n  const { inputValue, isOpen } = state;\n\n  const {\n    items,\n    onInputValueChange,\n    onSelectedItemChange,\n    selectedItem,\n    itemToString,\n  } = props;\n\n  const isControlled = isControlledProp(props, 'selectedItem');\n\n  useEffect(() => {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem),\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n\n  const onChangeText = (text: string) => {\n    onInputValueChange?.({ inputValue: text });\n    dispatchWithProps({ type: stateChangeTypes.InputChange, inputValue: text });\n  };\n\n  const handleItemSelect = (item: any, index: number) => {\n    onSelectedItemChange?.(item);\n    dispatchWithProps({ type: stateChangeTypes.ItemClick, index });\n    Keyboard.dismiss();\n  };\n\n  const getMenuItemProps = (item: any, index: number) => {\n    return {\n      onPress: () => handleItemSelect(item, index),\n      accessible: true,\n      accessiblityRole: 'menuitem' as AccessibilityRole,\n    };\n  };\n\n  const getMenuProps = () => {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu' as AccessibilityRole,\n      accessibilityHint: `Showing ${items.length} records`,\n    };\n  };\n\n  const getToggleButtonProps = () => {\n    return {\n      onPress: () => {\n        dispatchWithProps({ type: stateChangeTypes.ToggleButtonClick });\n      },\n    };\n  };\n\n  const getInputProps = (propInputVal?: any, propOnchangeText?: any) => {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox' as AccessibilityRole,\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen,\n      },\n    };\n  };\n\n  return {\n    getInputProps,\n    getMenuItemProps,\n    getMenuProps,\n    getToggleButtonProps,\n    isOpen,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}