{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar linkToHREF = function linkToHREF(URL) {\n  _reactNative.Linking.openURL(URL).catch(function (err) {\n    return console.error('An error occurred', err);\n  });\n};\nvar addOnPressFunctionality = function addOnPressFunctionality(href, callback) {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : function () {};\n};\nfunction useLink(props) {\n  var href = props.href,\n    isExternal = props.isExternal,\n    _onPress = props.onPress,\n    _ref = props._ref;\n  var platformLinkProps = {};\n  if (_reactNative.Platform.OS === 'web') {\n    platformLinkProps = {\n      href: href,\n      onClick: _onPress\n    };\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: function onPress() {\n        addOnPressFunctionality(href, _onPress);\n      }\n    };\n  }\n  return {\n    linkProps: (0, _extends2.default)({}, platformLinkProps, {\n      accessibilityRole: 'link',\n      accessible: true\n    })\n  };\n}","map":{"version":3,"names":["_reactNative","require","linkToHREF","URL","Linking","openURL","catch","err","console","error","addOnPressFunctionality","href","callback","useLink","props","isExternal","_onPress","onPress","_ref","platformLinkProps","Platform","OS","onClick","current","target","linkProps","_extends2","default","accessibilityRole","accessible"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\primitives\\Link\\useLink.ts"],"sourcesContent":["import { Linking, Platform } from 'react-native';\nimport type { IUseLinkProp } from './types';\nimport type { AccessibilityRole } from 'react-native';\n\nconst linkToHREF = (URL: string) => {\n  Linking.openURL(URL).catch((err) => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (href: string | any, callback: any) => {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nexport function useLink(props: IUseLinkProp) {\n  const { href, isExternal, onPress, _ref } = props;\n\n  let platformLinkProps = {};\n\n  if (Platform.OS === 'web') {\n    platformLinkProps = {\n      href,\n      onClick: onPress,\n    };\n    // Adding target to a tag created by RN-Web\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: () => {\n        addOnPressFunctionality(href, onPress);\n      },\n    };\n  }\n\n  return {\n    linkProps: {\n      ...platformLinkProps,\n      accessibilityRole: 'link' as AccessibilityRole,\n      accessible: true,\n    },\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAaA,CAACC,GAAD,EAAiB;EAClCH,YAAA,CAAAI,OAAA,CAAQC,OAAR,CAAgBF,GAAhB,EAAqBG,KAArB,CAA2B,UAACC,GAAD;IAAA,OAASC,OAAO,CAACC,KAAR,CAAc,mBAAd,EAAmCF,GAAnC,CAAT;EAAA,CAA3B;AACD,CAFD;AAIA,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0BA,CAACC,IAAD,EAAqBC,QAArB,EAAuC;EACrED,IAAI,GAAGT,UAAU,CAACS,IAAD,CAAb,GAAsB,EAA1B;EACAC,QAAQ,GAAGA,QAAQ,EAAX,GAAgB,YAAM,CAAE,CAAhC;AACD,CAHD;AAKO,SAASC,OAATA,CAAiBC,KAAjB,EAAsC;EAAA,IACnCH,IADmC,GACCG,KADD,CACnCH,IADmC;IAC7BI,UAD6B,GACCD,KADD,CAC7BC,UAD6B;IACjBC,QADiB,GACCF,KADD,CACjBG,OADiB;IACRC,IADQ,GACCJ,KADD,CACRI,IADQ;EAG3C,IAAIC,iBAAiB,GAAG,EAAxB;EAEA,IAAInB,YAAA,CAAAoB,QAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;IACzBF,iBAAiB,GAAG;MAClBR,IAAI,EAAJA,IADkB;MAElBW,OAAO,EAAEN;IAFS,CAApB;IAKA,IAAID,UAAU,IAAIG,IAAI,CAACK,OAAvB,EAAgC;MAC9BL,IAAI,CAACK,OAAL,CAAaC,MAAb,GAAsB,QAAtB;IACD;EACF,CATD,MASO;IACLL,iBAAiB,GAAG;MAClBF,OAAO,EAAE,SAAAA,QAAA,EAAM;QACbP,uBAAuB,CAACC,IAAD,EAAOK,QAAP,CAAvB;MACD;IAHiB,CAApB;EAKD;EAED,OAAO;IACLS,SAAS,MAAAC,SAAA,CAAAC,OAAA,MACJR,iBADI;MAEPS,iBAAiB,EAAE,MAFZ;MAGPC,UAAU,EAAE;IAHL;EADJ,CAAP;AAOD"},"metadata":{},"sourceType":"script","externalDependencies":[]}