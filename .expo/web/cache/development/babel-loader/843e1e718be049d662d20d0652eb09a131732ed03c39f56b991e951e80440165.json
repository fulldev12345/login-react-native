{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\nvar _Pressable = require(\"../../primitives/Pressable\");\nvar _MenuContext = require(\"./MenuContext\");\nvar _useMenu = require(\"./useMenu\");\nvar _utils = require(\"../../../utils\");\nvar _this = this,\n  _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/components/composites/Menu/MenuItem.tsx\";\nvar MenuItem = function MenuItem(_ref, ref) {\n  var children = _ref.children,\n    _onPress = _ref.onPress,\n    style = _ref.style,\n    textValue = _ref.textValue,\n    props = (0, _objectWithoutProperties2.default)(_ref, [\"children\", \"onPress\", \"style\", \"textValue\"]);\n  var _React$useContext = _react.default.useContext(_MenuContext.MenuContext),\n    closeOnSelect = _React$useContext.closeOnSelect,\n    onClose = _React$useContext.onClose;\n  var menuItemRef = _react.default.useRef(null);\n  var mergedRef = (0, _utils.mergeRefs)([menuItemRef, ref]);\n  var newProps = (0, _useThemeProps.usePropsResolution)('MenuItem', props);\n  var _React$useState = _react.default.useState(''),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    textContent = _React$useState2[0],\n    setTextContent = _React$useState2[1];\n  _react.default.useEffect(function () {\n    var menuItem = menuItemRef.current;\n    if (menuItem) {\n      var _menuItem$textContent;\n      setTextContent(((_menuItem$textContent = menuItem.textContent) != null ? _menuItem$textContent : '').trim());\n    }\n  }, [children]);\n  var allProps = (0, _extends2.default)({}, newProps, newProps.isDisabled ? newProps._disabled : {});\n  var _text = allProps._text,\n    _pressed = allProps._pressed,\n    _focus = allProps._focus,\n    touchProps = (0, _objectWithoutProperties2.default)(allProps, [\"_text\", \"_pressed\", \"_focus\"]);\n  var menuItemProps = (0, _useMenu.useMenuItem)({\n    textValue: textValue != null ? textValue : textContent,\n    ref: menuItemRef\n  });\n  return _react.default.createElement(_Pressable.Pressable, (0, _extends2.default)({\n    _pressed: _pressed,\n    _focus: _focus\n  }, menuItemProps, touchProps, {\n    ref: mergedRef,\n    style: style,\n    disabled: props.isDisabled,\n    accessibilityState: {\n      disabled: props.isDisabled\n    },\n    onPress: function onPress(e) {\n      if (!props.isDisabled) {\n        _onPress && _onPress(e);\n        if (closeOnSelect) {\n          onClose && onClose();\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_react.default.Fragment, null, _react.default.Children.map(children, function (child, index) {\n    if (typeof child === 'string') {\n      return _react.default.createElement(_Text.default, (0, _extends2.default)({}, _text, {\n        key: \"menu-item-\" + index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }), child);\n    } else {\n      return child;\n    }\n  })));\n};\nvar _default = (0, _react.memo)((0, _react.forwardRef)(MenuItem));\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_Text","_interopRequireDefault","_useThemeProps","_Pressable","_MenuContext","_useMenu","_utils","MenuItem","_ref","ref","children","_onPress","onPress","style","textValue","props","_objectWithoutProperties2","default","_React$useContext","useContext","MenuContext","closeOnSelect","onClose","menuItemRef","useRef","mergedRef","mergeRefs","newProps","usePropsResolution","_React$useState","useState","_React$useState2","_slicedToArray2","textContent","setTextContent","useEffect","menuItem","current","_menuItem$textContent","trim","allProps","_extends2","isDisabled","_disabled","_text","_pressed","_focus","touchProps","menuItemProps","useMenuItem","createElement","Pressable","disabled","accessibilityState","e","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","Children","map","child","index","key","memo","forwardRef"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\composites\\Menu\\MenuItem.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IMenuItemProps } from './types';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\n\nconst MenuItem = (\n  { children, onPress, style, textValue, ...props }: IMenuItemProps,\n  ref: any\n) => {\n  const { closeOnSelect, onClose } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef<any>(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const newProps = usePropsResolution('MenuItem', props);\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n    if (menuItem) {\n      setTextContent((menuItem.textContent ?? '').trim());\n    }\n  }, [children]);\n\n  let allProps = {\n    ...newProps,\n    ...(newProps.isDisabled ? newProps._disabled : {}),\n  };\n  const { _text, _pressed, _focus, ...touchProps } = allProps;\n\n  const menuItemProps = useMenuItem({\n    textValue: textValue ?? textContent,\n    ref: menuItemRef,\n  });\n\n  return (\n    <Pressable\n      _pressed={_pressed}\n      _focus={_focus}\n      {...menuItemProps}\n      {...touchProps}\n      ref={mergedRef}\n      style={style}\n      disabled={props.isDisabled}\n      // TouchableHighlight doesn't announce disabled, even if disabled prop is set\n      accessibilityState={{\n        disabled: props.isDisabled,\n      }}\n      onPress={(e: any) => {\n        if (!props.isDisabled) {\n          onPress && onPress(e);\n          if (closeOnSelect) {\n            onClose && onClose();\n          }\n        }\n      }}\n    >\n      <>\n        {React.Children.map(children, (child, index: any) => {\n          if (typeof child === 'string') {\n            return (\n              <Text {..._text} key={`menu-item-${index}`}>\n                {child}\n              </Text>\n            );\n          } else {\n            return child;\n          }\n        })}\n      </>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(MenuItem));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}