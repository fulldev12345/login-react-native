{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBreadcrumbSeparator = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\nvar _this = this,\n  _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/components/composites/Breadcrumb/BreadcrumbSeparator.tsx\";\nvar getBreadcrumbSeparator = function getBreadcrumbSeparator(children, separator, props, spacing) {\n  var separatorProps = {\n    accessibilityRole: _reactNative.Platform.OS === 'web' ? 'presentation' : undefined\n  };\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    var separatorElement = separator ? typeof separator === 'string' ? _react.default.createElement(_Text.default, (0, _extends2.default)({}, separatorProps, {\n      mx: spacing != null ? spacing : 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }), separator) : _react.default.cloneElement(separator, (0, _extends2.default)({\n      mx: spacing != null ? spacing : 2\n    }, separatorProps)) : _react.default.createElement(_Text.default, (0, _extends2.default)({\n      mx: spacing != null ? spacing : 2\n    }, separatorProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }), '/');\n    var result = [];\n    if (children && children.length > 1) {\n      result = children.reduce(function (r, a) {\n        return r.concat(a, separatorElement);\n      }, [separatorElement]);\n    }\n    result = result.slice(1, -1);\n    return result.map(function (child, index) {\n      return _react.default.cloneElement(child, (0, _extends2.default)({\n        _text: (0, _extends2.default)({}, props)\n      }, props, {\n        key: \"breadcrumb-separator-\" + index\n      }));\n    });\n  } else {\n    return children;\n  }\n};\nexports.getBreadcrumbSeparator = getBreadcrumbSeparator;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Text","getBreadcrumbSeparator","children","separator","props","spacing","separatorProps","accessibilityRole","Platform","OS","undefined","Array","isArray","length","separatorElement","default","createElement","_extends2","mx","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","cloneElement","result","reduce","r","a","concat","slice","map","child","index","_text","key"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\composites\\Breadcrumb\\BreadcrumbSeparator.tsx"],"sourcesContent":["import React from 'react';\nimport { AccessibilityRole, Platform } from 'react-native';\nimport Text from '../../primitives/Text';\n\nexport const getBreadcrumbSeparator = (\n  children: JSX.Element[] | JSX.Element | any,\n  separator: string | JSX.Element | JSX.Element[] | any,\n  props: any,\n  spacing: number | undefined\n) => {\n  let separatorProps = {\n    accessibilityRole: (Platform.OS === 'web'\n      ? 'presentation'\n      : undefined) as AccessibilityRole,\n  };\n\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    const separatorElement = separator ? (\n      typeof separator === 'string' ? (\n        <Text {...separatorProps} mx={spacing ?? 2}>\n          {separator}\n        </Text>\n      ) : (\n        React.cloneElement(separator, {\n          mx: spacing ?? 2,\n          ...separatorProps,\n        })\n      )\n    ) : (\n      <Text mx={spacing ?? 2} {...separatorProps}>\n        {'/'}\n      </Text>\n    );\n    let result: any = [];\n    if (children && children.length > 1) {\n      result = children.reduce(\n        (r: any[], a: any) => r.concat(a, separatorElement),\n        [separatorElement]\n      );\n    }\n    result = result.slice(1, -1);\n    return result.map((child: any, index: number) => {\n      return React.cloneElement(child, {\n        _text: { ...props },\n        ...props,\n        key: `breadcrumb-separator-${index}`,\n      });\n    });\n  } else {\n    return children;\n  }\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAH,sBAAA,CAAAC,OAAA;;;AAEO,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyBA,CACpCC,QADoC,EAEpCC,SAFoC,EAGpCC,KAHoC,EAIpCC,OAJoC,EAKjC;EACH,IAAIC,cAAc,GAAG;IACnBC,iBAAiB,EAAGR,YAAA,CAAAS,QAAA,CAASC,EAAT,KAAgB,KAAhB,GAChB,cADgB,GAEhBC;EAHe,CAArB;EAMA,IAAIC,KAAK,CAACC,OAAN,CAAcV,QAAd,CAAJ,EAA6B;IAC3B,IAAIA,QAAQ,CAACW,MAAT,KAAoB,CAAxB,EAA2B;MACzB,OAAOX,QAAP;IACD;IACD,IAAMY,gBAAgB,GAAGX,SAAS,GAChC,OAAOA,SAAP,KAAqB,QAArB,GACEP,MAAA,CAAAmB,OAAA,CAAAC,aAAA,CAAChB,KAAA,CAAAe,OAAD,MAAAE,SAAA,CAAAF,OAAA,MAAUT,cAAV;MAA0BY,EAAE,EAAEb,OAAF,WAAEA,OAAF,GAAa,CAAzC;MAAAc,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IACGtB,SADH,CADF,GAKEP,MAAA,CAAAmB,OAAA,CAAMW,YAAN,CAAmBvB,SAAnB,MAAAc,SAAA,CAAAF,OAAA;MACEG,EAAE,EAAEb,OAAF,WAAEA,OAAF,GAAa;IADjB,GAEKC,cAFL,EAN8B,GAYhCV,MAAA,CAAAmB,OAAA,CAAAC,aAAA,CAAChB,KAAA,CAAAe,OAAD,MAAAE,SAAA,CAAAF,OAAA;MAAMG,EAAE,EAAEb,OAAF,WAAEA,OAAF,GAAa;IAArB,GAA4BC,cAA5B;MAAAa,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IACG,GADH,CAZF;IAgBA,IAAIE,MAAW,GAAG,EAAlB;IACA,IAAIzB,QAAQ,IAAIA,QAAQ,CAACW,MAAT,GAAkB,CAAlC,EAAqC;MACnCc,MAAM,GAAGzB,QAAQ,CAAC0B,MAAT,CACP,UAACC,CAAD,EAAWC,CAAX;QAAA,OAAsBD,CAAC,CAACE,MAAF,CAASD,CAAT,EAAYhB,gBAAZ,CAAtB;MAAA,CADO,EAEP,CAACA,gBAAD,CAFO,CAAT;IAID;IACDa,MAAM,GAAGA,MAAM,CAACK,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAT;IACA,OAAOL,MAAM,CAACM,GAAP,CAAW,UAACC,KAAD,EAAaC,KAAb,EAA+B;MAC/C,OAAOvC,MAAA,CAAAmB,OAAA,CAAMW,YAAN,CAAmBQ,KAAnB,MAAAjB,SAAA,CAAAF,OAAA;QACLqB,KAAK,MAAAnB,SAAA,CAAAF,OAAA,MAAOX,KAAP;MADA,GAEFA,KAFE;QAGLiC,GAAG,4BAA0BF;MAHxB,GAAP;IAKD,CANM,CAAP;EAOD,CAnCD,MAmCO;IACL,OAAOjC,QAAP;EACD;AACF,CAlDM"},"metadata":{},"sourceType":"script","externalDependencies":[]}