{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePropsResolution = usePropsResolution;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _lodash2 = _interopRequireDefault(require(\"lodash.omit\"));\nvar _lodash3 = _interopRequireDefault(require(\"lodash.isnil\"));\nvar _lodash4 = _interopRequireDefault(require(\"lodash.merge\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _useNativeBase2 = require(\"../useNativeBase\");\nvar _usePlatformProps = require(\"../usePlatformProps\");\nvar _useColorModeProps = require(\"../useColorModeProps\");\nvar _colorMode = require(\"../../core/color-mode\");\nvar _utils = require(\"./utils\");\nvar _tools = require(\"./../../theme/tools\");\nvar _base = require(\"./../../theme/base\");\nvar _useContrastText = require(\"../useContrastText\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar simplifyComponentTheme = function simplifyComponentTheme(theme, componentTheme, incomingProps, colorModeProps, currentBreakpoint) {\n  var combinedProps = (0, _extends2.default)({}, componentTheme.defaultProps, incomingProps);\n  var componentBaseStyle = {};\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle((0, _extends2.default)({\n      theme: theme\n    }, combinedProps, colorModeProps));\n  }\n  var variant = (0, _utils.resolveValueWithBreakpoint)(combinedProps.variant, currentBreakpoint, 'variant');\n  var componentVariantProps = {};\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : componentTheme.variants[variant]((0, _extends2.default)({\n      theme: theme\n    }, combinedProps, colorModeProps));\n    incomingProps.variant = undefined;\n  }\n  var size = (0, _utils.resolveValueWithBreakpoint)(combinedProps.size, currentBreakpoint, 'size');\n  var componentSizeProps = {};\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      componentSizeProps.size = componentTheme.sizes[size];\n    } else if (typeof componentTheme.sizes[size] === 'function') {\n      componentSizeProps = componentTheme.sizes[size]((0, _extends2.default)({\n        theme: theme\n      }, combinedProps, colorModeProps));\n    } else {\n      componentSizeProps = componentTheme.sizes[size];\n    }\n    incomingProps.size = undefined;\n  }\n  var componentMergedTheme = (0, _lodash4.default)({}, componentTheme.defaultProps, componentBaseStyle, componentVariantProps, componentSizeProps);\n  return componentMergedTheme;\n};\nvar propTranslator = function propTranslator(_ref) {\n  var props = _ref.props,\n    theme = _ref.theme,\n    colorModeProps = _ref.colorModeProps,\n    componentTheme = _ref.componentTheme,\n    currentBreakpoint = _ref.currentBreakpoint;\n  var translatedProps = {};\n  for (var property in props) {\n    if (property.startsWith('_')) {\n      var nestedTranslatedProps = propTranslator({\n        props: props[property],\n        theme: theme,\n        colorModeProps: colorModeProps,\n        componentTheme: componentTheme,\n        currentBreakpoint: currentBreakpoint\n      });\n      translatedProps[property] = nestedTranslatedProps;\n    } else if (_base.themePropertyMap[property]) {\n      var propValues = (0, _utils.extractPropertyFromFunction)(property, props, theme, componentTheme);\n      if (typeof propValues === 'string' || typeof propValues === 'number') {\n        translatedProps[property] = propValues;\n      } else if (!(0, _lodash3.default)(propValues)) {\n        for (var nestedProp in propValues) {\n          translatedProps[nestedProp] = (0, _lodash.default)(theme, _base.themePropertyMap[nestedProp] + \".\" + propValues[nestedProp], propValues[nestedProp]);\n        }\n        delete translatedProps[property];\n      } else if (property === 'shadow') {\n        var resolveValueWithBreakpointValue = (0, _utils.resolveValueWithBreakpoint)(props.shadow, currentBreakpoint, property);\n        var shadowProps = theme[_base.themePropertyMap[property]](colorModeProps)[resolveValueWithBreakpointValue];\n        translatedProps.style = (0, _lodash4.default)({}, shadowProps, props.style);\n        delete translatedProps[property];\n      } else {\n        translatedProps[property] = (0, _utils.resolveValueWithBreakpoint)(props[property], currentBreakpoint, property);\n      }\n    } else {\n      translatedProps[property] = (0, _utils.resolveValueWithBreakpoint)(props[property], currentBreakpoint, property);\n    }\n  }\n  return translatedProps;\n};\nfunction usePropsResolution(component, incomingProps, config) {\n  var _useWindowDimensions, _componentThemeIntegr, _componentThemeIntegr2, _componentThemeIntegr3, _componentThemeIntegr4, _ref2, _translatedProps$bg, _translatedProps$_tex;\n  var _extractInObject = (0, _tools.extractInObject)(incomingProps, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config == null ? void 0 : config.ignoreProps) || [])),\n    _extractInObject2 = (0, _slicedToArray2.default)(_extractInObject, 2),\n    ignoredProps = _extractInObject2[0],\n    cleanIncomingProps = _extractInObject2[1];\n  var _useNativeBase = (0, _useNativeBase2.useNativeBase)(),\n    theme = _useNativeBase.theme;\n  var colorModeProps = (0, _colorMode.useColorMode)();\n  var componentTheme = (0, _lodash.default)(theme, \"components.\" + component, {});\n  var notComponentTheme = (0, _lodash2.default)(theme, ['components']);\n  var windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) == null ? void 0 : _useWindowDimensions.width;\n  var currentBreakpoint = _react.default.useMemo(function () {\n    return (0, _tools.getClosestBreakpoint)(theme.breakpoints, windowWidth);\n  }, [windowWidth, theme.breakpoints]);\n  var componentThemeObject = simplifyComponentTheme(notComponentTheme, componentTheme, cleanIncomingProps, colorModeProps, currentBreakpoint);\n  var componentThemeIntegratedProps = (0, _lodash4.default)({}, (0, _useColorModeProps.useColorModeProps)((0, _usePlatformProps.usePlatformProps)(componentThemeObject)), (0, _useColorModeProps.useColorModeProps)((0, _usePlatformProps.usePlatformProps)(cleanIncomingProps)));\n  var ignore = [];\n  if ((_componentThemeIntegr = componentThemeIntegratedProps.bg) != null && _componentThemeIntegr.linearGradient || (_componentThemeIntegr2 = componentThemeIntegratedProps.background) != null && _componentThemeIntegr2.linearGradient || (_componentThemeIntegr3 = componentThemeIntegratedProps.bgColor) != null && _componentThemeIntegr3.linearGradient || (_componentThemeIntegr4 = componentThemeIntegratedProps.backgroundColor) != null && _componentThemeIntegr4.linearGradient) {\n    var _componentThemeIntegr5, _componentThemeIntegr6, _componentThemeIntegr7;\n    var bgProp = 'bg';\n    if ((_componentThemeIntegr5 = componentThemeIntegratedProps.background) != null && _componentThemeIntegr5.linearGradient) {\n      bgProp = 'background';\n    } else if ((_componentThemeIntegr6 = componentThemeIntegratedProps.bgColor) != null && _componentThemeIntegr6.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_componentThemeIntegr7 = componentThemeIntegratedProps.backgroundColor) != null && _componentThemeIntegr7.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n    componentThemeIntegratedProps[bgProp].linearGradient.colors = componentThemeIntegratedProps[bgProp].linearGradient.colors.map(function (color) {\n      return (0, _lodash.default)(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n  var _extractInObject3 = (0, _tools.extractInObject)(componentThemeIntegratedProps, ignore),\n    _extractInObject4 = (0, _slicedToArray2.default)(_extractInObject3, 2),\n    gradientProps = _extractInObject4[0],\n    nonGradientProps = _extractInObject4[1];\n  var translatedProps = propTranslator({\n    props: nonGradientProps,\n    theme: notComponentTheme,\n    colorModeProps: colorModeProps,\n    componentTheme: componentTheme,\n    currentBreakpoint: currentBreakpoint\n  });\n  var bgColor = (_ref2 = (_translatedProps$bg = translatedProps.bg) != null ? _translatedProps$bg : translatedProps.backgroundColor) != null ? _ref2 : translatedProps.bgColor;\n  var contrastTextColor = (0, _useContrastText.useContrastText)(bgColor, translatedProps == null ? void 0 : (_translatedProps$_tex = translatedProps._text) == null ? void 0 : _translatedProps$_tex.color);\n  translatedProps._text = contrastTextColor ? (0, _extends2.default)({\n    color: contrastTextColor\n  }, translatedProps._text) : translatedProps._text;\n  var resolvedProps = (0, _tools.omitUndefined)((0, _extends2.default)({}, translatedProps, ignoredProps, gradientProps));\n  return resolvedProps;\n}","map":{"version":3,"names":["_lodash","_interopRequireDefault","require","_lodash2","_lodash3","_lodash4","_reactNative","_useNativeBase2","_usePlatformProps","_useColorModeProps","_colorMode","_utils","_tools","_base","_useContrastText","_react","simplifyComponentTheme","theme","componentTheme","incomingProps","colorModeProps","currentBreakpoint","combinedProps","_extends2","default","defaultProps","componentBaseStyle","baseStyle","variant","resolveValueWithBreakpoint","componentVariantProps","variants","undefined","size","componentSizeProps","sizes","componentMergedTheme","propTranslator","_ref","props","translatedProps","property","startsWith","nestedTranslatedProps","themePropertyMap","propValues","extractPropertyFromFunction","nestedProp","resolveValueWithBreakpointValue","shadow","shadowProps","style","usePropsResolution","component","config","_useWindowDimensions","_componentThemeIntegr","_componentThemeIntegr2","_componentThemeIntegr3","_componentThemeIntegr4","_ref2","_translatedProps$bg","_translatedProps$_tex","_extractInObject","extractInObject","concat","ignoreProps","_extractInObject2","_slicedToArray2","ignoredProps","cleanIncomingProps","_useNativeBase","useNativeBase","useColorMode","notComponentTheme","windowWidth","useWindowDimensions","width","useMemo","getClosestBreakpoint","breakpoints","componentThemeObject","componentThemeIntegratedProps","useColorModeProps","usePlatformProps","ignore","bg","linearGradient","background","bgColor","backgroundColor","_componentThemeIntegr5","_componentThemeIntegr6","_componentThemeIntegr7","bgProp","colors","map","color","_extractInObject3","_extractInObject4","gradientProps","nonGradientProps","contrastTextColor","useContrastText","_text","resolvedProps","omitUndefined"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\hooks\\useThemeProps\\usePropsResolution.tsx"],"sourcesContent":["import get from 'lodash.get';\nimport omit from 'lodash.omit';\nimport isNil from 'lodash.isnil';\nimport merge from 'lodash.merge';\nimport { useWindowDimensions } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { usePlatformProps } from '../usePlatformProps';\nimport { useColorModeProps } from '../useColorModeProps';\nimport { useColorMode } from '../../core/color-mode';\nimport {\n  resolveValueWithBreakpoint,\n  extractPropertyFromFunction,\n} from './utils';\nimport {\n  getClosestBreakpoint,\n  omitUndefined,\n  extractInObject,\n} from './../../theme/tools';\nimport { themePropertyMap } from './../../theme/base';\nimport { useContrastText } from '../useContrastText';\nimport React from 'react';\n\n/**\n * @summary Resolves, simplify and merge components specific theme.\n * @description The function extract and execute component specifc theme (i.e., `defaultProps`, `baseStyle` and `variants`) and returns a merged and simplified object.\n * @arg {string} theme - Theme object of NativeBase (without component theme).\n * @arg {object} componentTheme - Theme for specific components.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} colorModeProps - `colorMode` object.\n * @returns {object} Resolved component specific theme.\n */\nconst simplifyComponentTheme = (\n  theme: object,\n  componentTheme: {\n    defaultProps?: object;\n    baseStyle?: object | Function;\n    variants?: any | Function;\n    sizes?: any | Function;\n  },\n  incomingProps: object,\n  colorModeProps: object,\n  currentBreakpoint: number\n) => {\n  // Resolving component's defaultProps.\n\n  const combinedProps: any = {\n    ...componentTheme.defaultProps,\n    ...incomingProps,\n  };\n\n  // Resolving component's baseStyle\n  let componentBaseStyle = {};\n  if (componentTheme.baseStyle) {\n    componentBaseStyle =\n      typeof componentTheme.baseStyle !== 'function'\n        ? componentTheme.baseStyle\n        : componentTheme.baseStyle({\n            theme,\n            ...combinedProps,\n            ...colorModeProps,\n          });\n  }\n\n  const variant = resolveValueWithBreakpoint(\n    combinedProps.variant,\n    currentBreakpoint,\n    'variant'\n  );\n\n  let componentVariantProps = {};\n  // Extracting props from variant\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps =\n      typeof componentTheme.variants[variant] !== 'function'\n        ? componentTheme.variants[variant]\n        : componentTheme.variants[variant]({\n            theme,\n            ...combinedProps,\n            ...colorModeProps,\n          });\n\n    // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n    incomingProps.variant = undefined;\n  }\n\n  const size = resolveValueWithBreakpoint(\n    combinedProps.size,\n    currentBreakpoint,\n    'size'\n  );\n\n  let componentSizeProps = {};\n  // Extracting props from size\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (\n      typeof componentTheme.sizes[size] === 'string' ||\n      typeof componentTheme.sizes[size] === 'number'\n    ) {\n      //@ts-ignore\n      componentSizeProps.size = componentTheme.sizes[size];\n    }\n    // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n      componentSizeProps = componentTheme.sizes[size]({\n        theme,\n        ...combinedProps,\n        ...colorModeProps,\n      });\n    }\n    // Type - sizes: {lg: {px: 1}}. Refer button theme\n    else {\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    // We remove size from original props if we found it in the componentTheme\n    //@ts-ignore\n    incomingProps.size = undefined;\n  }\n\n  const componentMergedTheme = merge(\n    {},\n    componentTheme.defaultProps,\n    componentBaseStyle,\n    componentVariantProps,\n    componentSizeProps\n  );\n\n  return componentMergedTheme;\n};\n\n/**\n * @summary Translates the prop with it's appropriate value.\n * @description NOTE: Avoid passo  JSX and functions.\n * @arg {any} props - Props object with should be translated.\n * @arg {any} theme - Theme based on which props will be translated.\n * @arg {object} colorModeProps - `colorMode` object.\n * @arg {object} componentTheme - Theme for specific components.\n * @arg {object} windowWidth - Current width of the window / screen.\n * @returns {object} Translated props object.\n */\n// Todo - move responsive calculation in styled system\nconst propTranslator = ({\n  props,\n  theme,\n  colorModeProps,\n  componentTheme,\n  currentBreakpoint,\n}: {\n  props: any;\n  theme: any;\n  colorModeProps: object;\n  componentTheme: object;\n  currentBreakpoint: number;\n}) => {\n  let translatedProps: any = {};\n  for (const property in props) {\n    // STEP 1 - Responsive prop check and resolve\n    if (property.startsWith('_')) {\n      // STEP 1.a - Resolving _ porps\n      const nestedTranslatedProps = propTranslator({\n        props: props[property],\n        theme,\n        colorModeProps,\n        componentTheme,\n        currentBreakpoint,\n      });\n      translatedProps[property] = nestedTranslatedProps;\n    } else if (themePropertyMap[property]) {\n      // STEP 1.b Resolving themed props\n      const propValues = extractPropertyFromFunction(\n        property,\n        props,\n        theme,\n        componentTheme\n      );\n\n      // NOTE: Direct value identified.\n      if (typeof propValues === 'string' || typeof propValues === 'number') {\n        translatedProps[property] = propValues;\n        // NOTE: Nested object (excluding _props) (To be specific, only for key exist in themePropertyMap)\n      } else if (!isNil(propValues)) {\n        // TODO: This setion new needs to handle stuff differently\n        for (let nestedProp in propValues) {\n          translatedProps[nestedProp] = get(\n            theme,\n            `${themePropertyMap[nestedProp]}.${propValues[nestedProp]}`,\n            propValues[nestedProp]\n          );\n        }\n        delete translatedProps[property];\n        // Manually handeling shadow props (example of Mapped tokens)\n      } else if (property === 'shadow') {\n        const resolveValueWithBreakpointValue = resolveValueWithBreakpoint(\n          props.shadow,\n          currentBreakpoint,\n          property\n        );\n        let shadowProps = theme[themePropertyMap[property]](colorModeProps)[\n          resolveValueWithBreakpointValue\n        ];\n        translatedProps.style = merge({}, shadowProps, props.style);\n        delete translatedProps[property];\n      } else {\n        translatedProps[property] = resolveValueWithBreakpoint(\n          props[property],\n          currentBreakpoint,\n          property\n        );\n      }\n    } else {\n      // STEP 1.d Resolving Direct Values\n      translatedProps[property] = resolveValueWithBreakpoint(\n        props[property],\n        currentBreakpoint,\n        property\n      );\n    }\n  }\n\n  return translatedProps;\n};\n\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @description NOTE: Avoid passing JSX and functions.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @returns {object} Resolved props.\n */\nexport function usePropsResolution(\n  component: string,\n  incomingProps: any,\n  config?: any\n) {\n  const [ignoredProps, cleanIncomingProps] = extractInObject(\n    incomingProps,\n    ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat(\n      config?.ignoreProps || []\n    )\n  );\n\n  const { theme } = useNativeBase();\n  const colorModeProps = useColorMode();\n\n  const componentTheme = get(theme, `components.${component}`, {});\n  const notComponentTheme = omit(theme, ['components']);\n  const windowWidth = useWindowDimensions()?.width;\n\n  const currentBreakpoint = React.useMemo(\n    () => getClosestBreakpoint(theme.breakpoints, windowWidth),\n    [windowWidth, theme.breakpoints]\n  );\n\n  // TODO: using usePlatformProps here to simplify the component theme. So that on on component level it shouldn't have to maintain the Specificity.\n  const componentThemeObject = simplifyComponentTheme(\n    notComponentTheme,\n    componentTheme,\n    cleanIncomingProps,\n    colorModeProps,\n    currentBreakpoint\n  );\n  const componentThemeIntegratedProps = merge(\n    {},\n    useColorModeProps(usePlatformProps(componentThemeObject)),\n    useColorModeProps(usePlatformProps(cleanIncomingProps))\n  );\n  // const platformSpecificProps = usePlatformProps(componentThemeIntegratedProps);\n\n  // NOTE: sperating removing props while should be translated\n  let ignore: any = [];\n  if (\n    componentThemeIntegratedProps.bg?.linearGradient ||\n    componentThemeIntegratedProps.background?.linearGradient ||\n    componentThemeIntegratedProps.bgColor?.linearGradient ||\n    componentThemeIntegratedProps.backgroundColor?.linearGradient\n  ) {\n    let bgProp = 'bg';\n    if (componentThemeIntegratedProps.background?.linearGradient) {\n      bgProp = 'background';\n    } else if (componentThemeIntegratedProps.bgColor?.linearGradient) {\n      bgProp = 'bgColor';\n    } else if (componentThemeIntegratedProps.backgroundColor?.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n    componentThemeIntegratedProps[\n      bgProp\n    ].linearGradient.colors = componentThemeIntegratedProps[\n      bgProp\n    ].linearGradient.colors.map((color: string) => {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n  // NOTE: seprating bg props when linearGardiant is available\n  const [gradientProps, nonGradientProps] = extractInObject(\n    componentThemeIntegratedProps,\n    ignore\n  );\n\n  const translatedProps = propTranslator({\n    props: nonGradientProps,\n    theme: notComponentTheme,\n    colorModeProps,\n    componentTheme,\n    currentBreakpoint,\n  });\n\n  let bgColor =\n    translatedProps.bg ??\n    translatedProps.backgroundColor ??\n    translatedProps.bgColor;\n\n  const contrastTextColor = useContrastText(\n    bgColor,\n    translatedProps?._text?.color\n  );\n\n  translatedProps._text = contrastTextColor\n    ? {\n        color: contrastTextColor,\n        ...translatedProps._text,\n      }\n    : translatedProps._text;\n\n  const resolvedProps = omitUndefined({\n    ...translatedProps,\n    ...ignoredProps,\n    ...gradientProps,\n  });\n\n  return resolvedProps;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}