{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useCheckboxGroup as useCheckboxGroupWeb } from '@react-aria/checkbox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\nexport function useCheckboxGroup(props, state) {\n  var params = useCheckboxGroupWeb(props, state);\n  return {\n    labelProps: _objectSpread(_objectSpread({}, params.labelProps), mapDomPropsToRN(params.labelProps)),\n    groupProps: _objectSpread(_objectSpread({}, params.groupProps), mapDomPropsToRN(params.groupProps))\n  };\n}","map":{"version":3,"names":["useCheckboxGroup","useCheckboxGroupWeb","mapDomPropsToRN","props","state","params","labelProps","_objectSpread","groupProps"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-native-aria\\checkbox\\lib\\module\\useCheckboxGroup.web.ts"],"sourcesContent":["import { useCheckboxGroup as useCheckboxGroupWeb } from '@react-aria/checkbox';\nimport { AriaCheckboxGroupProps } from '@react-types/checkbox';\nimport { CheckboxGroupState } from '@react-stately/checkbox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\n\ninterface CheckboxGroupAria {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: any;\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(\n  props: AriaCheckboxGroupProps,\n  state: CheckboxGroupState\n): CheckboxGroupAria {\n  const params = useCheckboxGroupWeb(props, state);\n  return {\n    labelProps: {\n      ...params.labelProps,\n      ...mapDomPropsToRN(params.labelProps),\n    },\n    groupProps: {\n      ...params.groupProps,\n      ...mapDomPropsToRN(params.groupProps),\n    },\n  };\n}\n"],"mappings":";;;AAAA,SAASA,gBAAgB,IAAIC,mBAA7B,QAAwD,sBAAxD;AAGA,SAASC,eAAT,QAAgC,0BAAhC;AAeA,OAAO,SAASF,gBAATA,CACLG,KADK,EAELC,KAFK,EAGc;EACnB,IAAMC,MAAM,GAAGJ,mBAAmB,CAACE,KAAD,EAAQC,KAAR,CAAlC;EACA,OAAO;IACLE,UAAU,EAAAC,aAAA,CAAAA,aAAA,KACLF,MAAM,CAACC,UADA,GAEPJ,eAAe,CAACG,MAAM,CAACC,UAAR,EAHf;IAKLE,UAAU,EAAAD,aAAA,CAAAA,aAAA,KACLF,MAAM,CAACG,UADA,GAEPN,eAAe,CAACG,MAAM,CAACG,UAAR;EAPf,CAAP;AAUD"},"metadata":{},"sourceType":"module","externalDependencies":[]}