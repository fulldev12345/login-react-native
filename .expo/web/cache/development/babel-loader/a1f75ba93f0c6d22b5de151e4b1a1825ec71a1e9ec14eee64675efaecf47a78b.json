{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeBaseProvider = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _native = require(\"styled-components/native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _utils = require(\"@react-native-aria/utils\");\nvar _theme = require(\"./../theme\");\nvar _HybridProvider = _interopRequireDefault(require(\"./hybrid-overlay/HybridProvider\"));\nvar _overlays = require(\"@react-native-aria/overlays\");\nvar _Toast = require(\"../components/composites/Toast\");\nvar _NativeBaseContext = require(\"./NativeBaseContext\");\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _this = this,\n  _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/core/NativeBaseProvider.tsx\";\nvar defaultInitialWindowMetricsBasedOnPlatform = _reactNative.Platform.select({\n  web: {\n    frame: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    insets: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  },\n  default: _reactNativeSafeAreaContext.initialWindowMetrics\n});\nvar NativeBaseProvider = function NativeBaseProvider(props) {\n  var _config$theme;\n  var colorModeManager = props.colorModeManager,\n    _props$config = props.config,\n    config = _props$config === void 0 ? {} : _props$config,\n    children = props.children,\n    _props$theme = props.theme,\n    propsTheme = _props$theme === void 0 ? _theme.theme : _props$theme,\n    initialWindowMetrics = props.initialWindowMetrics;\n  var theme = (_config$theme = config.theme) != null ? _config$theme : propsTheme;\n  return _react.default.createElement(_native.ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_NativeBaseContext.NativeBaseConfigProvider, {\n    config: config,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    initialMetrics: initialWindowMetrics != null ? initialWindowMetrics : defaultInitialWindowMetricsBasedOnPlatform,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_HybridProvider.default, {\n    colorModeManager: colorModeManager,\n    options: theme.config,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_overlays.OverlayProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_Toast.ToastProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_utils.SSRProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, children)))))));\n};\nexports.NativeBaseProvider = NativeBaseProvider;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_native","_reactNativeSafeAreaContext","_utils","_theme","_HybridProvider","_overlays","_Toast","_NativeBaseContext","_reactNative","defaultInitialWindowMetricsBasedOnPlatform","Platform","select","web","frame","x","y","width","height","insets","top","left","right","bottom","default","initialWindowMetrics","NativeBaseProvider","props","_config$theme","colorModeManager","_props$config","config","children","_props$theme","theme","propsTheme","createElement","ThemeProvider","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","NativeBaseConfigProvider","SafeAreaProvider","initialMetrics","options","OverlayProvider","ToastProvider","SSRProvider"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\core\\NativeBaseProvider.tsx"],"sourcesContent":["import React from 'react';\nimport { ThemeProvider } from 'styled-components/native';\nimport {\n  SafeAreaProvider,\n  Metrics,\n  initialWindowMetrics as defaultInitialWindowMetrics,\n} from 'react-native-safe-area-context';\nimport { SSRProvider } from '@react-native-aria/utils';\nimport { theme as defaultTheme, ITheme } from './../theme';\nimport type { IColorModeProviderProps } from './color-mode';\nimport HybridProvider from './hybrid-overlay/HybridProvider';\nimport { OverlayProvider } from '@react-native-aria/overlays';\nimport { ToastProvider } from '../components/composites/Toast';\nimport {\n  INativebaseConfig,\n  NativeBaseConfigProvider,\n} from './NativeBaseContext';\nimport { Platform } from 'react-native';\n\n// For SSR to work, we need to pass initial insets as 0 values on web.\n\n// https://github.com/th3rdwave/react-native-safe-area-context/issues/132\nconst defaultInitialWindowMetricsBasedOnPlatform: Metrics | null = Platform.select(\n  {\n    web: {\n      frame: { x: 0, y: 0, width: 0, height: 0 },\n      insets: { top: 0, left: 0, right: 0, bottom: 0 },\n    },\n    default: defaultInitialWindowMetrics,\n  }\n);\n\nexport interface NativeBaseProviderProps {\n  theme?: ITheme;\n  colorModeManager?: IColorModeProviderProps['colorModeManager'];\n  children?: React.ReactNode;\n  initialWindowMetrics?: any;\n  config?: INativebaseConfig;\n  // Refer https://github.com/th3rdwave/react-native-safe-area-context#testing\n}\n\nconst NativeBaseProvider = (props: NativeBaseProviderProps) => {\n  const {\n    colorModeManager,\n    config = {},\n    children,\n    theme: propsTheme = defaultTheme,\n    initialWindowMetrics,\n  } = props;\n  const theme = config.theme ?? propsTheme;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <NativeBaseConfigProvider config={config}>\n        <SafeAreaProvider\n          initialMetrics={\n            initialWindowMetrics ?? defaultInitialWindowMetricsBasedOnPlatform\n          }\n        >\n          <HybridProvider\n            colorModeManager={colorModeManager}\n            options={theme.config}\n          >\n            <OverlayProvider>\n              <ToastProvider>\n                <SSRProvider>{children}</SSRProvider>\n              </ToastProvider>\n            </OverlayProvider>\n          </HybridProvider>\n        </SafeAreaProvider>\n      </NativeBaseConfigProvider>\n    </ThemeProvider>\n  );\n};\n\nexport { NativeBaseProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}