{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\nvar _Context = require(\"./Context\");\nvar _hooks = require(\"../../../hooks\");\nvar _utils = require(\"../../../utils\");\nvar _interactions = require(\"@react-native-aria/interactions\");\nvar _this = this,\n  _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/components/composites/Accordion/AccordionSummary.tsx\";\nvar AccordionSummary = function AccordionSummary(_ref2, ref) {\n  var children = _ref2.children,\n    props = (0, _objectWithoutProperties2.default)(_ref2, [\"children\"]);\n  var _React$useContext = _react.default.useContext(_Context.AccordionItemContext),\n    index = _React$useContext.index,\n    isOpen = _React$useContext.isOpen,\n    isDisabled = _React$useContext.isDisabled,\n    onOpen = _React$useContext.onOpen,\n    onClose = _React$useContext.onClose;\n  var _useThemeProps = (0, _hooks.useThemeProps)('AccordionSummary', props),\n    _hover = _useThemeProps._hover,\n    _expanded = _useThemeProps._expanded,\n    _disabled = _useThemeProps._disabled,\n    themedProps = (0, _objectWithoutProperties2.default)(_useThemeProps, [\"_hover\", \"_expanded\", \"_disabled\"]);\n  var pressHandler = function pressHandler() {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n  var _ref = _react.default.useRef(null);\n  var _useHover = (0, _interactions.useHover)({}, _ref),\n    isHovered = _useHover.isHovered;\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 0.2,\n    disabled: isDisabled,\n    onPress: pressHandler,\n    accessible: true,\n    accessibilityRole: \"checkbox\",\n    ref: (0, _utils.mergeRefs)([ref, _ref]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Box.default, (0, _extends2.default)({\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }, themedProps, isHovered && _hover, isOpen && _expanded, isDisabled && _disabled, !index && {\n    borderTopColor: 'transparent'\n  }, _reactNative.Platform.OS === 'web' ? {\n    disabled: isDisabled,\n    cursor: isDisabled ? 'not-allowed' : 'auto'\n  } : {}, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), children));\n};\nvar _default = _react.default.memo(_react.default.forwardRef(AccordionSummary));\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Box","_Context","_hooks","_utils","_interactions","AccordionSummary","_ref2","ref","children","props","_objectWithoutProperties2","default","_React$useContext","useContext","AccordionItemContext","index","isOpen","isDisabled","onOpen","onClose","_useThemeProps","useThemeProps","_hover","_expanded","_disabled","themedProps","pressHandler","_ref","useRef","_useHover","useHover","isHovered","createElement","TouchableOpacity","activeOpacity","disabled","onPress","accessible","accessibilityRole","mergeRefs","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends2","display","flexDirection","justifyContent","alignItems","borderTopColor","Platform","OS","cursor","memo","forwardRef"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\composites\\Accordion\\AccordionSummary.tsx"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport Box from '../../primitives/Box';\nimport type {\n  IAccordionSummaryProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\n\nconst AccordionSummary = (\n  { children, ...props }: IAccordionSummaryProps,\n  ref: any\n) => {\n  const {\n    index,\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const { _hover, _expanded, _disabled, ...themedProps } = useThemeProps(\n    'AccordionSummary',\n    props\n  );\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  return (\n    <TouchableOpacity\n      activeOpacity={0.2}\n      disabled={isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={mergeRefs([ref, _ref])}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...themedProps}\n        {...(isHovered && _hover)}\n        {...(isOpen && _expanded)}\n        {...(isDisabled && _disabled)}\n        {...(!index && { borderTopColor: 'transparent' })}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: isDisabled,\n              cursor: isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionSummary));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}