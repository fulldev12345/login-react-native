{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _hooks = require(\"../../../hooks\");\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\nvar _styledSystem = require(\"styled-system\");\nvar _customProps = require(\"../../../utils/customProps\");\nvar _nbSvg = require(\"./nbSvg\");\nvar _questionIconPath = require(\"./Icons/questionIconPath\");\nvar _this = this,\n  _jsxFileName = \"/Users/himanshusatija/projects/nativebase-v3/src/components/primitives/Icon/SVGIcon.tsx\";\nvar SVG = (0, _native.default)(_nbSvg.Svg)(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.typography, _styledSystem.position, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customLayout, _customProps.customTypography);\nvar SVGIcon = function SVGIcon(_ref, ref) {\n  var children = _ref.children,\n    props = (0, _objectWithoutProperties2.default)(_ref, [\"children\"]);\n  var _usePropsResolution = (0, _hooks.usePropsResolution)('Icon', props),\n    focusable = _usePropsResolution.focusable,\n    stroke = _usePropsResolution.stroke,\n    color = _usePropsResolution.color,\n    size = _usePropsResolution.size,\n    resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, [\"focusable\", \"stroke\", \"color\", \"size\"]);\n  var strokeHex = (0, _hooks.useToken)('colors', stroke || '');\n  var colorHex = (0, _hooks.useToken)('colors', color || '');\n  return _react.default.createElement(SVG, (0, _extends2.default)({}, resolvedProps, {\n    size: size,\n    color: colorHex,\n    stroke: strokeHex,\n    focusable: focusable,\n    accessibilityRole: \"image\",\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), _react.default.Children.count(children) > 0 ? _react.default.createElement(_nbSvg.G, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, _react.default.Children.map(children, function (child, i) {\n    var _child$key;\n    return _react.default.createElement(ChildPath, (0, _extends2.default)({\n      key: (_child$key = child == null ? void 0 : child.key) != null ? _child$key : i,\n      element: child\n    }, child == null ? void 0 : child.props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }));\n  })) : _questionIconPath.questionOutlineIconPath);\n};\nvar ChildPath = function ChildPath(_ref2) {\n  var element = _ref2.element,\n    fill = _ref2.fill,\n    pathStroke = _ref2.stroke;\n  var pathStrokeColor = (0, _hooks.useToken)('colors', pathStroke || '');\n  var fillColor = (0, _hooks.useToken)('colors', fill || '');\n  if (!element) {\n    return null;\n  }\n  return _react.default.cloneElement(element, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor\n  });\n};\nvar _default = (0, _react.memo)((0, _react.forwardRef)(SVGIcon));\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_hooks","_native","_interopRequireDefault","_styledSystem","_customProps","_nbSvg","_questionIconPath","SVG","default","Svg","color","space","layout","flexbox","border","typography","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","customTypography","SVGIcon","_ref","ref","children","props","_objectWithoutProperties2","_usePropsResolution","usePropsResolution","focusable","stroke","size","resolvedProps","strokeHex","useToken","colorHex","createElement","_extends2","accessibilityRole","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Children","count","G","map","child","i","_child$key","ChildPath","key","element","questionOutlineIconPath","_ref2","fill","pathStroke","pathStrokeColor","fillColor","cloneElement","memo","forwardRef"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\components\\primitives\\Icon\\SVGIcon.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  space,\n  typography,\n  position,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport { Svg, G } from './nbSvg';\nimport type { IIconProps } from './types';\nimport { questionOutlineIconPath } from './Icons/questionIconPath';\n\nconst SVG = styled(Svg)<IIconProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout,\n  customTypography\n);\n\nconst SVGIcon = ({ children, ...props }: IIconProps, ref: any) => {\n  const {\n    focusable,\n    stroke,\n    color,\n    size,\n    ...resolvedProps\n  } = usePropsResolution('Icon', props);\n  const strokeHex = useToken('colors', stroke || '');\n  const colorHex = useToken('colors', color || '');\n\n  return (\n    <SVG\n      {...resolvedProps}\n      // height={\n      //   newProps.size\n      //     ? parseInt(newProps.size, 10)\n      //     : parseInt(newProps.height, 10)\n      // }\n      // width={\n      //   newProps.size\n      //     ? parseInt(newProps.size, 10)\n      //     : parseInt(newProps.width, 10)\n      // }\n      size={size}\n      color={colorHex}\n      stroke={strokeHex}\n      focusable={focusable}\n      accessibilityRole=\"image\"\n      // style={style}\n      ref={ref}\n    >\n      {React.Children.count(children) > 0 ? (\n        <G>\n          {React.Children.map(children, (child, i) => (\n            <ChildPath\n              key={child?.key ?? i}\n              element={child}\n              {...child?.props}\n            />\n          ))}\n        </G>\n      ) : (\n        questionOutlineIconPath\n      )}\n    </SVG>\n  );\n};\nconst ChildPath = ({ element, fill, stroke: pathStroke }: any) => {\n  const pathStrokeColor = useToken('colors', pathStroke || '');\n  const fillColor = useToken('colors', fill || '');\n\n  if (!element) {\n    return null;\n  }\n\n  return React.cloneElement(element, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor,\n  });\n};\nexport default memo(forwardRef(SVGIcon));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}