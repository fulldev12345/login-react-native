{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useThemeProps = useThemeProps;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _lodash2 = _interopRequireDefault(require(\"lodash.omit\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _useNativeBase2 = require(\"./../useNativeBase\");\nvar _tools = require(\"./../../theme/tools/\");\nvar _filterShadowProps = require(\"./../../utils/filterShadowProps\");\nvar _utils = require(\"./utils\");\nvar filterAndCalculateProps = function filterAndCalculateProps(theme, colorModeProps, componentTheme, propsReceived, windowWidth) {\n  var _extractInObject = (0, _tools.extractInObject)(propsReceived, ['children', 'style', 'onPress', 'icon', 'onOpen', 'onClose']),\n    _extractInObject2 = (0, _slicedToArray2.default)(_extractInObject, 2),\n    ignoredProps = _extractInObject2[0],\n    props = _extractInObject2[1];\n  var newProps = (0, _utils.calculateProps)(theme, colorModeProps, componentTheme, props, windowWidth);\n  var mergedProps = (0, _filterShadowProps.filterShadowProps)(newProps, ignoredProps, _reactNative.Platform.OS);\n  return (0, _tools.omitUndefined)(mergedProps);\n};\nfunction useThemeProps(component, propsReceived) {\n  var _useWindowDimensions;\n  var _useNativeBase = (0, _useNativeBase2.useNativeBase)(),\n    theme = _useNativeBase.theme,\n    colorModeProps = (0, _objectWithoutProperties2.default)(_useNativeBase, [\"theme\"]);\n  var componentTheme = (0, _lodash.default)(theme, \"components.\" + component);\n  var windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) == null ? void 0 : _useWindowDimensions.width;\n  return filterAndCalculateProps((0, _lodash2.default)(theme, ['components']), colorModeProps, componentTheme, propsReceived, windowWidth);\n}","map":{"version":3,"names":["_lodash","_interopRequireDefault","require","_lodash2","_reactNative","_useNativeBase2","_tools","_filterShadowProps","_utils","filterAndCalculateProps","theme","colorModeProps","componentTheme","propsReceived","windowWidth","_extractInObject","extractInObject","_extractInObject2","_slicedToArray2","default","ignoredProps","props","newProps","calculateProps","mergedProps","filterShadowProps","Platform","OS","omitUndefined","useThemeProps","component","_useWindowDimensions","_useNativeBase","useNativeBase","_objectWithoutProperties2","useWindowDimensions","width"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\native-base\\lib\\commonjs\\hooks\\useThemeProps\\useProps.tsx"],"sourcesContent":["import get from 'lodash.get';\nimport omit from 'lodash.omit';\nimport { useWindowDimensions, Platform } from 'react-native';\nimport { useNativeBase } from './../useNativeBase';\nimport { omitUndefined, extractInObject } from './../../theme/tools/';\nimport { filterShadowProps } from './../../utils/filterShadowProps';\nimport { calculateProps } from './utils';\n\nconst filterAndCalculateProps = (\n  theme: any,\n  colorModeProps: any,\n  componentTheme: any,\n  propsReceived: any,\n  windowWidth: any\n) => {\n  // Extracting out children and style, as they do not contribute in props calculation\n  // This is done as these props are passed as it is later in the development\n  // Required as some of these will trigger cyclic computation which may lead to error\n  let [ignoredProps, props] = extractInObject(propsReceived, [\n    'children',\n    'style',\n    'onPress',\n    'icon',\n    'onOpen',\n    'onClose',\n  ]);\n  let newProps = calculateProps(\n    theme,\n    colorModeProps,\n    componentTheme,\n    props,\n    windowWidth\n  );\n  let mergedProps = filterShadowProps(newProps, ignoredProps, Platform.OS);\n  return omitUndefined(mergedProps);\n};\n\nexport function useThemeProps(component: string, propsReceived: any) {\n  const { theme, ...colorModeProps } = useNativeBase();\n  // console.log('THEME = ', theme);\n\n  const componentTheme = get(theme, `components.${component}`);\n  // console.log('COMPONENT THEME = ', componentTheme);\n  const windowWidth = useWindowDimensions()?.width;\n\n  // To pass the component theme props and component props seperately\n  return filterAndCalculateProps(\n    omit(theme, ['components']),\n    colorModeProps,\n    componentTheme,\n    propsReceived,\n    windowWidth\n  );\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,QAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,kBAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAEA,IAAMO,uBAAuB,GAAG,SAA1BA,uBAA0BA,CAC9BC,KAD8B,EAE9BC,cAF8B,EAG9BC,cAH8B,EAI9BC,aAJ8B,EAK9BC,WAL8B,EAM3B;EAAA,IAAAC,gBAAA,GAIyB,IAAAT,MAAA,CAAAU,eAAA,EAAgBH,aAAhB,EAA+B,CACzD,UADyD,EAEzD,OAFyD,EAGzD,SAHyD,EAIzD,MAJyD,EAKzD,QALyD,EAMzD,SANyD,CAA/B,CAJzB;IAAAI,iBAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,gBAAA;IAIEK,YAJF,GAAAH,iBAAA;IAIgBI,KAJhB,GAAAJ,iBAAA;EAYH,IAAIK,QAAQ,GAAG,IAAAd,MAAA,CAAAe,cAAA,EACbb,KADa,EAEbC,cAFa,EAGbC,cAHa,EAIbS,KAJa,EAKbP,WALa,CAAf;EAOA,IAAIU,WAAW,GAAG,IAAAjB,kBAAA,CAAAkB,iBAAA,EAAkBH,QAAlB,EAA4BF,YAA5B,EAA0ChB,YAAA,CAAAsB,QAAA,CAASC,EAAnD,CAAlB;EACA,OAAO,IAAArB,MAAA,CAAAsB,aAAA,EAAcJ,WAAd,CAAP;AACD,CA3BD;AA6BO,SAASK,aAATA,CAAuBC,SAAvB,EAA0CjB,aAA1C,EAA8D;EAAA,IAAAkB,oBAAA;EAAA,IAAAC,cAAA,GAC9B,IAAA3B,eAAA,CAAA4B,aAAA,GAD8B;IAC3DvB,KAD2D,GAAAsB,cAAA,CAC3DtB,KAD2D;IACjDC,cADiD,OAAAuB,yBAAA,CAAAf,OAAA,EAAAa,cAAA;EAInE,IAAMpB,cAAc,GAAG,IAAAZ,OAAA,CAAAmB,OAAA,EAAIT,KAAJ,kBAAyBoB,SAAzB,CAAvB;EAEA,IAAMhB,WAAW,IAAAiB,oBAAA,GAAG,IAAA3B,YAAA,CAAA+B,mBAAA,GAAH,qBAAGJ,oBAAA,CAAuBK,KAA3C;EAGA,OAAO3B,uBAAuB,CAC5B,IAAAN,QAAA,CAAAgB,OAAA,EAAKT,KAAL,EAAY,CAAC,YAAD,CAAZ,CAD4B,EAE5BC,cAF4B,EAG5BC,cAH4B,EAI5BC,aAJ4B,EAK5BC,WAL4B,CAA9B;AAOD"},"metadata":{},"sourceType":"script","externalDependencies":[]}