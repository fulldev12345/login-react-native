{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState } from \"@react-stately/utils\";\nexport function useOverlayTriggerState(props) {\n  var _useControlledState = useControlledState(props.isOpen, props.defaultOpen || false, props.onOpenChange),\n    _useControlledState2 = _slicedToArray(_useControlledState, 2),\n    isOpen = _useControlledState2[0],\n    setOpen = _useControlledState2[1];\n  return {\n    isOpen: isOpen,\n    open: function open() {\n      setOpen(true);\n    },\n    close: function close() {\n      setOpen(false);\n    },\n    toggle: function toggle() {\n      setOpen(!isOpen);\n    }\n  };\n}","map":{"version":3,"names":["useOverlayTriggerState","props","_useControlledState","useControlledState","isOpen","defaultOpen","onOpenChange","_useControlledState2","_slicedToArray","setOpen","open","close","toggle"],"sources":["E:\\Login-UI-UX-React-Native\\node_modules\\@react-stately\\overlays\\dist\\packages\\@react-stately\\overlays\\src\\useOverlayTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {OverlayTriggerProps} from '@react-types/overlays';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface OverlayTriggerState {\n  /** Whether the overlay is currently open. */\n  readonly isOpen: boolean,\n  /** Opens the overlay. */\n  open(): void,\n  /** Closes the overlay. */\n  close(): void,\n  /** Toggles the overlay's visibility. */\n  toggle(): void\n}\n\n/**\n * Manages state for an overlay trigger. Tracks whether the overlay is open, and provides\n * methods to toggle this state.\n */\nexport function useOverlayTriggerState(props: OverlayTriggerProps): OverlayTriggerState  {\n  let [isOpen, setOpen] = useControlledState(props.isOpen, props.defaultOpen || false, props.onOpenChange);\n\n  return {\n    isOpen,\n    open() {\n      setOpen(true);\n    },\n    close() {\n      setOpen(false);\n    },\n    toggle() {\n      setOpen(!isOpen);\n    }\n  };\n}\n"],"mappings":";;OA8BO,SAASA,sBAATA,CAAgCC,KAAhC,EAAkF;EACvF,IAAAC,mBAAA,GAAwBC,kBAAkB,CAACF,KAAK,CAACG,MAAP,EAAeH,KAAK,CAACI,WAAN,IAAqB,KAApC,EAA2CJ,KAAK,CAACK,YAAjD,CAA1C;IAAAC,oBAAA,GAAAC,cAAA,CAAAN,mBAAA;IAAKE,MAAD,GAAAG,oBAAA;IAASE,OAAT,GAAAF,oBAAA;EAEJ,OAAO;IACLH,MADK,EACLA,MADK;IAELM,IAAI,WAAAA,KAAA,EAAG;MACLD,OAAO,CAAC,IAAD,CAAP;IACD,CAJI;IAKLE,KAAK,WAAAA,MAAA,EAAG;MACNF,OAAO,CAAC,KAAD,CAAP;IACD,CAPI;IAQLG,MAAM,WAAAA,OAAA,EAAG;MACPH,OAAO,CAAC,CAACL,MAAF,CAAP;IACD;EAVI,CAAP;AAYD"},"metadata":{},"sourceType":"module","externalDependencies":[]}